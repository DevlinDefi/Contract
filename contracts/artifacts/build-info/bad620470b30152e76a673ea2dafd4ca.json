{
	"id": "bad620470b30152e76a673ea2dafd4ca",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTStake.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2022-02-14\r\n*/\r\n\r\n/**\r\n *Submitted for verification at BscScan.com on 2022-01-13\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function mint(address account, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    event Mint(address indexed minter, address indexed to, uint256 amount);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ninterface IMigratorChef {\r\n    function migrate(IERC20 token) external returns (IERC20);\r\n}\r\n\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\ninterface INFTMasterChef {\r\n    function enterStaking(uint256 _amount, address _account) external;\r\n}\r\n\r\n// MasterChef is the master of DDT. He can make DDT and he is a fair guy.\r\n//\r\n// Note that it's ownable and the owner wields tremendous DDT. The ownership\r\n// will be transferred to a governance smart contract once DDT is sufficiently\r\n// distributed and the community can show to govern itself.\r\n//\r\n// Have fun reading it. Hopefully it's bug-free. God bless.\r\ncontract NFTStake is Ownable, IERC721Receiver {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256[] tokenIds;\r\n        uint256 amount; // How many LP tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n        //\r\n        // We do some fancy math here. Basically, any point in time, the amount of DDTs\r\n        // entitled to a user but is pending to be distributed is:\r\n        //\r\n        //   pending reward = (user.amount * pool.accDDTPerShare) - user.rewardDebt\r\n        //\r\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n        //   1. The pool's `accDDTPerShare` (and `lastRewardBlock`) gets updated.\r\n        //   2. User receives the pending reward sent to his/her address.\r\n        //   3. User's `amount` gets updated.\r\n        //   4. User's `rewardDebt` gets updated.\r\n    }\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC721 NFTToken; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. DDTs to distribute per block.\r\n        uint256 lastRewardBlock; // Last block number that DDTs distribution occurs.\r\n        uint256 accDDTPerShare; // Accumulated DDTs per share, times 1e12. See below.\r\n    }\r\n\r\n    INFTMasterChef public NFTMasterChef;\r\n\r\n    // The DDT TOKEN!\r\n    IERC20 public DDT;\r\n    // Dev address.\r\n    address public devaddr;\r\n    // DDT tokens created per block.\r\n    uint256 public DDTPerBlock;\r\n    // Bonus muliplier for early DDT makers.\r\n    uint256 public BONUS_MULTIPLIER = 1;\r\n    // The migrator contract. It has a lot of DDT. Can only be set through governance (owner).\r\n    IMigratorChef public migrator;\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n    // The block number when DDT mining starts.\r\n    uint256 public startBlock;\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 amount\r\n    );\r\n\r\n    constructor(\r\n        IERC20 _DDT,\r\n        INFTMasterChef _NFTMasterChef,\r\n        address _devaddr,\r\n        uint256 _DDTPerBlock,\r\n        uint256 _startBlock\r\n    ) {\r\n        DDT = _DDT;\r\n        NFTMasterChef = _NFTMasterChef;\r\n        devaddr = _devaddr;\r\n        DDTPerBlock = _DDTPerBlock;\r\n        startBlock = _startBlock;\r\n    }\r\n\r\n    /**\r\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {\r\n        return this.onERC721Received.selector;\r\n    }\r\n\r\n    function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r\n        BONUS_MULTIPLIER = multiplierNumber;\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfo.length;\r\n    }\r\n\r\n    // Add a new lp to the pool. Can only be called by the owner.\r\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\r\n    function add( uint256 _allocPoint, IERC721 _NFTToken, bool _withUpdate ) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\r\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        poolInfo.push(\r\n            PoolInfo({\r\n                NFTToken: _NFTToken,\r\n                allocPoint: _allocPoint,\r\n                lastRewardBlock: lastRewardBlock,\r\n                accDDTPerShare: 0\r\n            })\r\n        );\r\n    }\r\n\r\n    // Update the given pool's DDT allocation point. Can only be called by the owner.\r\n    function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\r\n        poolInfo[_pid].allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Set the migrator contract. Can only be called by the owner.\r\n    function setMigrator(IMigratorChef _migrator) public onlyOwner {\r\n        migrator = _migrator;\r\n    }\r\n\r\n    // Return reward multiplier over the given _from to _to block.\r\n    function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r\n         return _to.sub(_from).mul(BONUS_MULTIPLIER);\r\n    }\r\n\r\n    function getUserTokenIds(uint256 _pid, address _user) public view returns (uint256[] memory) {\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        return user.tokenIds;\r\n    }\r\n\r\n    // View function to see pending DDTs on frontend.\r\n    function pendingDDT(uint256 _pid, address _user) external view returns (uint256){\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accDDTPerShare = pool.accDDTPerShare;\r\n        uint256 NFTSupply = pool.NFTToken.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && NFTSupply != 0) {\r\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n            uint256 DDTReward = multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n            accDDTPerShare = accDDTPerShare.add(DDTReward.mul(1e12).div(NFTSupply));\r\n        }\r\n        return user.amount.mul(accDDTPerShare).div(1e12).sub(user.rewardDebt);\r\n    }\r\n\r\n    // Update reward vairables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.number <= pool.lastRewardBlock) {\r\n            return;\r\n        }\r\n        uint256 NFTSupply = pool.NFTToken.balanceOf(address(this));\r\n        if (NFTSupply <= 0) {\r\n            pool.lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n        uint256 DDTReward = multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n        DDT.mint(address(this), DDTReward);\r\n        pool.accDDTPerShare = pool.accDDTPerShare.add(DDTReward.mul(1e12).div(NFTSupply));\r\n        pool.lastRewardBlock = block.number;\r\n    }\r\n\r\n    // Deposit NFT tokens to MasterChef for DDT allocation.\r\n    function deposit(uint256 _pid, uint256 _tokenId) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        updatePool(_pid);\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0){\r\n                safeDDTTransfer(msg.sender, pending);\r\n            }\r\n        }\r\n        pool.NFTToken.safeTransferFrom(address(msg.sender), address(this), _tokenId);\r\n        user.amount = user.amount.add(1);\r\n        user.rewardDebt = user.amount.mul(pool.accDDTPerShare).div(1e12);\r\n        user.tokenIds.push(_tokenId);\r\n        emit Deposit(msg.sender, _pid, _tokenId);\r\n    }\r\n\r\n    // Withdraw NFT tokens from MasterChef.\r\n    function withdraw(uint256 _pid, uint256 _tokenId) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 pending;\r\n        if(_tokenId == 0){\r\n            updatePool(_pid);\r\n            pending = user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0){\r\n                safeDDTTransfer(msg.sender, pending);\r\n            }\r\n            user.rewardDebt = user.amount.mul(pool.accDDTPerShare).div(1e12);\r\n        }else {\r\n            uint256 hasTokenId = 0;\r\n            uint256 tokenIdIndex;\r\n            for(uint256 i; i<user.tokenIds.length; i++){\r\n                if(user.tokenIds[i] == _tokenId){\r\n                    hasTokenId = 1;\r\n                    tokenIdIndex = i;\r\n                }\r\n            }\r\n            require(hasTokenId == 1, \"You are not Owner of token id\");\r\n            require(user.amount >= 1, \"withdraw: not good\");\r\n            updatePool(_pid);\r\n            pending = user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0){\r\n                safeDDTTransfer(msg.sender, pending);\r\n            }\r\n            user.amount = user.amount.sub(1);\r\n            user.rewardDebt = user.amount.mul(pool.accDDTPerShare).div(1e12);\r\n            delete user.tokenIds[tokenIdIndex];\r\n            pool.NFTToken.safeTransferFrom(address(this), address(msg.sender), _tokenId);\r\n        }\r\n        emit Withdraw(msg.sender, _pid, _tokenId);\r\n    }\r\n\r\n    function compundDDT(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        updatePool(_pid);\r\n        uint256 pending = user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt);\r\n        require(pending > 0, \"Amount is zero\");\r\n        DDT.approve(address(NFTMasterChef), pending);\r\n        NFTMasterChef.enterStaking(pending, msg.sender);\r\n        user.rewardDebt = user.amount.mul(pool.accDDTPerShare).div(1e12);\r\n        emit Withdraw(msg.sender, _pid, pending);\r\n    }\r\n\r\n    // Safe DDT transfer function, just in case if rounding error causes pool to not have enough DDTs.\r\n    function safeDDTTransfer(address _to, uint256 _amount) internal {\r\n        uint256 DDTbal = DDT.balanceOf(address(this));\r\n        if (_amount > DDTbal) {\r\n            DDT.transfer(_to, DDTbal);\r\n        } else {\r\n            DDT.transfer(_to, _amount);\r\n        }\r\n    }\r\n\r\n    function setDevAddress(address _devaddr) public onlyOwner {\r\n        devaddr = _devaddr;\r\n    }\r\n\r\n    function updateDDTPerBlock(uint256 newAmount) public onlyOwner {\r\n        DDTPerBlock = newAmount;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/NFTStake.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStake.sol\":7883:16157  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStake.sol\":7883:16157  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208054509165e03dd64cd1da2f8d51be332da1667fbbc95a25de4f59a76b528f1e64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208054509165e03dd64cd1da2f8d51be332da1667fbbc95a25de4f59a76b528f1e64736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 SLOAD POP SWAP2 PUSH6 0xE03DD64CD1DA 0x2F DUP14 MLOAD 0xBE CALLER 0x2D LOG1 PUSH7 0x7FBBC95A25DE4F MSIZE 0xA7 PUSH12 0x528F1E64736F6C634300080F STOP CALLER ",
							"sourceMap": "7883:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208054509165e03dd64cd1da2f8d51be332da1667fbbc95a25de4f59a76b528f1e64736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 SLOAD POP SWAP2 PUSH6 0xE03DD64CD1DA 0x2F DUP14 MLOAD 0xBE CALLER 0x2D LOG1 PUSH7 0x7FBBC95A25DE4F MSIZE 0xA7 PUSH12 0x528F1E64736F6C634300080F STOP CALLER ",
							"sourceMap": "7883:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7883,
									"end": 16157,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208054509165e03dd64cd1da2f8d51be332da1667fbbc95a25de4f59a76b528f1e64736f6c634300080f0033",
									".code": [
										{
											"begin": 7883,
											"end": 16157,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 16157,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/NFTStake.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x4e6d78b399a91204caad075df19c13d42ff62c5de0ec3ee9ab6f79cd1bc8bcec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://586f5366527735d1be2884b96a86411c64bb06f418c3e9ddb5380a058e159a2c\",\"dweb:/ipfs/QmbEg3w8VaWsiEkMYZFhrPLwNY1kK8xMKW2J5S5kgad1VN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x4e6d78b399a91204caad075df19c13d42ff62c5de0ec3ee9ab6f79cd1bc8bcec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://586f5366527735d1be2884b96a86411c64bb06f418c3e9ddb5380a058e159a2c\",\"dweb:/ipfs/QmbEg3w8VaWsiEkMYZFhrPLwNY1kK8xMKW2J5S5kgad1VN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x4e6d78b399a91204caad075df19c13d42ff62c5de0ec3ee9ab6f79cd1bc8bcec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://586f5366527735d1be2884b96a86411c64bb06f418c3e9ddb5380a058e159a2c\",\"dweb:/ipfs/QmbEg3w8VaWsiEkMYZFhrPLwNY1kK8xMKW2J5S5kgad1VN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x4e6d78b399a91204caad075df19c13d42ff62c5de0ec3ee9ab6f79cd1bc8bcec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://586f5366527735d1be2884b96a86411c64bb06f418c3e9ddb5380a058e159a2c\",\"dweb:/ipfs/QmbEg3w8VaWsiEkMYZFhrPLwNY1kK8xMKW2J5S5kgad1VN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x4e6d78b399a91204caad075df19c13d42ff62c5de0ec3ee9ab6f79cd1bc8bcec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://586f5366527735d1be2884b96a86411c64bb06f418c3e9ddb5380a058e159a2c\",\"dweb:/ipfs/QmbEg3w8VaWsiEkMYZFhrPLwNY1kK8xMKW2J5S5kgad1VN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x4e6d78b399a91204caad075df19c13d42ff62c5de0ec3ee9ab6f79cd1bc8bcec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://586f5366527735d1be2884b96a86411c64bb06f418c3e9ddb5380a058e159a2c\",\"dweb:/ipfs/QmbEg3w8VaWsiEkMYZFhrPLwNY1kK8xMKW2J5S5kgad1VN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IMigratorChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "migrate",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"migrate(address)": "ce5494bb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"IMigratorChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x4e6d78b399a91204caad075df19c13d42ff62c5de0ec3ee9ab6f79cd1bc8bcec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://586f5366527735d1be2884b96a86411c64bb06f418c3e9ddb5380a058e159a2c\",\"dweb:/ipfs/QmbEg3w8VaWsiEkMYZFhrPLwNY1kK8xMKW2J5S5kgad1VN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"INFTMasterChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "enterStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"enterStaking(uint256,address)": "849df12c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"INFTMasterChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x4e6d78b399a91204caad075df19c13d42ff62c5de0ec3ee9ab6f79cd1bc8bcec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://586f5366527735d1be2884b96a86411c64bb06f418c3e9ddb5380a058e159a2c\",\"dweb:/ipfs/QmbEg3w8VaWsiEkMYZFhrPLwNY1kK8xMKW2J5S5kgad1VN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NFTStake": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_DDT",
									"type": "address"
								},
								{
									"internalType": "contract INFTMasterChef",
									"name": "_NFTMasterChef",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_devaddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_DDTPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BONUS_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DDT",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DDTPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NFTMasterChef",
							"outputs": [
								{
									"internalType": "contract INFTMasterChef",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC721",
									"name": "_NFTToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "compundDDT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "devaddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "getMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserTokenIds",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "migrator",
							"outputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingDDT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "NFTToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accDDTPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_devaddr",
									"type": "address"
								}
							],
							"name": "setDevAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "_migrator",
									"type": "address"
								}
							],
							"name": "setMigrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "updateDDTPerBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "multiplierNumber",
									"type": "uint256"
								}
							],
							"name": "updateMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStake.sol\":28007:38495  contract NFTStake is Ownable, IERC721Receiver {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTStake.sol\":29672:29673  1 */\n  0x01\n    /* \"contracts/NFTStake.sol\":29638:29673  uint256 public BONUS_MULTIPLIER = 1 */\n  0x05\n  sstore\n    /* \"contracts/NFTStake.sol\":30113:30114  0 */\n  0x00\n    /* \"contracts/NFTStake.sol\":30080:30114  uint256 public totalAllocPoint = 0 */\n  0x09\n  sstore\n    /* \"contracts/NFTStake.sol\":30488:30828  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NFTStake.sol\":20054:20086  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"contracts/NFTStake.sol\":20073:20085  _msgSender() */\n  tag_8\n    /* \"contracts/NFTStake.sol\":20073:20083  _msgSender */\n  shl(0x20, tag_9)\n    /* \"contracts/NFTStake.sol\":20073:20085  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/NFTStake.sol\":20054:20072  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"contracts/NFTStake.sol\":20054:20086  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/NFTStake.sol\":30674:30678  _DDT */\n  dup5\n    /* \"contracts/NFTStake.sol\":30668:30671  DDT */\n  0x02\n  0x00\n    /* \"contracts/NFTStake.sol\":30668:30678  DDT = _DDT */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":30705:30719  _NFTMasterChef */\n  dup4\n    /* \"contracts/NFTStake.sol\":30689:30702  NFTMasterChef */\n  0x01\n  0x00\n    /* \"contracts/NFTStake.sol\":30689:30719  NFTMasterChef = _NFTMasterChef */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":30740:30748  _devaddr */\n  dup3\n    /* \"contracts/NFTStake.sol\":30730:30737  devaddr */\n  0x03\n  0x00\n    /* \"contracts/NFTStake.sol\":30730:30748  devaddr = _devaddr */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":30773:30785  _DDTPerBlock */\n  dup2\n    /* \"contracts/NFTStake.sol\":30759:30770  DDTPerBlock */\n  0x04\n    /* \"contracts/NFTStake.sol\":30759:30785  DDTPerBlock = _DDTPerBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":30809:30820  _startBlock */\n  dup1\n    /* \"contracts/NFTStake.sol\":30796:30806  startBlock */\n  0x0a\n    /* \"contracts/NFTStake.sol\":30796:30820  startBlock = _startBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":30488:30828  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/NFTStake.sol\":28007:38495  contract NFTStake is Ownable, IERC721Receiver {... */\n  jump(tag_12)\n    /* \"contracts/NFTStake.sol\":19549:19647  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"contracts/NFTStake.sol\":19602:19609  address */\n  0x00\n    /* \"contracts/NFTStake.sol\":19629:19639  msg.sender */\n  caller\n    /* \"contracts/NFTStake.sol\":19622:19639  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/NFTStake.sol\":19549:19647  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/NFTStake.sol\":21445:21636  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"contracts/NFTStake.sol\":21519:21535  address oldOwner */\n  0x00\n    /* \"contracts/NFTStake.sol\":21538:21544  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTStake.sol\":21519:21544  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/NFTStake.sol\":21564:21572  newOwner */\n  dup2\n    /* \"contracts/NFTStake.sol\":21555:21561  _owner */\n  0x00\n  dup1\n    /* \"contracts/NFTStake.sol\":21555:21572  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStake.sol\":21619:21627  newOwner */\n  dup2\n    /* \"contracts/NFTStake.sol\":21588:21628  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTStake.sol\":21609:21617  oldOwner */\n  dup2\n    /* \"contracts/NFTStake.sol\":21588:21628  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/NFTStake.sol\":21508:21636  {... */\n  pop\n    /* \"contracts/NFTStake.sol\":21445:21636  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_37\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_20:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_39\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_19\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_21:\n    /* \"#utility.yul\":771:809   */\n  tag_41\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_20\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_42:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_22:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_44\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_21\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1136   */\ntag_23:\n    /* \"#utility.yul\":1077:1084   */\n  0x00\n    /* \"#utility.yul\":1106:1130   */\n  tag_46\n    /* \"#utility.yul\":1124:1129   */\n  dup3\n    /* \"#utility.yul\":1106:1130   */\n  tag_19\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1095:1130   */\n  swap1\n  pop\n    /* \"#utility.yul\":1017:1136   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1142:1310   */\ntag_24:\n    /* \"#utility.yul\":1238:1285   */\n  tag_48\n    /* \"#utility.yul\":1279:1284   */\n  dup2\n    /* \"#utility.yul\":1238:1285   */\n  tag_23\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1231:1236   */\n  dup2\n    /* \"#utility.yul\":1228:1286   */\n  eq\n    /* \"#utility.yul\":1218:1304   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1300:1301   */\n  0x00\n    /* \"#utility.yul\":1297:1298   */\n  dup1\n    /* \"#utility.yul\":1290:1302   */\n  revert\n    /* \"#utility.yul\":1218:1304   */\ntag_49:\n    /* \"#utility.yul\":1142:1310   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1316:1505   */\ntag_25:\n    /* \"#utility.yul\":1396:1401   */\n  0x00\n    /* \"#utility.yul\":1427:1433   */\n  dup2\n    /* \"#utility.yul\":1421:1434   */\n  mload\n    /* \"#utility.yul\":1412:1434   */\n  swap1\n  pop\n    /* \"#utility.yul\":1443:1499   */\n  tag_51\n    /* \"#utility.yul\":1493:1498   */\n  dup2\n    /* \"#utility.yul\":1443:1499   */\n  tag_24\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1316:1505   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1511:1633   */\ntag_26:\n    /* \"#utility.yul\":1584:1608   */\n  tag_53\n    /* \"#utility.yul\":1602:1607   */\n  dup2\n    /* \"#utility.yul\":1584:1608   */\n  tag_19\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1577:1582   */\n  dup2\n    /* \"#utility.yul\":1574:1609   */\n  eq\n    /* \"#utility.yul\":1564:1627   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1623:1624   */\n  0x00\n    /* \"#utility.yul\":1620:1621   */\n  dup1\n    /* \"#utility.yul\":1613:1625   */\n  revert\n    /* \"#utility.yul\":1564:1627   */\ntag_54:\n    /* \"#utility.yul\":1511:1633   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1639:1782   */\ntag_27:\n    /* \"#utility.yul\":1696:1701   */\n  0x00\n    /* \"#utility.yul\":1727:1733   */\n  dup2\n    /* \"#utility.yul\":1721:1734   */\n  mload\n    /* \"#utility.yul\":1712:1734   */\n  swap1\n  pop\n    /* \"#utility.yul\":1743:1776   */\n  tag_56\n    /* \"#utility.yul\":1770:1775   */\n  dup2\n    /* \"#utility.yul\":1743:1776   */\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1639:1782   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1788:1865   */\ntag_28:\n    /* \"#utility.yul\":1825:1832   */\n  0x00\n    /* \"#utility.yul\":1854:1859   */\n  dup2\n    /* \"#utility.yul\":1843:1859   */\n  swap1\n  pop\n    /* \"#utility.yul\":1788:1865   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1871:1993   */\ntag_29:\n    /* \"#utility.yul\":1944:1968   */\n  tag_59\n    /* \"#utility.yul\":1962:1967   */\n  dup2\n    /* \"#utility.yul\":1944:1968   */\n  tag_28\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1937:1942   */\n  dup2\n    /* \"#utility.yul\":1934:1969   */\n  eq\n    /* \"#utility.yul\":1924:1987   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1983:1984   */\n  0x00\n    /* \"#utility.yul\":1980:1981   */\n  dup1\n    /* \"#utility.yul\":1973:1985   */\n  revert\n    /* \"#utility.yul\":1924:1987   */\ntag_60:\n    /* \"#utility.yul\":1871:1993   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1999:2142   */\ntag_30:\n    /* \"#utility.yul\":2056:2061   */\n  0x00\n    /* \"#utility.yul\":2087:2093   */\n  dup2\n    /* \"#utility.yul\":2081:2094   */\n  mload\n    /* \"#utility.yul\":2072:2094   */\n  swap1\n  pop\n    /* \"#utility.yul\":2103:2136   */\n  tag_62\n    /* \"#utility.yul\":2130:2135   */\n  dup2\n    /* \"#utility.yul\":2103:2136   */\n  tag_29\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1999:2142   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2148:3199   */\ntag_3:\n    /* \"#utility.yul\":2291:2297   */\n  0x00\n    /* \"#utility.yul\":2299:2305   */\n  dup1\n    /* \"#utility.yul\":2307:2313   */\n  0x00\n    /* \"#utility.yul\":2315:2321   */\n  dup1\n    /* \"#utility.yul\":2323:2329   */\n  0x00\n    /* \"#utility.yul\":2372:2375   */\n  0xa0\n    /* \"#utility.yul\":2360:2369   */\n  dup7\n    /* \"#utility.yul\":2351:2358   */\n  dup9\n    /* \"#utility.yul\":2347:2370   */\n  sub\n    /* \"#utility.yul\":2343:2376   */\n  slt\n    /* \"#utility.yul\":2340:2460   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2379:2458   */\n  tag_65\n  tag_16\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2340:2460   */\ntag_64:\n    /* \"#utility.yul\":2499:2500   */\n  0x00\n    /* \"#utility.yul\":2524:2602   */\n  tag_66\n    /* \"#utility.yul\":2594:2601   */\n  dup9\n    /* \"#utility.yul\":2585:2591   */\n  dup3\n    /* \"#utility.yul\":2574:2583   */\n  dup10\n    /* \"#utility.yul\":2570:2592   */\n  add\n    /* \"#utility.yul\":2524:2602   */\n  tag_22\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2514:2602   */\n  swap6\n  pop\n    /* \"#utility.yul\":2470:2612   */\n  pop\n    /* \"#utility.yul\":2651:2653   */\n  0x20\n    /* \"#utility.yul\":2677:2764   */\n  tag_67\n    /* \"#utility.yul\":2756:2763   */\n  dup9\n    /* \"#utility.yul\":2747:2753   */\n  dup3\n    /* \"#utility.yul\":2736:2745   */\n  dup10\n    /* \"#utility.yul\":2732:2754   */\n  add\n    /* \"#utility.yul\":2677:2764   */\n  tag_25\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2667:2764   */\n  swap5\n  pop\n    /* \"#utility.yul\":2622:2774   */\n  pop\n    /* \"#utility.yul\":2813:2815   */\n  0x40\n    /* \"#utility.yul\":2839:2903   */\n  tag_68\n    /* \"#utility.yul\":2895:2902   */\n  dup9\n    /* \"#utility.yul\":2886:2892   */\n  dup3\n    /* \"#utility.yul\":2875:2884   */\n  dup10\n    /* \"#utility.yul\":2871:2893   */\n  add\n    /* \"#utility.yul\":2839:2903   */\n  tag_27\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2829:2903   */\n  swap4\n  pop\n    /* \"#utility.yul\":2784:2913   */\n  pop\n    /* \"#utility.yul\":2952:2954   */\n  0x60\n    /* \"#utility.yul\":2978:3042   */\n  tag_69\n    /* \"#utility.yul\":3034:3041   */\n  dup9\n    /* \"#utility.yul\":3025:3031   */\n  dup3\n    /* \"#utility.yul\":3014:3023   */\n  dup10\n    /* \"#utility.yul\":3010:3032   */\n  add\n    /* \"#utility.yul\":2978:3042   */\n  tag_30\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2968:3042   */\n  swap3\n  pop\n    /* \"#utility.yul\":2923:3052   */\n  pop\n    /* \"#utility.yul\":3091:3094   */\n  0x80\n    /* \"#utility.yul\":3118:3182   */\n  tag_70\n    /* \"#utility.yul\":3174:3181   */\n  dup9\n    /* \"#utility.yul\":3165:3171   */\n  dup3\n    /* \"#utility.yul\":3154:3163   */\n  dup10\n    /* \"#utility.yul\":3150:3172   */\n  add\n    /* \"#utility.yul\":3118:3182   */\n  tag_30\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3108:3182   */\n  swap2\n  pop\n    /* \"#utility.yul\":3062:3192   */\n  pop\n    /* \"#utility.yul\":2148:3199   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"contracts/NFTStake.sol\":28007:38495  contract NFTStake is Ownable, IERC721Receiver {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStake.sol\":28007:38495  contract NFTStake is Ownable, IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x64482f79\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xcb3cba55\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe2bbb158\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe4d09896\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf395db2c\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0xcb3cba55\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd0d41fe1\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd49e77cd\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd5545992\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x8aa28550\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x8aa28550\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8dbb1e3a\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x64482f79\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7cd07e47\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x23cf3118\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x51eb05a6\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5ffe6146\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x612eee43\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x23cf3118\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x1526fe27\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1eaaa045\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2080baab\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1395d8c9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTStake.sol\":31225:31320  function poolLength() external view returns (uint256) {... */\n    tag_3:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":37323:37893  function compundDDT(uint256 _pid) public {... */\n    tag_4:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/NFTStake.sol\":30922:31086  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n    tag_5:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":29839:29865  PoolInfo[] public poolInfo */\n    tag_6:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":30080:30114  uint256 public totalAllocPoint = 0 */\n    tag_7:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":31489:32051  function add( uint256 _allocPoint, IERC721 _NFTToken, bool _withUpdate ) public onlyOwner {... */\n    tag_8:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/NFTStake.sol\":33108:33861  function pendingDDT(uint256 _pid, address _user) external view returns (uint256){... */\n    tag_9:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":32527:32629  function setMigrator(IMigratorChef _migrator) public onlyOwner {... */\n    tag_10:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/NFTStake.sol\":35790:37315  function withdraw(uint256 _pid, uint256 _tokenId) public {... */\n    tag_11:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/NFTStake.sol\":30170:30195  uint256 public startBlock */\n    tag_12:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":34200:34929  function updatePool(uint256 _pid) public {... */\n    tag_13:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/NFTStake.sol\":31094:31217  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {... */\n    tag_14:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/NFTStake.sol\":38387:38492  function updateDDTPerBlock(uint256 newAmount) public onlyOwner {... */\n    tag_15:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/NFTStake.sol\":33944:34124  function massUpdatePools() public {... */\n    tag_16:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/NFTStake.sol\":32146:32451  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n    tag_17:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/NFTStake.sol\":20826:20929  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/NFTStake.sol\":29776:29805  IMigratorChef public migrator */\n    tag_19:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":29638:29673  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_20:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":20175:20262  function owner() public view virtual returns (address) {... */\n    tag_21:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":32705:32849  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {... */\n    tag_22:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":29921:29985  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_23:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_116\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":29447:29464  IERC20 public DDT */\n    tag_24:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":38284:38379  function setDevAddress(address _devaddr) public onlyOwner {... */\n    tag_25:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n    tag_122:\n      stop\n        /* \"contracts/NFTStake.sol\":29492:29514  address public devaddr */\n    tag_26:\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":32857:33045  function getUserTokenIds(uint256 _pid, address _user) public view returns (uint256[] memory) {... */\n    tag_27:\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":34998:35737  function deposit(uint256 _pid, uint256 _tokenId) public {... */\n    tag_28:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      stop\n        /* \"contracts/NFTStake.sol\":29380:29415  INFTMasterChef public NFTMasterChef */\n    tag_29:\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":21084:21285  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n    tag_141:\n      stop\n        /* \"contracts/NFTStake.sol\":29559:29585  uint256 public DDTPerBlock */\n    tag_31:\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStake.sol\":31225:31320  function poolLength() external view returns (uint256) {... */\n    tag_40:\n        /* \"contracts/NFTStake.sol\":31270:31277  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":31297:31305  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":31297:31312  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":31290:31312  return poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":31225:31320  function poolLength() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":37323:37893  function compundDDT(uint256 _pid) public {... */\n    tag_46:\n        /* \"contracts/NFTStake.sol\":37375:37396  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTStake.sol\":37399:37407  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":37408:37412  _pid */\n      dup3\n        /* \"contracts/NFTStake.sol\":37399:37413  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_149\n      jumpi\n      tag_150\n      tag_151\n      jump\t// in\n    tag_150:\n    tag_149:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":37375:37413  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":37424:37445  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTStake.sol\":37448:37456  userInfo */\n      0x08\n        /* \"contracts/NFTStake.sol\":37448:37462  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTStake.sol\":37457:37461  _pid */\n      dup5\n        /* \"contracts/NFTStake.sol\":37448:37462  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":37448:37474  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTStake.sol\":37463:37473  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":37448:37474  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":37424:37474  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":37485:37501  updatePool(_pid) */\n      tag_153\n        /* \"contracts/NFTStake.sol\":37496:37500  _pid */\n      dup4\n        /* \"contracts/NFTStake.sol\":37485:37495  updatePool */\n      tag_83\n        /* \"contracts/NFTStake.sol\":37485:37501  updatePool(_pid) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/NFTStake.sol\":37512:37527  uint256 pending */\n      0x00\n        /* \"contracts/NFTStake.sol\":37530:37597  user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_154\n        /* \"contracts/NFTStake.sol\":37581:37585  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":37581:37596  user.rewardDebt */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37530:37576  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      tag_155\n        /* \"contracts/NFTStake.sol\":37571:37575  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":37530:37566  user.amount.mul(pool.accDDTPerShare) */\n      tag_156\n        /* \"contracts/NFTStake.sol\":37546:37550  pool */\n      dup8\n        /* \"contracts/NFTStake.sol\":37546:37565  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37530:37534  user */\n      dup8\n        /* \"contracts/NFTStake.sol\":37530:37541  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37530:37545  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":37530:37566  user.amount.mul(pool.accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"contracts/NFTStake.sol\":37530:37570  user.amount.mul(pool.accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":37530:37576  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"contracts/NFTStake.sol\":37530:37580  user.amount.mul(pool.accDDTPerShare).div(1e12).sub */\n      tag_159\n      swap1\n        /* \"contracts/NFTStake.sol\":37530:37597  user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/NFTStake.sol\":37512:37597  uint256 pending = user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":37626:37627  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":37616:37623  pending */\n      dup2\n        /* \"contracts/NFTStake.sol\":37616:37627  pending > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":37608:37646  require(pending > 0, \"Amount is zero\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"contracts/NFTStake.sol\":37657:37660  DDT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":37657:37668  DDT.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/NFTStake.sol\":37677:37690  NFTMasterChef */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":37693:37700  pending */\n      dup4\n        /* \"contracts/NFTStake.sol\":37657:37701  DDT.approve(address(NFTMasterChef), pending) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_167\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      pop\n        /* \"contracts/NFTStake.sol\":37712:37725  NFTMasterChef */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":37712:37738  NFTMasterChef.enterStaking */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x849df12c\n        /* \"contracts/NFTStake.sol\":37739:37746  pending */\n      dup3\n        /* \"contracts/NFTStake.sol\":37748:37758  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":37712:37759  NFTMasterChef.enterStaking(pending, msg.sender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap3\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_173\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":37788:37834  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      tag_174\n        /* \"contracts/NFTStake.sol\":37829:37833  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":37788:37824  user.amount.mul(pool.accDDTPerShare) */\n      tag_175\n        /* \"contracts/NFTStake.sol\":37804:37808  pool */\n      dup6\n        /* \"contracts/NFTStake.sol\":37804:37823  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37788:37792  user */\n      dup6\n        /* \"contracts/NFTStake.sol\":37788:37799  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37788:37803  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":37788:37824  user.amount.mul(pool.accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_175:\n        /* \"contracts/NFTStake.sol\":37788:37828  user.amount.mul(pool.accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":37788:37834  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_174:\n        /* \"contracts/NFTStake.sol\":37770:37774  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":37770:37785  user.rewardDebt */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":37770:37834  user.rewardDebt = user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":37871:37875  _pid */\n      dup4\n        /* \"contracts/NFTStake.sol\":37859:37869  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":37850:37885  Withdraw(msg.sender, _pid, pending) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/NFTStake.sol\":37877:37884  pending */\n      dup4\n        /* \"contracts/NFTStake.sol\":37850:37885  Withdraw(msg.sender, _pid, pending) */\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTStake.sol\":37364:37893  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":37323:37893  function compundDDT(uint256 _pid) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":30922:31086  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n    tag_50:\n        /* \"contracts/NFTStake.sol\":31022:31028  bytes4 */\n      0x00\n        /* \"contracts/NFTStake.sol\":31048:31078  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/NFTStake.sol\":31041:31078  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":30922:31086  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29839:29865  PoolInfo[] public poolInfo */\n    tag_55:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":30080:30114  uint256 public totalAllocPoint = 0 */\n    tag_59:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":31489:32051  function add( uint256 _allocPoint, IERC721 _NFTToken, bool _withUpdate ) public onlyOwner {... */\n    tag_64:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_181\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_182\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_183\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_106\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/NFTStake.sol\":31594:31605  _withUpdate */\n      dup1\n        /* \"contracts/NFTStake.sol\":31590:31651  if (_withUpdate) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"contracts/NFTStake.sol\":31622:31639  massUpdatePools() */\n      tag_189\n        /* \"contracts/NFTStake.sol\":31622:31637  massUpdatePools */\n      tag_91\n        /* \"contracts/NFTStake.sol\":31622:31639  massUpdatePools() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/NFTStake.sol\":31590:31651  if (_withUpdate) {... */\n    tag_188:\n        /* \"contracts/NFTStake.sol\":31661:31684  uint256 lastRewardBlock */\n      0x00\n        /* \"contracts/NFTStake.sol\":31702:31712  startBlock */\n      sload(0x0a)\n        /* \"contracts/NFTStake.sol\":31687:31699  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":31687:31712  block.number > startBlock */\n      gt\n        /* \"contracts/NFTStake.sol\":31687:31740  block.number > startBlock ? block.number : startBlock */\n      tag_190\n      jumpi\n        /* \"contracts/NFTStake.sol\":31730:31740  startBlock */\n      sload(0x0a)\n        /* \"contracts/NFTStake.sol\":31687:31740  block.number > startBlock ? block.number : startBlock */\n      jump(tag_191)\n    tag_190:\n        /* \"contracts/NFTStake.sol\":31715:31727  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":31687:31740  block.number > startBlock ? block.number : startBlock */\n    tag_191:\n        /* \"contracts/NFTStake.sol\":31661:31740  uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":31769:31801  totalAllocPoint.add(_allocPoint) */\n      tag_192\n        /* \"contracts/NFTStake.sol\":31789:31800  _allocPoint */\n      dup5\n        /* \"contracts/NFTStake.sol\":31769:31784  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTStake.sol\":31769:31788  totalAllocPoint.add */\n      tag_193\n      swap1\n        /* \"contracts/NFTStake.sol\":31769:31801  totalAllocPoint.add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_192:\n        /* \"contracts/NFTStake.sol\":31751:31766  totalAllocPoint */\n      0x09\n        /* \"contracts/NFTStake.sol\":31751:31801  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":31812:31820  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":31840:32032  PoolInfo({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTStake.sol\":31878:31887  _NFTToken */\n      dup6\n        /* \"contracts/NFTStake.sol\":31840:32032  PoolInfo({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTStake.sol\":31918:31929  _allocPoint */\n      dup7\n        /* \"contracts/NFTStake.sol\":31840:32032  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTStake.sol\":31965:31980  lastRewardBlock */\n      dup4\n        /* \"contracts/NFTStake.sol\":31840:32032  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTStake.sol\":32015:32016  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":31840:32032  PoolInfo({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTStake.sol\":31812:32043  poolInfo.push(... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":31579:32051  {... */\n      pop\n        /* \"contracts/NFTStake.sol\":31489:32051  function add( uint256 _allocPoint, IERC721 _NFTToken, bool _withUpdate ) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":33108:33861  function pendingDDT(uint256 _pid, address _user) external view returns (uint256){... */\n    tag_68:\n        /* \"contracts/NFTStake.sol\":33180:33187  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":33199:33220  PoolInfo storage pool */\n      dup1\n        /* \"contracts/NFTStake.sol\":33223:33231  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":33232:33236  _pid */\n      dup5\n        /* \"contracts/NFTStake.sol\":33223:33237  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_196\n      jumpi\n      tag_197\n      tag_151\n      jump\t// in\n    tag_197:\n    tag_196:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":33199:33237  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33248:33269  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTStake.sol\":33272:33280  userInfo */\n      0x08\n        /* \"contracts/NFTStake.sol\":33272:33286  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTStake.sol\":33281:33285  _pid */\n      dup7\n        /* \"contracts/NFTStake.sol\":33272:33286  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":33272:33293  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/NFTStake.sol\":33287:33292  _user */\n      dup6\n        /* \"contracts/NFTStake.sol\":33272:33293  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":33248:33293  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33304:33326  uint256 accDDTPerShare */\n      0x00\n        /* \"contracts/NFTStake.sol\":33329:33333  pool */\n      dup3\n        /* \"contracts/NFTStake.sol\":33329:33348  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33304:33348  uint256 accDDTPerShare = pool.accDDTPerShare */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33359:33376  uint256 NFTSupply */\n      0x00\n        /* \"contracts/NFTStake.sol\":33379:33383  pool */\n      dup4\n        /* \"contracts/NFTStake.sol\":33379:33392  pool.NFTToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":33379:33402  pool.NFTToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTStake.sol\":33411:33415  this */\n      address\n        /* \"contracts/NFTStake.sol\":33379:33417  pool.NFTToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_199:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"contracts/NFTStake.sol\":33359:33417  uint256 NFTSupply = pool.NFTToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33447:33451  pool */\n      dup4\n        /* \"contracts/NFTStake.sol\":33447:33467  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33432:33444  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":33432:33467  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTStake.sol\":33432:33485  block.number > pool.lastRewardBlock && NFTSupply != 0 */\n      dup1\n      iszero\n      tag_204\n      jumpi\n      pop\n        /* \"contracts/NFTStake.sol\":33484:33485  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":33471:33480  NFTSupply */\n      dup2\n        /* \"contracts/NFTStake.sol\":33471:33485  NFTSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTStake.sol\":33432:33485  block.number > pool.lastRewardBlock && NFTSupply != 0 */\n    tag_204:\n        /* \"contracts/NFTStake.sol\":33428:33774  if (block.number > pool.lastRewardBlock && NFTSupply != 0) {... */\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/NFTStake.sol\":33502:33520  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTStake.sol\":33523:33572  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_206\n        /* \"contracts/NFTStake.sol\":33537:33541  pool */\n      dup6\n        /* \"contracts/NFTStake.sol\":33537:33557  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33559:33571  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":33523:33536  getMultiplier */\n      tag_111\n        /* \"contracts/NFTStake.sol\":33523:33572  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/NFTStake.sol\":33502:33572  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33587:33604  uint256 DDTReward */\n      0x00\n        /* \"contracts/NFTStake.sol\":33607:33676  multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_207\n        /* \"contracts/NFTStake.sol\":33660:33675  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTStake.sol\":33607:33655  multiplier.mul(DDTPerBlock).mul(pool.allocPoint) */\n      tag_208\n        /* \"contracts/NFTStake.sol\":33639:33643  pool */\n      dup9\n        /* \"contracts/NFTStake.sol\":33639:33654  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33607:33634  multiplier.mul(DDTPerBlock) */\n      tag_209\n        /* \"contracts/NFTStake.sol\":33622:33633  DDTPerBlock */\n      sload(0x04)\n        /* \"contracts/NFTStake.sol\":33607:33617  multiplier */\n      dup8\n        /* \"contracts/NFTStake.sol\":33607:33621  multiplier.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":33607:33634  multiplier.mul(DDTPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"contracts/NFTStake.sol\":33607:33638  multiplier.mul(DDTPerBlock).mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":33607:33655  multiplier.mul(DDTPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"contracts/NFTStake.sol\":33607:33659  multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":33607:33676  multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"contracts/NFTStake.sol\":33587:33676  uint256 DDTReward = multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33708:33762  accDDTPerShare.add(DDTReward.mul(1e12).div(NFTSupply)) */\n      tag_210\n        /* \"contracts/NFTStake.sol\":33727:33761  DDTReward.mul(1e12).div(NFTSupply) */\n      tag_211\n        /* \"contracts/NFTStake.sol\":33751:33760  NFTSupply */\n      dup5\n        /* \"contracts/NFTStake.sol\":33727:33746  DDTReward.mul(1e12) */\n      tag_212\n        /* \"contracts/NFTStake.sol\":33741:33745  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":33727:33736  DDTReward */\n      dup6\n        /* \"contracts/NFTStake.sol\":33727:33740  DDTReward.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":33727:33746  DDTReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_212:\n        /* \"contracts/NFTStake.sol\":33727:33750  DDTReward.mul(1e12).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":33727:33761  DDTReward.mul(1e12).div(NFTSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"contracts/NFTStake.sol\":33708:33722  accDDTPerShare */\n      dup6\n        /* \"contracts/NFTStake.sol\":33708:33726  accDDTPerShare.add */\n      tag_193\n      swap1\n        /* \"contracts/NFTStake.sol\":33708:33762  accDDTPerShare.add(DDTReward.mul(1e12).div(NFTSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"contracts/NFTStake.sol\":33691:33762  accDDTPerShare = accDDTPerShare.add(DDTReward.mul(1e12).div(NFTSupply)) */\n      swap4\n      pop\n        /* \"contracts/NFTStake.sol\":33487:33774  {... */\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":33428:33774  if (block.number > pool.lastRewardBlock && NFTSupply != 0) {... */\n    tag_205:\n        /* \"contracts/NFTStake.sol\":33791:33853  user.amount.mul(accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_213\n        /* \"contracts/NFTStake.sol\":33837:33841  user */\n      dup4\n        /* \"contracts/NFTStake.sol\":33837:33852  user.rewardDebt */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33791:33832  user.amount.mul(accDDTPerShare).div(1e12) */\n      tag_214\n        /* \"contracts/NFTStake.sol\":33827:33831  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":33791:33822  user.amount.mul(accDDTPerShare) */\n      tag_215\n        /* \"contracts/NFTStake.sol\":33807:33821  accDDTPerShare */\n      dup7\n        /* \"contracts/NFTStake.sol\":33791:33795  user */\n      dup9\n        /* \"contracts/NFTStake.sol\":33791:33802  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":33791:33806  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":33791:33822  user.amount.mul(accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_215:\n        /* \"contracts/NFTStake.sol\":33791:33826  user.amount.mul(accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":33791:33832  user.amount.mul(accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"contracts/NFTStake.sol\":33791:33836  user.amount.mul(accDDTPerShare).div(1e12).sub */\n      tag_159\n      swap1\n        /* \"contracts/NFTStake.sol\":33791:33853  user.amount.mul(accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"contracts/NFTStake.sol\":33784:33853  return user.amount.mul(accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":33108:33861  function pendingDDT(uint256 _pid, address _user) external view returns (uint256){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":32527:32629  function setMigrator(IMigratorChef _migrator) public onlyOwner {... */\n    tag_73:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_217\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_182\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_217:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_218\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_106\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_218:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_186\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"contracts/NFTStake.sol\":32612:32621  _migrator */\n      dup1\n        /* \"contracts/NFTStake.sol\":32601:32609  migrator */\n      0x06\n      0x00\n        /* \"contracts/NFTStake.sol\":32601:32621  migrator = _migrator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":32527:32629  function setMigrator(IMigratorChef _migrator) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":35790:37315  function withdraw(uint256 _pid, uint256 _tokenId) public {... */\n    tag_77:\n        /* \"contracts/NFTStake.sol\":35858:35879  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTStake.sol\":35882:35890  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":35891:35895  _pid */\n      dup4\n        /* \"contracts/NFTStake.sol\":35882:35896  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_223\n      jumpi\n      tag_224\n      tag_151\n      jump\t// in\n    tag_224:\n    tag_223:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":35858:35896  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":35907:35928  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTStake.sol\":35931:35939  userInfo */\n      0x08\n        /* \"contracts/NFTStake.sol\":35931:35945  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTStake.sol\":35940:35944  _pid */\n      dup6\n        /* \"contracts/NFTStake.sol\":35931:35945  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":35931:35957  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTStake.sol\":35946:35956  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":35931:35957  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":35907:35957  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":35968:35983  uint256 pending */\n      0x00\n        /* \"contracts/NFTStake.sol\":36009:36010  0 */\n      dup1\n        /* \"contracts/NFTStake.sol\":35997:36005  _tokenId */\n      dup5\n        /* \"contracts/NFTStake.sol\":35997:36010  _tokenId == 0 */\n      sub\n        /* \"contracts/NFTStake.sol\":35994:37256  if(_tokenId == 0){... */\n      tag_226\n      jumpi\n        /* \"contracts/NFTStake.sol\":36026:36042  updatePool(_pid) */\n      tag_227\n        /* \"contracts/NFTStake.sol\":36037:36041  _pid */\n      dup6\n        /* \"contracts/NFTStake.sol\":36026:36036  updatePool */\n      tag_83\n        /* \"contracts/NFTStake.sol\":36026:36042  updatePool(_pid) */\n      jump\t// in\n    tag_227:\n        /* \"contracts/NFTStake.sol\":36067:36134  user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_228\n        /* \"contracts/NFTStake.sol\":36118:36122  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":36118:36133  user.rewardDebt */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36067:36113  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      tag_229\n        /* \"contracts/NFTStake.sol\":36108:36112  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":36067:36103  user.amount.mul(pool.accDDTPerShare) */\n      tag_230\n        /* \"contracts/NFTStake.sol\":36083:36087  pool */\n      dup8\n        /* \"contracts/NFTStake.sol\":36083:36102  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36067:36071  user */\n      dup8\n        /* \"contracts/NFTStake.sol\":36067:36078  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36067:36082  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":36067:36103  user.amount.mul(pool.accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"contracts/NFTStake.sol\":36067:36107  user.amount.mul(pool.accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":36067:36113  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"contracts/NFTStake.sol\":36067:36117  user.amount.mul(pool.accDDTPerShare).div(1e12).sub */\n      tag_159\n      swap1\n        /* \"contracts/NFTStake.sol\":36067:36134  user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"contracts/NFTStake.sol\":36057:36134  pending = user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":36162:36163  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":36152:36159  pending */\n      dup2\n        /* \"contracts/NFTStake.sol\":36152:36163  pending > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":36149:36235  if(pending > 0){... */\n      iszero\n      tag_231\n      jumpi\n        /* \"contracts/NFTStake.sol\":36183:36219  safeDDTTransfer(msg.sender, pending) */\n      tag_232\n        /* \"contracts/NFTStake.sol\":36199:36209  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":36211:36218  pending */\n      dup3\n        /* \"contracts/NFTStake.sol\":36183:36198  safeDDTTransfer */\n      tag_233\n        /* \"contracts/NFTStake.sol\":36183:36219  safeDDTTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_232:\n        /* \"contracts/NFTStake.sol\":36149:36235  if(pending > 0){... */\n    tag_231:\n        /* \"contracts/NFTStake.sol\":36267:36313  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      tag_234\n        /* \"contracts/NFTStake.sol\":36308:36312  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":36267:36303  user.amount.mul(pool.accDDTPerShare) */\n      tag_235\n        /* \"contracts/NFTStake.sol\":36283:36287  pool */\n      dup6\n        /* \"contracts/NFTStake.sol\":36283:36302  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36267:36271  user */\n      dup6\n        /* \"contracts/NFTStake.sol\":36267:36278  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36267:36282  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":36267:36303  user.amount.mul(pool.accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_235:\n        /* \"contracts/NFTStake.sol\":36267:36307  user.amount.mul(pool.accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":36267:36313  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_234:\n        /* \"contracts/NFTStake.sol\":36249:36253  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":36249:36264  user.rewardDebt */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":36249:36313  user.rewardDebt = user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":35994:37256  if(_tokenId == 0){... */\n      jump(tag_236)\n    tag_226:\n        /* \"contracts/NFTStake.sol\":36345:36363  uint256 hasTokenId */\n      0x00\n        /* \"contracts/NFTStake.sol\":36382:36402  uint256 tokenIdIndex */\n      dup1\n        /* \"contracts/NFTStake.sol\":36421:36430  uint256 i */\n      dup1\n        /* \"contracts/NFTStake.sol\":36417:36622  for(uint256 i; i<user.tokenIds.length; i++){... */\n    tag_237:\n        /* \"contracts/NFTStake.sol\":36434:36438  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":36434:36447  user.tokenIds */\n      0x00\n      add\n        /* \"contracts/NFTStake.sol\":36434:36454  user.tokenIds.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":36432:36433  i */\n      dup2\n        /* \"contracts/NFTStake.sol\":36432:36454  i<user.tokenIds.length */\n      lt\n        /* \"contracts/NFTStake.sol\":36417:36622  for(uint256 i; i<user.tokenIds.length; i++){... */\n      iszero\n      tag_238\n      jumpi\n        /* \"contracts/NFTStake.sol\":36502:36510  _tokenId */\n      dup7\n        /* \"contracts/NFTStake.sol\":36482:36486  user */\n      dup6\n        /* \"contracts/NFTStake.sol\":36482:36495  user.tokenIds */\n      0x00\n      add\n        /* \"contracts/NFTStake.sol\":36496:36497  i */\n      dup3\n        /* \"contracts/NFTStake.sol\":36482:36498  user.tokenIds[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_240\n      jumpi\n      tag_241\n      tag_151\n      jump\t// in\n    tag_241:\n    tag_240:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36482:36510  user.tokenIds[i] == _tokenId */\n      sub\n        /* \"contracts/NFTStake.sol\":36479:36607  if(user.tokenIds[i] == _tokenId){... */\n      tag_243\n      jumpi\n        /* \"contracts/NFTStake.sol\":36547:36548  1 */\n      0x01\n        /* \"contracts/NFTStake.sol\":36534:36548  hasTokenId = 1 */\n      swap3\n      pop\n        /* \"contracts/NFTStake.sol\":36586:36587  i */\n      dup1\n        /* \"contracts/NFTStake.sol\":36571:36587  tokenIdIndex = i */\n      swap2\n      pop\n        /* \"contracts/NFTStake.sol\":36479:36607  if(user.tokenIds[i] == _tokenId){... */\n    tag_243:\n        /* \"contracts/NFTStake.sol\":36456:36459  i++ */\n      dup1\n      dup1\n      tag_244\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":36417:36622  for(uint256 i; i<user.tokenIds.length; i++){... */\n      jump(tag_237)\n    tag_238:\n      pop\n        /* \"contracts/NFTStake.sol\":36658:36659  1 */\n      0x01\n        /* \"contracts/NFTStake.sol\":36644:36654  hasTokenId */\n      dup3\n        /* \"contracts/NFTStake.sol\":36644:36659  hasTokenId == 1 */\n      eq\n        /* \"contracts/NFTStake.sol\":36636:36693  require(hasTokenId == 1, \"You are not Owner of token id\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"contracts/NFTStake.sol\":36731:36732  1 */\n      0x01\n        /* \"contracts/NFTStake.sol\":36716:36720  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":36716:36727  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36716:36732  user.amount >= 1 */\n      lt\n      iszero\n        /* \"contracts/NFTStake.sol\":36708:36755  require(user.amount >= 1, \"withdraw: not good\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_249:\n        /* \"contracts/NFTStake.sol\":36770:36786  updatePool(_pid) */\n      tag_252\n        /* \"contracts/NFTStake.sol\":36781:36785  _pid */\n      dup8\n        /* \"contracts/NFTStake.sol\":36770:36780  updatePool */\n      tag_83\n        /* \"contracts/NFTStake.sol\":36770:36786  updatePool(_pid) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/NFTStake.sol\":36811:36878  user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_253\n        /* \"contracts/NFTStake.sol\":36862:36866  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":36862:36877  user.rewardDebt */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36811:36857  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      tag_254\n        /* \"contracts/NFTStake.sol\":36852:36856  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":36811:36847  user.amount.mul(pool.accDDTPerShare) */\n      tag_255\n        /* \"contracts/NFTStake.sol\":36827:36831  pool */\n      dup10\n        /* \"contracts/NFTStake.sol\":36827:36846  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36811:36815  user */\n      dup10\n        /* \"contracts/NFTStake.sol\":36811:36822  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":36811:36826  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":36811:36847  user.amount.mul(pool.accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"contracts/NFTStake.sol\":36811:36851  user.amount.mul(pool.accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":36811:36857  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_254:\n        /* \"contracts/NFTStake.sol\":36811:36861  user.amount.mul(pool.accDDTPerShare).div(1e12).sub */\n      tag_159\n      swap1\n        /* \"contracts/NFTStake.sol\":36811:36878  user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_253:\n        /* \"contracts/NFTStake.sol\":36801:36878  pending = user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap3\n      pop\n        /* \"contracts/NFTStake.sol\":36906:36907  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":36896:36903  pending */\n      dup4\n        /* \"contracts/NFTStake.sol\":36896:36907  pending > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":36893:36979  if(pending > 0){... */\n      iszero\n      tag_256\n      jumpi\n        /* \"contracts/NFTStake.sol\":36927:36963  safeDDTTransfer(msg.sender, pending) */\n      tag_257\n        /* \"contracts/NFTStake.sol\":36943:36953  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":36955:36962  pending */\n      dup5\n        /* \"contracts/NFTStake.sol\":36927:36942  safeDDTTransfer */\n      tag_233\n        /* \"contracts/NFTStake.sol\":36927:36963  safeDDTTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_257:\n        /* \"contracts/NFTStake.sol\":36893:36979  if(pending > 0){... */\n    tag_256:\n        /* \"contracts/NFTStake.sol\":37007:37025  user.amount.sub(1) */\n      tag_258\n        /* \"contracts/NFTStake.sol\":37023:37024  1 */\n      0x01\n        /* \"contracts/NFTStake.sol\":37007:37011  user */\n      dup6\n        /* \"contracts/NFTStake.sol\":37007:37018  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37007:37022  user.amount.sub */\n      tag_159\n      swap1\n        /* \"contracts/NFTStake.sol\":37007:37025  user.amount.sub(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_258:\n        /* \"contracts/NFTStake.sol\":36993:36997  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":36993:37004  user.amount */\n      0x01\n      add\n        /* \"contracts/NFTStake.sol\":36993:37025  user.amount = user.amount.sub(1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":37058:37104  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      tag_259\n        /* \"contracts/NFTStake.sol\":37099:37103  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":37058:37094  user.amount.mul(pool.accDDTPerShare) */\n      tag_260\n        /* \"contracts/NFTStake.sol\":37074:37078  pool */\n      dup8\n        /* \"contracts/NFTStake.sol\":37074:37093  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37058:37062  user */\n      dup8\n        /* \"contracts/NFTStake.sol\":37058:37069  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":37058:37073  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":37058:37094  user.amount.mul(pool.accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_260:\n        /* \"contracts/NFTStake.sol\":37058:37098  user.amount.mul(pool.accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":37058:37104  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"contracts/NFTStake.sol\":37040:37044  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":37040:37055  user.rewardDebt */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":37040:37104  user.rewardDebt = user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":37126:37130  user */\n      dup4\n        /* \"contracts/NFTStake.sol\":37126:37139  user.tokenIds */\n      0x00\n      add\n        /* \"contracts/NFTStake.sol\":37140:37152  tokenIdIndex */\n      dup2\n        /* \"contracts/NFTStake.sol\":37126:37153  user.tokenIds[tokenIdIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_261\n      jumpi\n      tag_262\n      tag_151\n      jump\t// in\n    tag_262:\n    tag_261:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"contracts/NFTStake.sol\":37119:37153  delete user.tokenIds[tokenIdIndex] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/NFTStake.sol\":37168:37172  pool */\n      dup5\n        /* \"contracts/NFTStake.sol\":37168:37181  pool.NFTToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":37168:37198  pool.NFTToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/NFTStake.sol\":37207:37211  this */\n      address\n        /* \"contracts/NFTStake.sol\":37222:37232  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":37235:37243  _tokenId */\n      dup10\n        /* \"contracts/NFTStake.sol\":37168:37244  pool.NFTToken.safeTransferFrom(address(this), address(msg.sender), _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_266\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_266:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_268\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_268:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":36330:37256  {... */\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":35994:37256  if(_tokenId == 0){... */\n    tag_236:\n        /* \"contracts/NFTStake.sol\":37292:37296  _pid */\n      dup5\n        /* \"contracts/NFTStake.sol\":37280:37290  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":37271:37307  Withdraw(msg.sender, _pid, _tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/NFTStake.sol\":37298:37306  _tokenId */\n      dup7\n        /* \"contracts/NFTStake.sol\":37271:37307  Withdraw(msg.sender, _pid, _tokenId) */\n      mload(0x40)\n      tag_269\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTStake.sol\":35847:37315  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":35790:37315  function withdraw(uint256 _pid, uint256 _tokenId) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":30170:30195  uint256 public startBlock */\n    tag_79:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":34200:34929  function updatePool(uint256 _pid) public {... */\n    tag_83:\n        /* \"contracts/NFTStake.sol\":34252:34273  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTStake.sol\":34276:34284  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":34285:34289  _pid */\n      dup3\n        /* \"contracts/NFTStake.sol\":34276:34290  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_271\n      jumpi\n      tag_272\n      tag_151\n      jump\t// in\n    tag_272:\n    tag_271:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":34252:34290  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34321:34325  pool */\n      dup1\n        /* \"contracts/NFTStake.sol\":34321:34341  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":34305:34317  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":34305:34341  block.number <= pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTStake.sol\":34301:34376  if (block.number <= pool.lastRewardBlock) {... */\n      tag_274\n      jumpi\n        /* \"contracts/NFTStake.sol\":34358:34365  return; */\n      pop\n      jump(tag_270)\n        /* \"contracts/NFTStake.sol\":34301:34376  if (block.number <= pool.lastRewardBlock) {... */\n    tag_274:\n        /* \"contracts/NFTStake.sol\":34386:34403  uint256 NFTSupply */\n      0x00\n        /* \"contracts/NFTStake.sol\":34406:34410  pool */\n      dup2\n        /* \"contracts/NFTStake.sol\":34406:34419  pool.NFTToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":34406:34429  pool.NFTToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTStake.sol\":34438:34442  this */\n      address\n        /* \"contracts/NFTStake.sol\":34406:34444  pool.NFTToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_275:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_277\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_277:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_278\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_278:\n        /* \"contracts/NFTStake.sol\":34386:34444  uint256 NFTSupply = pool.NFTToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34472:34473  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":34459:34468  NFTSupply */\n      dup2\n        /* \"contracts/NFTStake.sol\":34459:34473  NFTSupply <= 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":34455:34558  if (NFTSupply <= 0) {... */\n      tag_279\n      jumpi\n        /* \"contracts/NFTStake.sol\":34513:34525  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":34490:34494  pool */\n      dup3\n        /* \"contracts/NFTStake.sol\":34490:34510  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":34490:34525  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":34540:34547  return; */\n      pop\n      pop\n      jump(tag_270)\n        /* \"contracts/NFTStake.sol\":34455:34558  if (NFTSupply <= 0) {... */\n    tag_279:\n        /* \"contracts/NFTStake.sol\":34568:34586  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTStake.sol\":34589:34638  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_280\n        /* \"contracts/NFTStake.sol\":34603:34607  pool */\n      dup4\n        /* \"contracts/NFTStake.sol\":34603:34623  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":34625:34637  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":34589:34602  getMultiplier */\n      tag_111\n        /* \"contracts/NFTStake.sol\":34589:34638  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_280:\n        /* \"contracts/NFTStake.sol\":34568:34638  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34649:34666  uint256 DDTReward */\n      0x00\n        /* \"contracts/NFTStake.sol\":34669:34738  multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_281\n        /* \"contracts/NFTStake.sol\":34722:34737  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTStake.sol\":34669:34717  multiplier.mul(DDTPerBlock).mul(pool.allocPoint) */\n      tag_282\n        /* \"contracts/NFTStake.sol\":34701:34705  pool */\n      dup7\n        /* \"contracts/NFTStake.sol\":34701:34716  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":34669:34696  multiplier.mul(DDTPerBlock) */\n      tag_283\n        /* \"contracts/NFTStake.sol\":34684:34695  DDTPerBlock */\n      sload(0x04)\n        /* \"contracts/NFTStake.sol\":34669:34679  multiplier */\n      dup8\n        /* \"contracts/NFTStake.sol\":34669:34683  multiplier.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":34669:34696  multiplier.mul(DDTPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_283:\n        /* \"contracts/NFTStake.sol\":34669:34700  multiplier.mul(DDTPerBlock).mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":34669:34717  multiplier.mul(DDTPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_282:\n        /* \"contracts/NFTStake.sol\":34669:34721  multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":34669:34738  multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_281:\n        /* \"contracts/NFTStake.sol\":34649:34738  uint256 DDTReward = multiplier.mul(DDTPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34749:34752  DDT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":34749:34757  DDT.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"contracts/NFTStake.sol\":34766:34770  this */\n      address\n        /* \"contracts/NFTStake.sol\":34773:34782  DDTReward */\n      dup4\n        /* \"contracts/NFTStake.sol\":34749:34783  DDT.mint(address(this), DDTReward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_284:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_286:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_287\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_287:\n      pop\n        /* \"contracts/NFTStake.sol\":34816:34875  pool.accDDTPerShare.add(DDTReward.mul(1e12).div(NFTSupply)) */\n      tag_288\n        /* \"contracts/NFTStake.sol\":34840:34874  DDTReward.mul(1e12).div(NFTSupply) */\n      tag_289\n        /* \"contracts/NFTStake.sol\":34864:34873  NFTSupply */\n      dup5\n        /* \"contracts/NFTStake.sol\":34840:34859  DDTReward.mul(1e12) */\n      tag_290\n        /* \"contracts/NFTStake.sol\":34854:34858  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":34840:34849  DDTReward */\n      dup6\n        /* \"contracts/NFTStake.sol\":34840:34853  DDTReward.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":34840:34859  DDTReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_290:\n        /* \"contracts/NFTStake.sol\":34840:34863  DDTReward.mul(1e12).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":34840:34874  DDTReward.mul(1e12).div(NFTSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_289:\n        /* \"contracts/NFTStake.sol\":34816:34820  pool */\n      dup6\n        /* \"contracts/NFTStake.sol\":34816:34835  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":34816:34839  pool.accDDTPerShare.add */\n      tag_193\n      swap1\n        /* \"contracts/NFTStake.sol\":34816:34875  pool.accDDTPerShare.add(DDTReward.mul(1e12).div(NFTSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_288:\n        /* \"contracts/NFTStake.sol\":34794:34798  pool */\n      dup5\n        /* \"contracts/NFTStake.sol\":34794:34813  pool.accDDTPerShare */\n      0x03\n      add\n        /* \"contracts/NFTStake.sol\":34794:34875  pool.accDDTPerShare = pool.accDDTPerShare.add(DDTReward.mul(1e12).div(NFTSupply)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":34909:34921  block.number */\n      number\n        /* \"contracts/NFTStake.sol\":34886:34890  pool */\n      dup5\n        /* \"contracts/NFTStake.sol\":34886:34906  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":34886:34921  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":34241:34929  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":34200:34929  function updatePool(uint256 _pid) public {... */\n    tag_270:\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":31094:31217  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {... */\n    tag_86:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_292\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_182\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_292:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_293\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_106\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_293:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_186\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"contracts/NFTStake.sol\":31193:31209  multiplierNumber */\n      dup1\n        /* \"contracts/NFTStake.sol\":31174:31190  BONUS_MULTIPLIER */\n      0x05\n        /* \"contracts/NFTStake.sol\":31174:31209  BONUS_MULTIPLIER = multiplierNumber */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":31094:31217  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":38387:38492  function updateDDTPerBlock(uint256 newAmount) public onlyOwner {... */\n    tag_89:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_298\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_182\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_298:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_299\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_106\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_299:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap1\n      tag_186\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_300:\n        /* \"contracts/NFTStake.sol\":38475:38484  newAmount */\n      dup1\n        /* \"contracts/NFTStake.sol\":38461:38472  DDTPerBlock */\n      0x04\n        /* \"contracts/NFTStake.sol\":38461:38484  DDTPerBlock = newAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":38387:38492  function updateDDTPerBlock(uint256 newAmount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":33944:34124  function massUpdatePools() public {... */\n    tag_91:\n        /* \"contracts/NFTStake.sol\":33989:34003  uint256 length */\n      0x00\n        /* \"contracts/NFTStake.sol\":34006:34014  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":34006:34021  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33989:34021  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34037:34048  uint256 pid */\n      0x00\n        /* \"contracts/NFTStake.sol\":34032:34117  for (uint256 pid = 0; pid < length; ++pid) {... */\n    tag_304:\n        /* \"contracts/NFTStake.sol\":34060:34066  length */\n      dup2\n        /* \"contracts/NFTStake.sol\":34054:34057  pid */\n      dup2\n        /* \"contracts/NFTStake.sol\":34054:34066  pid < length */\n      lt\n        /* \"contracts/NFTStake.sol\":34032:34117  for (uint256 pid = 0; pid < length; ++pid) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"contracts/NFTStake.sol\":34090:34105  updatePool(pid) */\n      tag_307\n        /* \"contracts/NFTStake.sol\":34101:34104  pid */\n      dup2\n        /* \"contracts/NFTStake.sol\":34090:34100  updatePool */\n      tag_83\n        /* \"contracts/NFTStake.sol\":34090:34105  updatePool(pid) */\n      jump\t// in\n    tag_307:\n        /* \"contracts/NFTStake.sol\":34068:34073  ++pid */\n      dup1\n      tag_308\n      swap1\n      tag_245\n      jump\t// in\n    tag_308:\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":34032:34117  for (uint256 pid = 0; pid < length; ++pid) {... */\n      jump(tag_304)\n    tag_305:\n      pop\n        /* \"contracts/NFTStake.sol\":33978:34124  {... */\n      pop\n        /* \"contracts/NFTStake.sol\":33944:34124  function massUpdatePools() public {... */\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":32146:32451  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n    tag_95:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_310\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_182\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_310:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_311\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_106\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_311:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap1\n      tag_186\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_312:\n        /* \"contracts/NFTStake.sol\":32245:32256  _withUpdate */\n      dup1\n        /* \"contracts/NFTStake.sol\":32241:32302  if (_withUpdate) {... */\n      iszero\n      tag_315\n      jumpi\n        /* \"contracts/NFTStake.sol\":32273:32290  massUpdatePools() */\n      tag_316\n        /* \"contracts/NFTStake.sol\":32273:32288  massUpdatePools */\n      tag_91\n        /* \"contracts/NFTStake.sol\":32273:32290  massUpdatePools() */\n      jump\t// in\n    tag_316:\n        /* \"contracts/NFTStake.sol\":32241:32302  if (_withUpdate) {... */\n    tag_315:\n        /* \"contracts/NFTStake.sol\":32330:32393  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      tag_317\n        /* \"contracts/NFTStake.sol\":32381:32392  _allocPoint */\n      dup3\n        /* \"contracts/NFTStake.sol\":32330:32376  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_318\n        /* \"contracts/NFTStake.sol\":32350:32358  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":32359:32363  _pid */\n      dup7\n        /* \"contracts/NFTStake.sol\":32350:32364  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_319\n      jumpi\n      tag_320\n      tag_151\n      jump\t// in\n    tag_320:\n    tag_319:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":32350:32375  poolInfo[_pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":32330:32345  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTStake.sol\":32330:32349  totalAllocPoint.sub */\n      tag_159\n      swap1\n        /* \"contracts/NFTStake.sol\":32330:32376  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_318:\n        /* \"contracts/NFTStake.sol\":32330:32380  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add */\n      tag_193\n      swap1\n        /* \"contracts/NFTStake.sol\":32330:32393  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_317:\n        /* \"contracts/NFTStake.sol\":32312:32327  totalAllocPoint */\n      0x09\n        /* \"contracts/NFTStake.sol\":32312:32393  totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":32432:32443  _allocPoint */\n      dup2\n        /* \"contracts/NFTStake.sol\":32404:32412  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":32413:32417  _pid */\n      dup5\n        /* \"contracts/NFTStake.sol\":32404:32418  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_322\n      jumpi\n      tag_323\n      tag_151\n      jump\t// in\n    tag_323:\n    tag_322:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":32404:32429  poolInfo[_pid].allocPoint */\n      0x01\n      add\n        /* \"contracts/NFTStake.sol\":32404:32443  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":32146:32451  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":20826:20929  function renounceOwnership() public virtual onlyOwner {... */\n    tag_97:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_326\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_182\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_326:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_327\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_106\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_327:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap1\n      tag_186\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_328:\n        /* \"contracts/NFTStake.sol\":20891:20921  _transferOwnership(address(0)) */\n      tag_331\n        /* \"contracts/NFTStake.sol\":20918:20919  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":20891:20909  _transferOwnership */\n      tag_332\n        /* \"contracts/NFTStake.sol\":20891:20921  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_331:\n        /* \"contracts/NFTStake.sol\":20826:20929  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29776:29805  IMigratorChef public migrator */\n    tag_99:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29638:29673  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_103:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":20175:20262  function owner() public view virtual returns (address) {... */\n    tag_106:\n        /* \"contracts/NFTStake.sol\":20221:20228  address */\n      0x00\n        /* \"contracts/NFTStake.sol\":20248:20254  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20241:20254  return _owner */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":20175:20262  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":32705:32849  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {... */\n    tag_111:\n        /* \"contracts/NFTStake.sol\":32777:32784  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":32805:32841  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      tag_335\n        /* \"contracts/NFTStake.sol\":32824:32840  BONUS_MULTIPLIER */\n      sload(0x05)\n        /* \"contracts/NFTStake.sol\":32805:32819  _to.sub(_from) */\n      tag_336\n        /* \"contracts/NFTStake.sol\":32813:32818  _from */\n      dup6\n        /* \"contracts/NFTStake.sol\":32805:32808  _to */\n      dup6\n        /* \"contracts/NFTStake.sol\":32805:32812  _to.sub */\n      tag_159\n      swap1\n        /* \"contracts/NFTStake.sol\":32805:32819  _to.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_336:\n        /* \"contracts/NFTStake.sol\":32805:32823  _to.sub(_from).mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":32805:32841  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_335:\n        /* \"contracts/NFTStake.sol\":32798:32841  return _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":32705:32849  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29921:29985  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_115:\n      mstore(0x20, 0x08)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29447:29464  IERC20 public DDT */\n    tag_119:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":38284:38379  function setDevAddress(address _devaddr) public onlyOwner {... */\n    tag_125:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_338\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_182\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_338:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_339\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_106\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_339:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_340\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_341\n      swap1\n      tag_186\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_340:\n        /* \"contracts/NFTStake.sol\":38363:38371  _devaddr */\n      dup1\n        /* \"contracts/NFTStake.sol\":38353:38360  devaddr */\n      0x03\n      0x00\n        /* \"contracts/NFTStake.sol\":38353:38371  devaddr = _devaddr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":38284:38379  function setDevAddress(address _devaddr) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29492:29514  address public devaddr */\n    tag_127:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":32857:33045  function getUserTokenIds(uint256 _pid, address _user) public view returns (uint256[] memory) {... */\n    tag_131:\n        /* \"contracts/NFTStake.sol\":32932:32948  uint256[] memory */\n      0x60\n        /* \"contracts/NFTStake.sol\":32961:32982  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTStake.sol\":32985:32993  userInfo */\n      0x08\n        /* \"contracts/NFTStake.sol\":32985:32999  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTStake.sol\":32994:32998  _pid */\n      dup6\n        /* \"contracts/NFTStake.sol\":32985:32999  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":32985:33006  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/NFTStake.sol\":33000:33005  _user */\n      dup5\n        /* \"contracts/NFTStake.sol\":32985:33006  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":32961:33006  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":33024:33028  user */\n      dup1\n        /* \"contracts/NFTStake.sol\":33024:33037  user.tokenIds */\n      0x00\n      add\n        /* \"contracts/NFTStake.sol\":33017:33037  return user.tokenIds */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_344\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_345:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_345\n      jumpi\n    tag_344:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":32857:33045  function getUserTokenIds(uint256 _pid, address _user) public view returns (uint256[] memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":34998:35737  function deposit(uint256 _pid, uint256 _tokenId) public {... */\n    tag_136:\n        /* \"contracts/NFTStake.sol\":35065:35086  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTStake.sol\":35089:35097  poolInfo */\n      0x07\n        /* \"contracts/NFTStake.sol\":35098:35102  _pid */\n      dup4\n        /* \"contracts/NFTStake.sol\":35089:35103  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_347\n      jumpi\n      tag_348\n      tag_151\n      jump\t// in\n    tag_348:\n    tag_347:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTStake.sol\":35065:35103  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":35114:35135  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTStake.sol\":35138:35146  userInfo */\n      0x08\n        /* \"contracts/NFTStake.sol\":35138:35152  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTStake.sol\":35147:35151  _pid */\n      dup6\n        /* \"contracts/NFTStake.sol\":35138:35152  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":35138:35164  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTStake.sol\":35153:35163  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":35138:35164  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStake.sol\":35114:35164  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":35175:35191  updatePool(_pid) */\n      tag_350\n        /* \"contracts/NFTStake.sol\":35186:35190  _pid */\n      dup5\n        /* \"contracts/NFTStake.sol\":35175:35185  updatePool */\n      tag_83\n        /* \"contracts/NFTStake.sol\":35175:35191  updatePool(_pid) */\n      jump\t// in\n    tag_350:\n        /* \"contracts/NFTStake.sol\":35220:35221  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":35206:35210  user */\n      dup2\n        /* \"contracts/NFTStake.sol\":35206:35217  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35206:35221  user.amount > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":35202:35435  if (user.amount > 0) {... */\n      iszero\n      tag_351\n      jumpi\n        /* \"contracts/NFTStake.sol\":35238:35253  uint256 pending */\n      0x00\n        /* \"contracts/NFTStake.sol\":35256:35323  user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_352\n        /* \"contracts/NFTStake.sol\":35307:35311  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":35307:35322  user.rewardDebt */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35256:35302  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      tag_353\n        /* \"contracts/NFTStake.sol\":35297:35301  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":35256:35292  user.amount.mul(pool.accDDTPerShare) */\n      tag_354\n        /* \"contracts/NFTStake.sol\":35272:35276  pool */\n      dup8\n        /* \"contracts/NFTStake.sol\":35272:35291  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35256:35260  user */\n      dup8\n        /* \"contracts/NFTStake.sol\":35256:35267  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35256:35271  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":35256:35292  user.amount.mul(pool.accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_354:\n        /* \"contracts/NFTStake.sol\":35256:35296  user.amount.mul(pool.accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":35256:35302  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_353:\n        /* \"contracts/NFTStake.sol\":35256:35306  user.amount.mul(pool.accDDTPerShare).div(1e12).sub */\n      tag_159\n      swap1\n        /* \"contracts/NFTStake.sol\":35256:35323  user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_352:\n        /* \"contracts/NFTStake.sol\":35238:35323  uint256 pending = user.amount.mul(pool.accDDTPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":35351:35352  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":35341:35348  pending */\n      dup2\n        /* \"contracts/NFTStake.sol\":35341:35352  pending > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":35338:35424  if(pending > 0){... */\n      iszero\n      tag_355\n      jumpi\n        /* \"contracts/NFTStake.sol\":35372:35408  safeDDTTransfer(msg.sender, pending) */\n      tag_356\n        /* \"contracts/NFTStake.sol\":35388:35398  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":35400:35407  pending */\n      dup3\n        /* \"contracts/NFTStake.sol\":35372:35387  safeDDTTransfer */\n      tag_233\n        /* \"contracts/NFTStake.sol\":35372:35408  safeDDTTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_356:\n        /* \"contracts/NFTStake.sol\":35338:35424  if(pending > 0){... */\n    tag_355:\n        /* \"contracts/NFTStake.sol\":35223:35435  {... */\n      pop\n        /* \"contracts/NFTStake.sol\":35202:35435  if (user.amount > 0) {... */\n    tag_351:\n        /* \"contracts/NFTStake.sol\":35445:35449  pool */\n      dup2\n        /* \"contracts/NFTStake.sol\":35445:35458  pool.NFTToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":35445:35475  pool.NFTToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/NFTStake.sol\":35484:35494  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":35505:35509  this */\n      address\n        /* \"contracts/NFTStake.sol\":35512:35520  _tokenId */\n      dup7\n        /* \"contracts/NFTStake.sol\":35445:35521  pool.NFTToken.safeTransferFrom(address(msg.sender), address(this), _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_357\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_357:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_358\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_358:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_360\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_360:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":35546:35564  user.amount.add(1) */\n      tag_361\n        /* \"contracts/NFTStake.sol\":35562:35563  1 */\n      0x01\n        /* \"contracts/NFTStake.sol\":35546:35550  user */\n      dup3\n        /* \"contracts/NFTStake.sol\":35546:35557  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35546:35561  user.amount.add */\n      tag_193\n      swap1\n        /* \"contracts/NFTStake.sol\":35546:35564  user.amount.add(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_361:\n        /* \"contracts/NFTStake.sol\":35532:35536  user */\n      dup2\n        /* \"contracts/NFTStake.sol\":35532:35543  user.amount */\n      0x01\n      add\n        /* \"contracts/NFTStake.sol\":35532:35564  user.amount = user.amount.add(1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":35593:35639  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      tag_362\n        /* \"contracts/NFTStake.sol\":35634:35638  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTStake.sol\":35593:35629  user.amount.mul(pool.accDDTPerShare) */\n      tag_363\n        /* \"contracts/NFTStake.sol\":35609:35613  pool */\n      dup5\n        /* \"contracts/NFTStake.sol\":35609:35628  pool.accDDTPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35593:35597  user */\n      dup5\n        /* \"contracts/NFTStake.sol\":35593:35604  user.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTStake.sol\":35593:35608  user.amount.mul */\n      tag_157\n      swap1\n        /* \"contracts/NFTStake.sol\":35593:35629  user.amount.mul(pool.accDDTPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_363:\n        /* \"contracts/NFTStake.sol\":35593:35633  user.amount.mul(pool.accDDTPerShare).div */\n      tag_158\n      swap1\n        /* \"contracts/NFTStake.sol\":35593:35639  user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_362:\n        /* \"contracts/NFTStake.sol\":35575:35579  user */\n      dup2\n        /* \"contracts/NFTStake.sol\":35575:35590  user.rewardDebt */\n      0x02\n      add\n        /* \"contracts/NFTStake.sol\":35575:35639  user.rewardDebt = user.amount.mul(pool.accDDTPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":35650:35654  user */\n      dup1\n        /* \"contracts/NFTStake.sol\":35650:35663  user.tokenIds */\n      0x00\n      add\n        /* \"contracts/NFTStake.sol\":35669:35677  _tokenId */\n      dup4\n        /* \"contracts/NFTStake.sol\":35650:35678  user.tokenIds.push(_tokenId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/NFTStake.sol\":35714:35718  _pid */\n      dup4\n        /* \"contracts/NFTStake.sol\":35702:35712  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":35694:35729  Deposit(msg.sender, _pid, _tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/NFTStake.sol\":35720:35728  _tokenId */\n      dup6\n        /* \"contracts/NFTStake.sol\":35694:35729  Deposit(msg.sender, _pid, _tokenId) */\n      mload(0x40)\n      tag_365\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_365:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTStake.sol\":35054:35737  {... */\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":34998:35737  function deposit(uint256 _pid, uint256 _tokenId) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29380:29415  INFTMasterChef public NFTMasterChef */\n    tag_138:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":21084:21285  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_143:\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      tag_367\n        /* \"contracts/NFTStake.sol\":20406:20416  _msgSender */\n      tag_182\n        /* \"contracts/NFTStake.sol\":20406:20418  _msgSender() */\n      jump\t// in\n    tag_367:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      tag_368\n        /* \"contracts/NFTStake.sol\":20395:20400  owner */\n      tag_106\n        /* \"contracts/NFTStake.sol\":20395:20402  owner() */\n      jump\t// in\n    tag_368:\n        /* \"contracts/NFTStake.sol\":20395:20418  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStake.sol\":20387:20455  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_369\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_370\n      swap1\n      tag_186\n      jump\t// in\n    tag_370:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_369:\n        /* \"contracts/NFTStake.sol\":21193:21194  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":21173:21195  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":21173:21181  newOwner */\n      dup2\n        /* \"contracts/NFTStake.sol\":21173:21195  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NFTStake.sol\":21165:21238  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_372\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_373\n      swap1\n      tag_374\n      jump\t// in\n    tag_373:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_372:\n        /* \"contracts/NFTStake.sol\":21249:21277  _transferOwnership(newOwner) */\n      tag_375\n        /* \"contracts/NFTStake.sol\":21268:21276  newOwner */\n      dup2\n        /* \"contracts/NFTStake.sol\":21249:21267  _transferOwnership */\n      tag_332\n        /* \"contracts/NFTStake.sol\":21249:21277  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_375:\n        /* \"contracts/NFTStake.sol\":21084:21285  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":29559:29585  uint256 public DDTPerBlock */\n    tag_145:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":1827:2298  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_157:\n        /* \"contracts/NFTStake.sol\":1885:1892  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":2135:2136  0 */\n      dup1\n        /* \"contracts/NFTStake.sol\":2130:2131  a */\n      dup4\n        /* \"contracts/NFTStake.sol\":2130:2136  a == 0 */\n      sub\n        /* \"contracts/NFTStake.sol\":2126:2173  if (a == 0) {... */\n      tag_377\n      jumpi\n        /* \"contracts/NFTStake.sol\":2160:2161  0 */\n      0x00\n        /* \"contracts/NFTStake.sol\":2153:2161  return 0 */\n      swap1\n      pop\n      jump(tag_376)\n        /* \"contracts/NFTStake.sol\":2126:2173  if (a == 0) {... */\n    tag_377:\n        /* \"contracts/NFTStake.sol\":2185:2194  uint256 c */\n      0x00\n        /* \"contracts/NFTStake.sol\":2201:2202  b */\n      dup3\n        /* \"contracts/NFTStake.sol\":2197:2198  a */\n      dup5\n        /* \"contracts/NFTStake.sol\":2197:2202  a * b */\n      tag_378\n      swap2\n      swap1\n      tag_379\n      jump\t// in\n    tag_378:\n        /* \"contracts/NFTStake.sol\":2185:2202  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":2230:2231  b */\n      dup3\n        /* \"contracts/NFTStake.sol\":2225:2226  a */\n      dup5\n        /* \"contracts/NFTStake.sol\":2221:2222  c */\n      dup3\n        /* \"contracts/NFTStake.sol\":2221:2226  c / a */\n      tag_380\n      swap2\n      swap1\n      tag_381\n      jump\t// in\n    tag_380:\n        /* \"contracts/NFTStake.sol\":2221:2231  c / a == b */\n      eq\n        /* \"contracts/NFTStake.sol\":2213:2269  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_382\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_383\n      swap1\n      tag_384\n      jump\t// in\n    tag_383:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_382:\n        /* \"contracts/NFTStake.sol\":2289:2290  c */\n      dup1\n        /* \"contracts/NFTStake.sol\":2282:2290  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":1827:2298  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_376:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":2766:2898  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_158:\n        /* \"contracts/NFTStake.sol\":2824:2831  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":2851:2890  div(a, b, \"SafeMath: division by zero\") */\n      tag_386\n        /* \"contracts/NFTStake.sol\":2855:2856  a */\n      dup4\n        /* \"contracts/NFTStake.sol\":2858:2859  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":2851:2890  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTStake.sol\":2851:2854  div */\n      tag_387\n        /* \"contracts/NFTStake.sol\":2851:2890  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_386:\n        /* \"contracts/NFTStake.sol\":2844:2890  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":2766:2898  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":911:1047  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_159:\n        /* \"contracts/NFTStake.sol\":969:976  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":996:1039  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_389\n        /* \"contracts/NFTStake.sol\":1000:1001  a */\n      dup4\n        /* \"contracts/NFTStake.sol\":1003:1004  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":996:1039  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTStake.sol\":996:999  sub */\n      tag_390\n        /* \"contracts/NFTStake.sol\":996:1039  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_389:\n        /* \"contracts/NFTStake.sol\":989:1039  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":911:1047  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":19549:19647  function _msgSender() internal view virtual returns (address) {... */\n    tag_182:\n        /* \"contracts/NFTStake.sol\":19602:19609  address */\n      0x00\n        /* \"contracts/NFTStake.sol\":19629:19639  msg.sender */\n      caller\n        /* \"contracts/NFTStake.sol\":19622:19639  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":19549:19647  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":455:636  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_193:\n        /* \"contracts/NFTStake.sol\":513:520  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":533:542  uint256 c */\n      dup1\n        /* \"contracts/NFTStake.sol\":549:550  b */\n      dup3\n        /* \"contracts/NFTStake.sol\":545:546  a */\n      dup5\n        /* \"contracts/NFTStake.sol\":545:550  a + b */\n      tag_393\n      swap2\n      swap1\n      tag_394\n      jump\t// in\n    tag_393:\n        /* \"contracts/NFTStake.sol\":533:550  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":574:575  a */\n      dup4\n        /* \"contracts/NFTStake.sol\":569:570  c */\n      dup2\n        /* \"contracts/NFTStake.sol\":569:575  c >= a */\n      lt\n      iszero\n        /* \"contracts/NFTStake.sol\":561:607  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_395\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_396\n      swap1\n      tag_397\n      jump\t// in\n    tag_396:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_395:\n        /* \"contracts/NFTStake.sol\":627:628  c */\n      dup1\n        /* \"contracts/NFTStake.sol\":620:628  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":455:636  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":38005:38276  function safeDDTTransfer(address _to, uint256 _amount) internal {... */\n    tag_233:\n        /* \"contracts/NFTStake.sol\":38080:38094  uint256 DDTbal */\n      0x00\n        /* \"contracts/NFTStake.sol\":38097:38100  DDT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":38097:38110  DDT.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTStake.sol\":38119:38123  this */\n      address\n        /* \"contracts/NFTStake.sol\":38097:38125  DDT.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_399\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_399:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_401\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_401:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_402\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_402:\n        /* \"contracts/NFTStake.sol\":38080:38125  uint256 DDTbal = DDT.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":38150:38156  DDTbal */\n      dup1\n        /* \"contracts/NFTStake.sol\":38140:38147  _amount */\n      dup3\n        /* \"contracts/NFTStake.sol\":38140:38156  _amount > DDTbal */\n      gt\n        /* \"contracts/NFTStake.sol\":38136:38269  if (_amount > DDTbal) {... */\n      iszero\n      tag_403\n      jumpi\n        /* \"contracts/NFTStake.sol\":38173:38176  DDT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":38173:38185  DDT.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/NFTStake.sol\":38186:38189  _to */\n      dup5\n        /* \"contracts/NFTStake.sol\":38191:38197  DDTbal */\n      dup4\n        /* \"contracts/NFTStake.sol\":38173:38198  DDT.transfer(_to, DDTbal) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_404\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_404:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_406\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_406:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_407\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_407:\n      pop\n        /* \"contracts/NFTStake.sol\":38136:38269  if (_amount > DDTbal) {... */\n      jump(tag_408)\n    tag_403:\n        /* \"contracts/NFTStake.sol\":38231:38234  DDT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":38231:38243  DDT.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/NFTStake.sol\":38244:38247  _to */\n      dup5\n        /* \"contracts/NFTStake.sol\":38249:38256  _amount */\n      dup5\n        /* \"contracts/NFTStake.sol\":38231:38257  DDT.transfer(_to, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_409\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_409:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_411\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_411:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_412\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_412:\n      pop\n        /* \"contracts/NFTStake.sol\":38136:38269  if (_amount > DDTbal) {... */\n    tag_408:\n        /* \"contracts/NFTStake.sol\":38069:38276  {... */\n      pop\n        /* \"contracts/NFTStake.sol\":38005:38276  function safeDDTTransfer(address _to, uint256 _amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":21445:21636  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_332:\n        /* \"contracts/NFTStake.sol\":21519:21535  address oldOwner */\n      0x00\n        /* \"contracts/NFTStake.sol\":21538:21544  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":21519:21544  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":21564:21572  newOwner */\n      dup2\n        /* \"contracts/NFTStake.sol\":21555:21561  _owner */\n      0x00\n      dup1\n        /* \"contracts/NFTStake.sol\":21555:21572  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStake.sol\":21619:21627  newOwner */\n      dup2\n        /* \"contracts/NFTStake.sol\":21588:21628  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStake.sol\":21609:21617  oldOwner */\n      dup2\n        /* \"contracts/NFTStake.sol\":21588:21628  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTStake.sol\":21508:21636  {... */\n      pop\n        /* \"contracts/NFTStake.sol\":21445:21636  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":3428:3773  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_387:\n        /* \"contracts/NFTStake.sol\":3514:3521  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":3613:3614  0 */\n      dup1\n        /* \"contracts/NFTStake.sol\":3609:3610  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":3609:3614  b > 0 */\n      gt\n        /* \"contracts/NFTStake.sol\":3616:3628  errorMessage */\n      dup3\n        /* \"contracts/NFTStake.sol\":3601:3629  require(b > 0, errorMessage) */\n      swap1\n      tag_415\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_416\n      swap2\n      swap1\n      tag_417\n      jump\t// in\n    tag_416:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_415:\n      pop\n        /* \"contracts/NFTStake.sol\":3640:3649  uint256 c */\n      0x00\n        /* \"contracts/NFTStake.sol\":3656:3657  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":3652:3653  a */\n      dup6\n        /* \"contracts/NFTStake.sol\":3652:3657  a / b */\n      tag_418\n      swap2\n      swap1\n      tag_381\n      jump\t// in\n    tag_418:\n        /* \"contracts/NFTStake.sol\":3640:3657  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":3764:3765  c */\n      dup1\n        /* \"contracts/NFTStake.sol\":3757:3765  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":3428:3773  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStake.sol\":1384:1576  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_390:\n        /* \"contracts/NFTStake.sol\":1470:1477  uint256 */\n      0x00\n        /* \"contracts/NFTStake.sol\":1503:1504  a */\n      dup4\n        /* \"contracts/NFTStake.sol\":1498:1499  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":1498:1504  b <= a */\n      gt\n      iszero\n        /* \"contracts/NFTStake.sol\":1506:1518  errorMessage */\n      dup3\n        /* \"contracts/NFTStake.sol\":1490:1519  require(b <= a, errorMessage) */\n      swap1\n      tag_420\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_421\n      swap2\n      swap1\n      tag_417\n      jump\t// in\n    tag_421:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_420:\n      pop\n        /* \"contracts/NFTStake.sol\":1530:1539  uint256 c */\n      0x00\n        /* \"contracts/NFTStake.sol\":1546:1547  b */\n      dup4\n        /* \"contracts/NFTStake.sol\":1542:1543  a */\n      dup6\n        /* \"contracts/NFTStake.sol\":1542:1547  a - b */\n      tag_422\n      swap2\n      swap1\n      tag_423\n      jump\t// in\n    tag_422:\n        /* \"contracts/NFTStake.sol\":1530:1547  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/NFTStake.sol\":1567:1568  c */\n      dup1\n        /* \"contracts/NFTStake.sol\":1560:1568  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStake.sol\":1384:1576  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_424:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_425:\n        /* \"#utility.yul\":177:201   */\n      tag_500\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_424\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_42:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_502\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_425\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:517   */\n    tag_426:\n        /* \"#utility.yul\":475:481   */\n      0x00\n        /* \"#utility.yul\":508:510   */\n      0x40\n        /* \"#utility.yul\":502:511   */\n      mload\n        /* \"#utility.yul\":492:511   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:517   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_427:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":646:763   */\n    tag_428:\n        /* \"#utility.yul\":755:756   */\n      0x00\n        /* \"#utility.yul\":752:753   */\n      dup1\n        /* \"#utility.yul\":745:757   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_429:\n        /* \"#utility.yul\":842:866   */\n      tag_507\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_424\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_508:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_430:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_510\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_429\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_45:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_513\n      tag_427\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":1118:1237   */\n    tag_512:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_514\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_430\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_431:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_432:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_517\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_431\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_433:\n        /* \"#utility.yul\":1684:1708   */\n      tag_519\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_432\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_520\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_520:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_434:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_522\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_433\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2001   */\n    tag_435:\n        /* \"#utility.yul\":1993:1994   */\n      0x00\n        /* \"#utility.yul\":1990:1991   */\n      dup1\n        /* \"#utility.yul\":1983:1995   */\n      revert\n        /* \"#utility.yul\":2007:2124   */\n    tag_436:\n        /* \"#utility.yul\":2116:2117   */\n      0x00\n        /* \"#utility.yul\":2113:2114   */\n      dup1\n        /* \"#utility.yul\":2106:2118   */\n      revert\n        /* \"#utility.yul\":2130:2232   */\n    tag_437:\n        /* \"#utility.yul\":2171:2177   */\n      0x00\n        /* \"#utility.yul\":2222:2224   */\n      0x1f\n        /* \"#utility.yul\":2218:2225   */\n      not\n        /* \"#utility.yul\":2213:2215   */\n      0x1f\n        /* \"#utility.yul\":2206:2211   */\n      dup4\n        /* \"#utility.yul\":2202:2216   */\n      add\n        /* \"#utility.yul\":2198:2226   */\n      and\n        /* \"#utility.yul\":2188:2226   */\n      swap1\n      pop\n        /* \"#utility.yul\":2130:2232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2238:2418   */\n    tag_438:\n        /* \"#utility.yul\":2286:2363   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2283:2284   */\n      0x00\n        /* \"#utility.yul\":2276:2364   */\n      mstore\n        /* \"#utility.yul\":2383:2387   */\n      0x41\n        /* \"#utility.yul\":2380:2381   */\n      0x04\n        /* \"#utility.yul\":2373:2388   */\n      mstore\n        /* \"#utility.yul\":2407:2411   */\n      0x24\n        /* \"#utility.yul\":2404:2405   */\n      0x00\n        /* \"#utility.yul\":2397:2412   */\n      revert\n        /* \"#utility.yul\":2424:2705   */\n    tag_439:\n        /* \"#utility.yul\":2507:2534   */\n      tag_528\n        /* \"#utility.yul\":2529:2533   */\n      dup3\n        /* \"#utility.yul\":2507:2534   */\n      tag_437\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":2499:2505   */\n      dup2\n        /* \"#utility.yul\":2495:2535   */\n      add\n        /* \"#utility.yul\":2637:2643   */\n      dup2\n        /* \"#utility.yul\":2625:2635   */\n      dup2\n        /* \"#utility.yul\":2622:2644   */\n      lt\n        /* \"#utility.yul\":2601:2619   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2589:2599   */\n      dup3\n        /* \"#utility.yul\":2586:2620   */\n      gt\n        /* \"#utility.yul\":2583:2645   */\n      or\n        /* \"#utility.yul\":2580:2668   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":2648:2666   */\n      tag_530\n      tag_438\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":2580:2668   */\n    tag_529:\n        /* \"#utility.yul\":2688:2698   */\n      dup1\n        /* \"#utility.yul\":2684:2686   */\n      0x40\n        /* \"#utility.yul\":2677:2699   */\n      mstore\n        /* \"#utility.yul\":2467:2705   */\n      pop\n        /* \"#utility.yul\":2424:2705   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2711:2840   */\n    tag_440:\n        /* \"#utility.yul\":2745:2751   */\n      0x00\n        /* \"#utility.yul\":2772:2792   */\n      tag_532\n      tag_426\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":2762:2792   */\n      swap1\n      pop\n        /* \"#utility.yul\":2801:2834   */\n      tag_533\n        /* \"#utility.yul\":2829:2833   */\n      dup3\n        /* \"#utility.yul\":2821:2827   */\n      dup3\n        /* \"#utility.yul\":2801:2834   */\n      tag_439\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":2711:2840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2846:3153   */\n    tag_441:\n        /* \"#utility.yul\":2907:2911   */\n      0x00\n        /* \"#utility.yul\":2997:3015   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2989:2995   */\n      dup3\n        /* \"#utility.yul\":2986:3016   */\n      gt\n        /* \"#utility.yul\":2983:3039   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":3019:3037   */\n      tag_536\n      tag_438\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":2983:3039   */\n    tag_535:\n        /* \"#utility.yul\":3057:3086   */\n      tag_537\n        /* \"#utility.yul\":3079:3085   */\n      dup3\n        /* \"#utility.yul\":3057:3086   */\n      tag_437\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":3049:3086   */\n      swap1\n      pop\n        /* \"#utility.yul\":3141:3145   */\n      0x20\n        /* \"#utility.yul\":3135:3139   */\n      dup2\n        /* \"#utility.yul\":3131:3146   */\n      add\n        /* \"#utility.yul\":3123:3146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2846:3153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3159:3313   */\n    tag_442:\n        /* \"#utility.yul\":3243:3249   */\n      dup3\n        /* \"#utility.yul\":3238:3241   */\n      dup2\n        /* \"#utility.yul\":3233:3236   */\n      dup4\n        /* \"#utility.yul\":3220:3250   */\n      calldatacopy\n        /* \"#utility.yul\":3305:3306   */\n      0x00\n        /* \"#utility.yul\":3296:3302   */\n      dup4\n        /* \"#utility.yul\":3291:3294   */\n      dup4\n        /* \"#utility.yul\":3287:3303   */\n      add\n        /* \"#utility.yul\":3280:3307   */\n      mstore\n        /* \"#utility.yul\":3159:3313   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3319:3729   */\n    tag_443:\n        /* \"#utility.yul\":3396:3401   */\n      0x00\n        /* \"#utility.yul\":3421:3486   */\n      tag_540\n        /* \"#utility.yul\":3437:3485   */\n      tag_541\n        /* \"#utility.yul\":3478:3484   */\n      dup5\n        /* \"#utility.yul\":3437:3485   */\n      tag_441\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":3421:3486   */\n      tag_440\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":3412:3486   */\n      swap1\n      pop\n        /* \"#utility.yul\":3509:3515   */\n      dup3\n        /* \"#utility.yul\":3502:3507   */\n      dup2\n        /* \"#utility.yul\":3495:3516   */\n      mstore\n        /* \"#utility.yul\":3547:3551   */\n      0x20\n        /* \"#utility.yul\":3540:3545   */\n      dup2\n        /* \"#utility.yul\":3536:3552   */\n      add\n        /* \"#utility.yul\":3585:3588   */\n      dup5\n        /* \"#utility.yul\":3576:3582   */\n      dup5\n        /* \"#utility.yul\":3571:3574   */\n      dup5\n        /* \"#utility.yul\":3567:3583   */\n      add\n        /* \"#utility.yul\":3564:3589   */\n      gt\n        /* \"#utility.yul\":3561:3673   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":3592:3671   */\n      tag_543\n      tag_436\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":3561:3673   */\n    tag_542:\n        /* \"#utility.yul\":3682:3723   */\n      tag_544\n        /* \"#utility.yul\":3716:3722   */\n      dup5\n        /* \"#utility.yul\":3711:3714   */\n      dup3\n        /* \"#utility.yul\":3706:3709   */\n      dup6\n        /* \"#utility.yul\":3682:3723   */\n      tag_442\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":3402:3729   */\n      pop\n        /* \"#utility.yul\":3319:3729   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3748:4086   */\n    tag_444:\n        /* \"#utility.yul\":3803:3808   */\n      0x00\n        /* \"#utility.yul\":3852:3855   */\n      dup3\n        /* \"#utility.yul\":3845:3849   */\n      0x1f\n        /* \"#utility.yul\":3837:3843   */\n      dup4\n        /* \"#utility.yul\":3833:3850   */\n      add\n        /* \"#utility.yul\":3829:3856   */\n      slt\n        /* \"#utility.yul\":3819:3941   */\n      tag_546\n      jumpi\n        /* \"#utility.yul\":3860:3939   */\n      tag_547\n      tag_435\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":3819:3941   */\n    tag_546:\n        /* \"#utility.yul\":3977:3983   */\n      dup2\n        /* \"#utility.yul\":3964:3984   */\n      calldataload\n        /* \"#utility.yul\":4002:4080   */\n      tag_548\n        /* \"#utility.yul\":4076:4079   */\n      dup5\n        /* \"#utility.yul\":4068:4074   */\n      dup3\n        /* \"#utility.yul\":4061:4065   */\n      0x20\n        /* \"#utility.yul\":4053:4059   */\n      dup7\n        /* \"#utility.yul\":4049:4066   */\n      add\n        /* \"#utility.yul\":4002:4080   */\n      tag_443\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":3993:4080   */\n      swap2\n      pop\n        /* \"#utility.yul\":3809:4086   */\n      pop\n        /* \"#utility.yul\":3748:4086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4092:5035   */\n    tag_49:\n        /* \"#utility.yul\":4187:4193   */\n      0x00\n        /* \"#utility.yul\":4195:4201   */\n      dup1\n        /* \"#utility.yul\":4203:4209   */\n      0x00\n        /* \"#utility.yul\":4211:4217   */\n      dup1\n        /* \"#utility.yul\":4260:4263   */\n      0x80\n        /* \"#utility.yul\":4248:4257   */\n      dup6\n        /* \"#utility.yul\":4239:4246   */\n      dup8\n        /* \"#utility.yul\":4235:4258   */\n      sub\n        /* \"#utility.yul\":4231:4264   */\n      slt\n        /* \"#utility.yul\":4228:4348   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":4267:4346   */\n      tag_551\n      tag_427\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":4228:4348   */\n    tag_550:\n        /* \"#utility.yul\":4387:4388   */\n      0x00\n        /* \"#utility.yul\":4412:4465   */\n      tag_552\n        /* \"#utility.yul\":4457:4464   */\n      dup8\n        /* \"#utility.yul\":4448:4454   */\n      dup3\n        /* \"#utility.yul\":4437:4446   */\n      dup9\n        /* \"#utility.yul\":4433:4455   */\n      add\n        /* \"#utility.yul\":4412:4465   */\n      tag_434\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":4402:4465   */\n      swap5\n      pop\n        /* \"#utility.yul\":4358:4475   */\n      pop\n        /* \"#utility.yul\":4514:4516   */\n      0x20\n        /* \"#utility.yul\":4540:4593   */\n      tag_553\n        /* \"#utility.yul\":4585:4592   */\n      dup8\n        /* \"#utility.yul\":4576:4582   */\n      dup3\n        /* \"#utility.yul\":4565:4574   */\n      dup9\n        /* \"#utility.yul\":4561:4583   */\n      add\n        /* \"#utility.yul\":4540:4593   */\n      tag_434\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":4530:4593   */\n      swap4\n      pop\n        /* \"#utility.yul\":4485:4603   */\n      pop\n        /* \"#utility.yul\":4642:4644   */\n      0x40\n        /* \"#utility.yul\":4668:4721   */\n      tag_554\n        /* \"#utility.yul\":4713:4720   */\n      dup8\n        /* \"#utility.yul\":4704:4710   */\n      dup3\n        /* \"#utility.yul\":4693:4702   */\n      dup9\n        /* \"#utility.yul\":4689:4711   */\n      add\n        /* \"#utility.yul\":4668:4721   */\n      tag_430\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":4658:4721   */\n      swap3\n      pop\n        /* \"#utility.yul\":4613:4731   */\n      pop\n        /* \"#utility.yul\":4798:4800   */\n      0x60\n        /* \"#utility.yul\":4787:4796   */\n      dup6\n        /* \"#utility.yul\":4783:4801   */\n      add\n        /* \"#utility.yul\":4770:4802   */\n      calldataload\n        /* \"#utility.yul\":4829:4847   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4821:4827   */\n      dup2\n        /* \"#utility.yul\":4818:4848   */\n      gt\n        /* \"#utility.yul\":4815:4932   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":4851:4930   */\n      tag_556\n      tag_428\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":4815:4932   */\n    tag_555:\n        /* \"#utility.yul\":4956:5018   */\n      tag_557\n        /* \"#utility.yul\":5010:5017   */\n      dup8\n        /* \"#utility.yul\":5001:5007   */\n      dup3\n        /* \"#utility.yul\":4990:4999   */\n      dup9\n        /* \"#utility.yul\":4986:5008   */\n      add\n        /* \"#utility.yul\":4956:5018   */\n      tag_444\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":4946:5018   */\n      swap2\n      pop\n        /* \"#utility.yul\":4741:5028   */\n      pop\n        /* \"#utility.yul\":4092:5035   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5041:5190   */\n    tag_445:\n        /* \"#utility.yul\":5077:5084   */\n      0x00\n        /* \"#utility.yul\":5117:5183   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5110:5115   */\n      dup3\n        /* \"#utility.yul\":5106:5184   */\n      and\n        /* \"#utility.yul\":5095:5184   */\n      swap1\n      pop\n        /* \"#utility.yul\":5041:5190   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5196:5311   */\n    tag_446:\n        /* \"#utility.yul\":5281:5304   */\n      tag_560\n        /* \"#utility.yul\":5298:5303   */\n      dup2\n        /* \"#utility.yul\":5281:5304   */\n      tag_445\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":5276:5279   */\n      dup3\n        /* \"#utility.yul\":5269:5305   */\n      mstore\n        /* \"#utility.yul\":5196:5311   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5317:5535   */\n    tag_52:\n        /* \"#utility.yul\":5408:5412   */\n      0x00\n        /* \"#utility.yul\":5446:5448   */\n      0x20\n        /* \"#utility.yul\":5435:5444   */\n      dup3\n        /* \"#utility.yul\":5431:5449   */\n      add\n        /* \"#utility.yul\":5423:5449   */\n      swap1\n      pop\n        /* \"#utility.yul\":5459:5528   */\n      tag_562\n        /* \"#utility.yul\":5525:5526   */\n      0x00\n        /* \"#utility.yul\":5514:5523   */\n      dup4\n        /* \"#utility.yul\":5510:5527   */\n      add\n        /* \"#utility.yul\":5501:5507   */\n      dup5\n        /* \"#utility.yul\":5459:5528   */\n      tag_446\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":5317:5535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5541:5601   */\n    tag_447:\n        /* \"#utility.yul\":5569:5572   */\n      0x00\n        /* \"#utility.yul\":5590:5595   */\n      dup2\n        /* \"#utility.yul\":5583:5595   */\n      swap1\n      pop\n        /* \"#utility.yul\":5541:5601   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5607:5749   */\n    tag_448:\n        /* \"#utility.yul\":5657:5666   */\n      0x00\n        /* \"#utility.yul\":5690:5743   */\n      tag_565\n        /* \"#utility.yul\":5708:5742   */\n      tag_566\n        /* \"#utility.yul\":5717:5741   */\n      tag_567\n        /* \"#utility.yul\":5735:5740   */\n      dup5\n        /* \"#utility.yul\":5717:5741   */\n      tag_431\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":5708:5742   */\n      tag_447\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":5690:5743   */\n      tag_431\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":5677:5743   */\n      swap1\n      pop\n        /* \"#utility.yul\":5607:5749   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5755:5881   */\n    tag_449:\n        /* \"#utility.yul\":5805:5814   */\n      0x00\n        /* \"#utility.yul\":5838:5875   */\n      tag_569\n        /* \"#utility.yul\":5869:5874   */\n      dup3\n        /* \"#utility.yul\":5838:5875   */\n      tag_448\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":5825:5875   */\n      swap1\n      pop\n        /* \"#utility.yul\":5755:5881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5887:6029   */\n    tag_450:\n        /* \"#utility.yul\":5953:5962   */\n      0x00\n        /* \"#utility.yul\":5986:6023   */\n      tag_571\n        /* \"#utility.yul\":6017:6022   */\n      dup3\n        /* \"#utility.yul\":5986:6023   */\n      tag_449\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":5973:6023   */\n      swap1\n      pop\n        /* \"#utility.yul\":5887:6029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6035:6198   */\n    tag_451:\n        /* \"#utility.yul\":6138:6191   */\n      tag_573\n        /* \"#utility.yul\":6185:6190   */\n      dup2\n        /* \"#utility.yul\":6138:6191   */\n      tag_450\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":6133:6136   */\n      dup3\n        /* \"#utility.yul\":6126:6192   */\n      mstore\n        /* \"#utility.yul\":6035:6198   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6204:6789   */\n    tag_57:\n        /* \"#utility.yul\":6397:6401   */\n      0x00\n        /* \"#utility.yul\":6435:6438   */\n      0x80\n        /* \"#utility.yul\":6424:6433   */\n      dup3\n        /* \"#utility.yul\":6420:6439   */\n      add\n        /* \"#utility.yul\":6412:6439   */\n      swap1\n      pop\n        /* \"#utility.yul\":6449:6536   */\n      tag_575\n        /* \"#utility.yul\":6533:6534   */\n      0x00\n        /* \"#utility.yul\":6522:6531   */\n      dup4\n        /* \"#utility.yul\":6518:6535   */\n      add\n        /* \"#utility.yul\":6509:6515   */\n      dup8\n        /* \"#utility.yul\":6449:6536   */\n      tag_451\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":6546:6618   */\n      tag_576\n        /* \"#utility.yul\":6614:6616   */\n      0x20\n        /* \"#utility.yul\":6603:6612   */\n      dup4\n        /* \"#utility.yul\":6599:6617   */\n      add\n        /* \"#utility.yul\":6590:6596   */\n      dup7\n        /* \"#utility.yul\":6546:6618   */\n      tag_425\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":6628:6700   */\n      tag_577\n        /* \"#utility.yul\":6696:6698   */\n      0x40\n        /* \"#utility.yul\":6685:6694   */\n      dup4\n        /* \"#utility.yul\":6681:6699   */\n      add\n        /* \"#utility.yul\":6672:6678   */\n      dup6\n        /* \"#utility.yul\":6628:6700   */\n      tag_425\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":6710:6782   */\n      tag_578\n        /* \"#utility.yul\":6778:6780   */\n      0x60\n        /* \"#utility.yul\":6767:6776   */\n      dup4\n        /* \"#utility.yul\":6763:6781   */\n      add\n        /* \"#utility.yul\":6754:6760   */\n      dup5\n        /* \"#utility.yul\":6710:6782   */\n      tag_425\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":6204:6789   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6795:6907   */\n    tag_452:\n        /* \"#utility.yul\":6848:6855   */\n      0x00\n        /* \"#utility.yul\":6877:6901   */\n      tag_580\n        /* \"#utility.yul\":6895:6900   */\n      dup3\n        /* \"#utility.yul\":6877:6901   */\n      tag_432\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":6866:6901   */\n      swap1\n      pop\n        /* \"#utility.yul\":6795:6907   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6913:7067   */\n    tag_453:\n        /* \"#utility.yul\":7002:7042   */\n      tag_582\n        /* \"#utility.yul\":7036:7041   */\n      dup2\n        /* \"#utility.yul\":7002:7042   */\n      tag_452\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":6995:7000   */\n      dup2\n        /* \"#utility.yul\":6992:7043   */\n      eq\n        /* \"#utility.yul\":6982:7061   */\n      tag_583\n      jumpi\n        /* \"#utility.yul\":7057:7058   */\n      0x00\n        /* \"#utility.yul\":7054:7055   */\n      dup1\n        /* \"#utility.yul\":7047:7059   */\n      revert\n        /* \"#utility.yul\":6982:7061   */\n    tag_583:\n        /* \"#utility.yul\":6913:7067   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7073:7244   */\n    tag_454:\n        /* \"#utility.yul\":7135:7140   */\n      0x00\n        /* \"#utility.yul\":7173:7179   */\n      dup2\n        /* \"#utility.yul\":7160:7180   */\n      calldataload\n        /* \"#utility.yul\":7151:7180   */\n      swap1\n      pop\n        /* \"#utility.yul\":7189:7238   */\n      tag_585\n        /* \"#utility.yul\":7232:7237   */\n      dup2\n        /* \"#utility.yul\":7189:7238   */\n      tag_453\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":7073:7244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7250:7340   */\n    tag_455:\n        /* \"#utility.yul\":7284:7291   */\n      0x00\n        /* \"#utility.yul\":7327:7332   */\n      dup2\n        /* \"#utility.yul\":7320:7333   */\n      iszero\n        /* \"#utility.yul\":7313:7334   */\n      iszero\n        /* \"#utility.yul\":7302:7334   */\n      swap1\n      pop\n        /* \"#utility.yul\":7250:7340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7346:7462   */\n    tag_456:\n        /* \"#utility.yul\":7416:7437   */\n      tag_588\n        /* \"#utility.yul\":7431:7436   */\n      dup2\n        /* \"#utility.yul\":7416:7437   */\n      tag_455\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":7409:7414   */\n      dup2\n        /* \"#utility.yul\":7406:7438   */\n      eq\n        /* \"#utility.yul\":7396:7456   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":7452:7453   */\n      0x00\n        /* \"#utility.yul\":7449:7450   */\n      dup1\n        /* \"#utility.yul\":7442:7454   */\n      revert\n        /* \"#utility.yul\":7396:7456   */\n    tag_589:\n        /* \"#utility.yul\":7346:7462   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7468:7601   */\n    tag_457:\n        /* \"#utility.yul\":7511:7516   */\n      0x00\n        /* \"#utility.yul\":7549:7555   */\n      dup2\n        /* \"#utility.yul\":7536:7556   */\n      calldataload\n        /* \"#utility.yul\":7527:7556   */\n      swap1\n      pop\n        /* \"#utility.yul\":7565:7595   */\n      tag_591\n        /* \"#utility.yul\":7589:7594   */\n      dup2\n        /* \"#utility.yul\":7565:7595   */\n      tag_456\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":7468:7601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7607:8252   */\n    tag_63:\n        /* \"#utility.yul\":7697:7703   */\n      0x00\n        /* \"#utility.yul\":7705:7711   */\n      dup1\n        /* \"#utility.yul\":7713:7719   */\n      0x00\n        /* \"#utility.yul\":7762:7764   */\n      0x60\n        /* \"#utility.yul\":7750:7759   */\n      dup5\n        /* \"#utility.yul\":7741:7748   */\n      dup7\n        /* \"#utility.yul\":7737:7760   */\n      sub\n        /* \"#utility.yul\":7733:7765   */\n      slt\n        /* \"#utility.yul\":7730:7849   */\n      iszero\n      tag_593\n      jumpi\n        /* \"#utility.yul\":7768:7847   */\n      tag_594\n      tag_427\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":7730:7849   */\n    tag_593:\n        /* \"#utility.yul\":7888:7889   */\n      0x00\n        /* \"#utility.yul\":7913:7966   */\n      tag_595\n        /* \"#utility.yul\":7958:7965   */\n      dup7\n        /* \"#utility.yul\":7949:7955   */\n      dup3\n        /* \"#utility.yul\":7938:7947   */\n      dup8\n        /* \"#utility.yul\":7934:7956   */\n      add\n        /* \"#utility.yul\":7913:7966   */\n      tag_430\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":7903:7966   */\n      swap4\n      pop\n        /* \"#utility.yul\":7859:7976   */\n      pop\n        /* \"#utility.yul\":8015:8017   */\n      0x20\n        /* \"#utility.yul\":8041:8110   */\n      tag_596\n        /* \"#utility.yul\":8102:8109   */\n      dup7\n        /* \"#utility.yul\":8093:8099   */\n      dup3\n        /* \"#utility.yul\":8082:8091   */\n      dup8\n        /* \"#utility.yul\":8078:8100   */\n      add\n        /* \"#utility.yul\":8041:8110   */\n      tag_454\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":8031:8110   */\n      swap3\n      pop\n        /* \"#utility.yul\":7986:8120   */\n      pop\n        /* \"#utility.yul\":8159:8161   */\n      0x40\n        /* \"#utility.yul\":8185:8235   */\n      tag_597\n        /* \"#utility.yul\":8227:8234   */\n      dup7\n        /* \"#utility.yul\":8218:8224   */\n      dup3\n        /* \"#utility.yul\":8207:8216   */\n      dup8\n        /* \"#utility.yul\":8203:8225   */\n      add\n        /* \"#utility.yul\":8185:8235   */\n      tag_457\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":8175:8235   */\n      swap2\n      pop\n        /* \"#utility.yul\":8130:8245   */\n      pop\n        /* \"#utility.yul\":7607:8252   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8258:8732   */\n    tag_67:\n        /* \"#utility.yul\":8326:8332   */\n      0x00\n        /* \"#utility.yul\":8334:8340   */\n      dup1\n        /* \"#utility.yul\":8383:8385   */\n      0x40\n        /* \"#utility.yul\":8371:8380   */\n      dup4\n        /* \"#utility.yul\":8362:8369   */\n      dup6\n        /* \"#utility.yul\":8358:8381   */\n      sub\n        /* \"#utility.yul\":8354:8386   */\n      slt\n        /* \"#utility.yul\":8351:8470   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":8389:8468   */\n      tag_600\n      tag_427\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":8351:8470   */\n    tag_599:\n        /* \"#utility.yul\":8509:8510   */\n      0x00\n        /* \"#utility.yul\":8534:8587   */\n      tag_601\n        /* \"#utility.yul\":8579:8586   */\n      dup6\n        /* \"#utility.yul\":8570:8576   */\n      dup3\n        /* \"#utility.yul\":8559:8568   */\n      dup7\n        /* \"#utility.yul\":8555:8577   */\n      add\n        /* \"#utility.yul\":8534:8587   */\n      tag_430\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":8524:8587   */\n      swap3\n      pop\n        /* \"#utility.yul\":8480:8597   */\n      pop\n        /* \"#utility.yul\":8636:8638   */\n      0x20\n        /* \"#utility.yul\":8662:8715   */\n      tag_602\n        /* \"#utility.yul\":8707:8714   */\n      dup6\n        /* \"#utility.yul\":8698:8704   */\n      dup3\n        /* \"#utility.yul\":8687:8696   */\n      dup7\n        /* \"#utility.yul\":8683:8705   */\n      add\n        /* \"#utility.yul\":8662:8715   */\n      tag_434\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":8652:8715   */\n      swap2\n      pop\n        /* \"#utility.yul\":8607:8725   */\n      pop\n        /* \"#utility.yul\":8258:8732   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8738:8855   */\n    tag_458:\n        /* \"#utility.yul\":8796:8803   */\n      0x00\n        /* \"#utility.yul\":8825:8849   */\n      tag_604\n        /* \"#utility.yul\":8843:8848   */\n      dup3\n        /* \"#utility.yul\":8825:8849   */\n      tag_432\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":8814:8849   */\n      swap1\n      pop\n        /* \"#utility.yul\":8738:8855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8861:9025   */\n    tag_459:\n        /* \"#utility.yul\":8955:9000   */\n      tag_606\n        /* \"#utility.yul\":8994:8999   */\n      dup2\n        /* \"#utility.yul\":8955:9000   */\n      tag_458\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":8948:8953   */\n      dup2\n        /* \"#utility.yul\":8945:9001   */\n      eq\n        /* \"#utility.yul\":8935:9019   */\n      tag_607\n      jumpi\n        /* \"#utility.yul\":9015:9016   */\n      0x00\n        /* \"#utility.yul\":9012:9013   */\n      dup1\n        /* \"#utility.yul\":9005:9017   */\n      revert\n        /* \"#utility.yul\":8935:9019   */\n    tag_607:\n        /* \"#utility.yul\":8861:9025   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9031:9212   */\n    tag_460:\n        /* \"#utility.yul\":9098:9103   */\n      0x00\n        /* \"#utility.yul\":9136:9142   */\n      dup2\n        /* \"#utility.yul\":9123:9143   */\n      calldataload\n        /* \"#utility.yul\":9114:9143   */\n      swap1\n      pop\n        /* \"#utility.yul\":9152:9206   */\n      tag_609\n        /* \"#utility.yul\":9200:9205   */\n      dup2\n        /* \"#utility.yul\":9152:9206   */\n      tag_459\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":9031:9212   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9218:9589   */\n    tag_72:\n        /* \"#utility.yul\":9298:9304   */\n      0x00\n        /* \"#utility.yul\":9347:9349   */\n      0x20\n        /* \"#utility.yul\":9335:9344   */\n      dup3\n        /* \"#utility.yul\":9326:9333   */\n      dup5\n        /* \"#utility.yul\":9322:9345   */\n      sub\n        /* \"#utility.yul\":9318:9350   */\n      slt\n        /* \"#utility.yul\":9315:9434   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":9353:9432   */\n      tag_612\n      tag_427\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":9315:9434   */\n    tag_611:\n        /* \"#utility.yul\":9473:9474   */\n      0x00\n        /* \"#utility.yul\":9498:9572   */\n      tag_613\n        /* \"#utility.yul\":9564:9571   */\n      dup5\n        /* \"#utility.yul\":9555:9561   */\n      dup3\n        /* \"#utility.yul\":9544:9553   */\n      dup6\n        /* \"#utility.yul\":9540:9562   */\n      add\n        /* \"#utility.yul\":9498:9572   */\n      tag_460\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":9488:9572   */\n      swap2\n      pop\n        /* \"#utility.yul\":9444:9582   */\n      pop\n        /* \"#utility.yul\":9218:9589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9595:10069   */\n    tag_76:\n        /* \"#utility.yul\":9663:9669   */\n      0x00\n        /* \"#utility.yul\":9671:9677   */\n      dup1\n        /* \"#utility.yul\":9720:9722   */\n      0x40\n        /* \"#utility.yul\":9708:9717   */\n      dup4\n        /* \"#utility.yul\":9699:9706   */\n      dup6\n        /* \"#utility.yul\":9695:9718   */\n      sub\n        /* \"#utility.yul\":9691:9723   */\n      slt\n        /* \"#utility.yul\":9688:9807   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":9726:9805   */\n      tag_616\n      tag_427\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":9688:9807   */\n    tag_615:\n        /* \"#utility.yul\":9846:9847   */\n      0x00\n        /* \"#utility.yul\":9871:9924   */\n      tag_617\n        /* \"#utility.yul\":9916:9923   */\n      dup6\n        /* \"#utility.yul\":9907:9913   */\n      dup3\n        /* \"#utility.yul\":9896:9905   */\n      dup7\n        /* \"#utility.yul\":9892:9914   */\n      add\n        /* \"#utility.yul\":9871:9924   */\n      tag_430\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":9861:9924   */\n      swap3\n      pop\n        /* \"#utility.yul\":9817:9934   */\n      pop\n        /* \"#utility.yul\":9973:9975   */\n      0x20\n        /* \"#utility.yul\":9999:10052   */\n      tag_618\n        /* \"#utility.yul\":10044:10051   */\n      dup6\n        /* \"#utility.yul\":10035:10041   */\n      dup3\n        /* \"#utility.yul\":10024:10033   */\n      dup7\n        /* \"#utility.yul\":10020:10042   */\n      add\n        /* \"#utility.yul\":9999:10052   */\n      tag_430\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":9989:10052   */\n      swap2\n      pop\n        /* \"#utility.yul\":9944:10062   */\n      pop\n        /* \"#utility.yul\":9595:10069   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10075:10688   */\n    tag_94:\n        /* \"#utility.yul\":10149:10155   */\n      0x00\n        /* \"#utility.yul\":10157:10163   */\n      dup1\n        /* \"#utility.yul\":10165:10171   */\n      0x00\n        /* \"#utility.yul\":10214:10216   */\n      0x60\n        /* \"#utility.yul\":10202:10211   */\n      dup5\n        /* \"#utility.yul\":10193:10200   */\n      dup7\n        /* \"#utility.yul\":10189:10212   */\n      sub\n        /* \"#utility.yul\":10185:10217   */\n      slt\n        /* \"#utility.yul\":10182:10301   */\n      iszero\n      tag_620\n      jumpi\n        /* \"#utility.yul\":10220:10299   */\n      tag_621\n      tag_427\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":10182:10301   */\n    tag_620:\n        /* \"#utility.yul\":10340:10341   */\n      0x00\n        /* \"#utility.yul\":10365:10418   */\n      tag_622\n        /* \"#utility.yul\":10410:10417   */\n      dup7\n        /* \"#utility.yul\":10401:10407   */\n      dup3\n        /* \"#utility.yul\":10390:10399   */\n      dup8\n        /* \"#utility.yul\":10386:10408   */\n      add\n        /* \"#utility.yul\":10365:10418   */\n      tag_430\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":10355:10418   */\n      swap4\n      pop\n        /* \"#utility.yul\":10311:10428   */\n      pop\n        /* \"#utility.yul\":10467:10469   */\n      0x20\n        /* \"#utility.yul\":10493:10546   */\n      tag_623\n        /* \"#utility.yul\":10538:10545   */\n      dup7\n        /* \"#utility.yul\":10529:10535   */\n      dup3\n        /* \"#utility.yul\":10518:10527   */\n      dup8\n        /* \"#utility.yul\":10514:10536   */\n      add\n        /* \"#utility.yul\":10493:10546   */\n      tag_430\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":10483:10546   */\n      swap3\n      pop\n        /* \"#utility.yul\":10438:10556   */\n      pop\n        /* \"#utility.yul\":10595:10597   */\n      0x40\n        /* \"#utility.yul\":10621:10671   */\n      tag_624\n        /* \"#utility.yul\":10663:10670   */\n      dup7\n        /* \"#utility.yul\":10654:10660   */\n      dup3\n        /* \"#utility.yul\":10643:10652   */\n      dup8\n        /* \"#utility.yul\":10639:10661   */\n      add\n        /* \"#utility.yul\":10621:10671   */\n      tag_457\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":10611:10671   */\n      swap2\n      pop\n        /* \"#utility.yul\":10566:10681   */\n      pop\n        /* \"#utility.yul\":10075:10688   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10694:10841   */\n    tag_461:\n        /* \"#utility.yul\":10765:10774   */\n      0x00\n        /* \"#utility.yul\":10798:10835   */\n      tag_626\n        /* \"#utility.yul\":10829:10834   */\n      dup3\n        /* \"#utility.yul\":10798:10835   */\n      tag_449\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":10785:10835   */\n      swap1\n      pop\n        /* \"#utility.yul\":10694:10841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10847:11020   */\n    tag_462:\n        /* \"#utility.yul\":10955:11013   */\n      tag_628\n        /* \"#utility.yul\":11007:11012   */\n      dup2\n        /* \"#utility.yul\":10955:11013   */\n      tag_461\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":10950:10953   */\n      dup3\n        /* \"#utility.yul\":10943:11014   */\n      mstore\n        /* \"#utility.yul\":10847:11020   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11026:11290   */\n    tag_101:\n        /* \"#utility.yul\":11140:11144   */\n      0x00\n        /* \"#utility.yul\":11178:11180   */\n      0x20\n        /* \"#utility.yul\":11167:11176   */\n      dup3\n        /* \"#utility.yul\":11163:11181   */\n      add\n        /* \"#utility.yul\":11155:11181   */\n      swap1\n      pop\n        /* \"#utility.yul\":11191:11283   */\n      tag_630\n        /* \"#utility.yul\":11280:11281   */\n      0x00\n        /* \"#utility.yul\":11269:11278   */\n      dup4\n        /* \"#utility.yul\":11265:11282   */\n      add\n        /* \"#utility.yul\":11256:11262   */\n      dup5\n        /* \"#utility.yul\":11191:11283   */\n      tag_462\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":11026:11290   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11296:11414   */\n    tag_463:\n        /* \"#utility.yul\":11383:11407   */\n      tag_632\n        /* \"#utility.yul\":11401:11406   */\n      dup2\n        /* \"#utility.yul\":11383:11407   */\n      tag_432\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":11378:11381   */\n      dup3\n        /* \"#utility.yul\":11371:11408   */\n      mstore\n        /* \"#utility.yul\":11296:11414   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11420:11642   */\n    tag_108:\n        /* \"#utility.yul\":11513:11517   */\n      0x00\n        /* \"#utility.yul\":11551:11553   */\n      0x20\n        /* \"#utility.yul\":11540:11549   */\n      dup3\n        /* \"#utility.yul\":11536:11554   */\n      add\n        /* \"#utility.yul\":11528:11554   */\n      swap1\n      pop\n        /* \"#utility.yul\":11564:11635   */\n      tag_634\n        /* \"#utility.yul\":11632:11633   */\n      0x00\n        /* \"#utility.yul\":11621:11630   */\n      dup4\n        /* \"#utility.yul\":11617:11634   */\n      add\n        /* \"#utility.yul\":11608:11614   */\n      dup5\n        /* \"#utility.yul\":11564:11635   */\n      tag_463\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":11420:11642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11648:11980   */\n    tag_117:\n        /* \"#utility.yul\":11769:11773   */\n      0x00\n        /* \"#utility.yul\":11807:11809   */\n      0x40\n        /* \"#utility.yul\":11796:11805   */\n      dup3\n        /* \"#utility.yul\":11792:11810   */\n      add\n        /* \"#utility.yul\":11784:11810   */\n      swap1\n      pop\n        /* \"#utility.yul\":11820:11891   */\n      tag_636\n        /* \"#utility.yul\":11888:11889   */\n      0x00\n        /* \"#utility.yul\":11877:11886   */\n      dup4\n        /* \"#utility.yul\":11873:11890   */\n      add\n        /* \"#utility.yul\":11864:11870   */\n      dup6\n        /* \"#utility.yul\":11820:11891   */\n      tag_425\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":11901:11973   */\n      tag_637\n        /* \"#utility.yul\":11969:11971   */\n      0x20\n        /* \"#utility.yul\":11958:11967   */\n      dup4\n        /* \"#utility.yul\":11954:11972   */\n      add\n        /* \"#utility.yul\":11945:11951   */\n      dup5\n        /* \"#utility.yul\":11901:11973   */\n      tag_425\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":11648:11980   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11986:12126   */\n    tag_464:\n        /* \"#utility.yul\":12050:12059   */\n      0x00\n        /* \"#utility.yul\":12083:12120   */\n      tag_639\n        /* \"#utility.yul\":12114:12119   */\n      dup3\n        /* \"#utility.yul\":12083:12120   */\n      tag_449\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":12070:12120   */\n      swap1\n      pop\n        /* \"#utility.yul\":11986:12126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12132:12291   */\n    tag_465:\n        /* \"#utility.yul\":12233:12284   */\n      tag_641\n        /* \"#utility.yul\":12278:12283   */\n      dup2\n        /* \"#utility.yul\":12233:12284   */\n      tag_464\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":12228:12231   */\n      dup3\n        /* \"#utility.yul\":12221:12285   */\n      mstore\n        /* \"#utility.yul\":12132:12291   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12297:12547   */\n    tag_121:\n        /* \"#utility.yul\":12404:12408   */\n      0x00\n        /* \"#utility.yul\":12442:12444   */\n      0x20\n        /* \"#utility.yul\":12431:12440   */\n      dup3\n        /* \"#utility.yul\":12427:12445   */\n      add\n        /* \"#utility.yul\":12419:12445   */\n      swap1\n      pop\n        /* \"#utility.yul\":12455:12540   */\n      tag_643\n        /* \"#utility.yul\":12537:12538   */\n      0x00\n        /* \"#utility.yul\":12526:12535   */\n      dup4\n        /* \"#utility.yul\":12522:12539   */\n      add\n        /* \"#utility.yul\":12513:12519   */\n      dup5\n        /* \"#utility.yul\":12455:12540   */\n      tag_465\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":12297:12547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12553:12882   */\n    tag_124:\n        /* \"#utility.yul\":12612:12618   */\n      0x00\n        /* \"#utility.yul\":12661:12663   */\n      0x20\n        /* \"#utility.yul\":12649:12658   */\n      dup3\n        /* \"#utility.yul\":12640:12647   */\n      dup5\n        /* \"#utility.yul\":12636:12659   */\n      sub\n        /* \"#utility.yul\":12632:12664   */\n      slt\n        /* \"#utility.yul\":12629:12748   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":12667:12746   */\n      tag_646\n      tag_427\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":12629:12748   */\n    tag_645:\n        /* \"#utility.yul\":12787:12788   */\n      0x00\n        /* \"#utility.yul\":12812:12865   */\n      tag_647\n        /* \"#utility.yul\":12857:12864   */\n      dup5\n        /* \"#utility.yul\":12848:12854   */\n      dup3\n        /* \"#utility.yul\":12837:12846   */\n      dup6\n        /* \"#utility.yul\":12833:12855   */\n      add\n        /* \"#utility.yul\":12812:12865   */\n      tag_434\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":12802:12865   */\n      swap2\n      pop\n        /* \"#utility.yul\":12758:12875   */\n      pop\n        /* \"#utility.yul\":12553:12882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12888:13002   */\n    tag_466:\n        /* \"#utility.yul\":12955:12961   */\n      0x00\n        /* \"#utility.yul\":12989:12994   */\n      dup2\n        /* \"#utility.yul\":12983:12995   */\n      mload\n        /* \"#utility.yul\":12973:12995   */\n      swap1\n      pop\n        /* \"#utility.yul\":12888:13002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13008:13192   */\n    tag_467:\n        /* \"#utility.yul\":13107:13118   */\n      0x00\n        /* \"#utility.yul\":13141:13147   */\n      dup3\n        /* \"#utility.yul\":13136:13139   */\n      dup3\n        /* \"#utility.yul\":13129:13148   */\n      mstore\n        /* \"#utility.yul\":13181:13185   */\n      0x20\n        /* \"#utility.yul\":13176:13179   */\n      dup3\n        /* \"#utility.yul\":13172:13186   */\n      add\n        /* \"#utility.yul\":13157:13186   */\n      swap1\n      pop\n        /* \"#utility.yul\":13008:13192   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13198:13330   */\n    tag_468:\n        /* \"#utility.yul\":13265:13269   */\n      0x00\n        /* \"#utility.yul\":13288:13291   */\n      dup2\n        /* \"#utility.yul\":13280:13291   */\n      swap1\n      pop\n        /* \"#utility.yul\":13318:13322   */\n      0x20\n        /* \"#utility.yul\":13313:13316   */\n      dup3\n        /* \"#utility.yul\":13309:13323   */\n      add\n        /* \"#utility.yul\":13301:13323   */\n      swap1\n      pop\n        /* \"#utility.yul\":13198:13330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13336:13444   */\n    tag_469:\n        /* \"#utility.yul\":13413:13437   */\n      tag_652\n        /* \"#utility.yul\":13431:13436   */\n      dup2\n        /* \"#utility.yul\":13413:13437   */\n      tag_424\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":13408:13411   */\n      dup3\n        /* \"#utility.yul\":13401:13438   */\n      mstore\n        /* \"#utility.yul\":13336:13444   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13450:13629   */\n    tag_470:\n        /* \"#utility.yul\":13519:13529   */\n      0x00\n        /* \"#utility.yul\":13540:13586   */\n      tag_654\n        /* \"#utility.yul\":13582:13585   */\n      dup4\n        /* \"#utility.yul\":13574:13580   */\n      dup4\n        /* \"#utility.yul\":13540:13586   */\n      tag_469\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":13618:13622   */\n      0x20\n        /* \"#utility.yul\":13613:13616   */\n      dup4\n        /* \"#utility.yul\":13609:13623   */\n      add\n        /* \"#utility.yul\":13595:13623   */\n      swap1\n      pop\n        /* \"#utility.yul\":13450:13629   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13635:13748   */\n    tag_471:\n        /* \"#utility.yul\":13705:13709   */\n      0x00\n        /* \"#utility.yul\":13737:13741   */\n      0x20\n        /* \"#utility.yul\":13732:13735   */\n      dup3\n        /* \"#utility.yul\":13728:13742   */\n      add\n        /* \"#utility.yul\":13720:13742   */\n      swap1\n      pop\n        /* \"#utility.yul\":13635:13748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13784:14516   */\n    tag_472:\n        /* \"#utility.yul\":13903:13906   */\n      0x00\n        /* \"#utility.yul\":13932:13986   */\n      tag_657\n        /* \"#utility.yul\":13980:13985   */\n      dup3\n        /* \"#utility.yul\":13932:13986   */\n      tag_466\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":14002:14088   */\n      tag_658\n        /* \"#utility.yul\":14081:14087   */\n      dup2\n        /* \"#utility.yul\":14076:14079   */\n      dup6\n        /* \"#utility.yul\":14002:14088   */\n      tag_467\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":13995:14088   */\n      swap4\n      pop\n        /* \"#utility.yul\":14112:14168   */\n      tag_659\n        /* \"#utility.yul\":14162:14167   */\n      dup4\n        /* \"#utility.yul\":14112:14168   */\n      tag_468\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":14191:14198   */\n      dup1\n        /* \"#utility.yul\":14222:14223   */\n      0x00\n        /* \"#utility.yul\":14207:14491   */\n    tag_660:\n        /* \"#utility.yul\":14232:14238   */\n      dup4\n        /* \"#utility.yul\":14229:14230   */\n      dup2\n        /* \"#utility.yul\":14226:14239   */\n      lt\n        /* \"#utility.yul\":14207:14491   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":14308:14314   */\n      dup2\n        /* \"#utility.yul\":14302:14315   */\n      mload\n        /* \"#utility.yul\":14335:14398   */\n      tag_663\n        /* \"#utility.yul\":14394:14397   */\n      dup9\n        /* \"#utility.yul\":14379:14392   */\n      dup3\n        /* \"#utility.yul\":14335:14398   */\n      tag_470\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":14328:14398   */\n      swap8\n      pop\n        /* \"#utility.yul\":14421:14481   */\n      tag_664\n        /* \"#utility.yul\":14474:14480   */\n      dup4\n        /* \"#utility.yul\":14421:14481   */\n      tag_471\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":14411:14481   */\n      swap3\n      pop\n        /* \"#utility.yul\":14267:14491   */\n      pop\n        /* \"#utility.yul\":14254:14255   */\n      0x01\n        /* \"#utility.yul\":14251:14252   */\n      dup2\n        /* \"#utility.yul\":14247:14256   */\n      add\n        /* \"#utility.yul\":14242:14256   */\n      swap1\n      pop\n        /* \"#utility.yul\":14207:14491   */\n      jump(tag_660)\n    tag_662:\n        /* \"#utility.yul\":14211:14225   */\n      pop\n        /* \"#utility.yul\":14507:14510   */\n      dup6\n        /* \"#utility.yul\":14500:14510   */\n      swap4\n      pop\n        /* \"#utility.yul\":13908:14516   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13784:14516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14522:14895   */\n    tag_133:\n        /* \"#utility.yul\":14665:14669   */\n      0x00\n        /* \"#utility.yul\":14703:14705   */\n      0x20\n        /* \"#utility.yul\":14692:14701   */\n      dup3\n        /* \"#utility.yul\":14688:14706   */\n      add\n        /* \"#utility.yul\":14680:14706   */\n      swap1\n      pop\n        /* \"#utility.yul\":14752:14761   */\n      dup2\n        /* \"#utility.yul\":14746:14750   */\n      dup2\n        /* \"#utility.yul\":14742:14762   */\n      sub\n        /* \"#utility.yul\":14738:14739   */\n      0x00\n        /* \"#utility.yul\":14727:14736   */\n      dup4\n        /* \"#utility.yul\":14723:14740   */\n      add\n        /* \"#utility.yul\":14716:14763   */\n      mstore\n        /* \"#utility.yul\":14780:14888   */\n      tag_666\n        /* \"#utility.yul\":14883:14887   */\n      dup2\n        /* \"#utility.yul\":14874:14880   */\n      dup5\n        /* \"#utility.yul\":14780:14888   */\n      tag_472\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":14772:14888   */\n      swap1\n      pop\n        /* \"#utility.yul\":14522:14895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14901:15050   */\n    tag_473:\n        /* \"#utility.yul\":14974:14983   */\n      0x00\n        /* \"#utility.yul\":15007:15044   */\n      tag_668\n        /* \"#utility.yul\":15038:15043   */\n      dup3\n        /* \"#utility.yul\":15007:15044   */\n      tag_449\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":14994:15044   */\n      swap1\n      pop\n        /* \"#utility.yul\":14901:15050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15056:15233   */\n    tag_474:\n        /* \"#utility.yul\":15166:15226   */\n      tag_670\n        /* \"#utility.yul\":15220:15225   */\n      dup2\n        /* \"#utility.yul\":15166:15226   */\n      tag_473\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":15161:15164   */\n      dup3\n        /* \"#utility.yul\":15154:15227   */\n      mstore\n        /* \"#utility.yul\":15056:15233   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15239:15507   */\n    tag_140:\n        /* \"#utility.yul\":15355:15359   */\n      0x00\n        /* \"#utility.yul\":15393:15395   */\n      0x20\n        /* \"#utility.yul\":15382:15391   */\n      dup3\n        /* \"#utility.yul\":15378:15396   */\n      add\n        /* \"#utility.yul\":15370:15396   */\n      swap1\n      pop\n        /* \"#utility.yul\":15406:15500   */\n      tag_672\n        /* \"#utility.yul\":15497:15498   */\n      0x00\n        /* \"#utility.yul\":15486:15495   */\n      dup4\n        /* \"#utility.yul\":15482:15499   */\n      add\n        /* \"#utility.yul\":15473:15479   */\n      dup5\n        /* \"#utility.yul\":15406:15500   */\n      tag_474\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":15239:15507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15513:15693   */\n    tag_151:\n        /* \"#utility.yul\":15561:15638   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15558:15559   */\n      0x00\n        /* \"#utility.yul\":15551:15639   */\n      mstore\n        /* \"#utility.yul\":15658:15662   */\n      0x32\n        /* \"#utility.yul\":15655:15656   */\n      0x04\n        /* \"#utility.yul\":15648:15663   */\n      mstore\n        /* \"#utility.yul\":15682:15686   */\n      0x24\n        /* \"#utility.yul\":15679:15680   */\n      0x00\n        /* \"#utility.yul\":15672:15687   */\n      revert\n        /* \"#utility.yul\":15699:15868   */\n    tag_475:\n        /* \"#utility.yul\":15783:15794   */\n      0x00\n        /* \"#utility.yul\":15817:15823   */\n      dup3\n        /* \"#utility.yul\":15812:15815   */\n      dup3\n        /* \"#utility.yul\":15805:15824   */\n      mstore\n        /* \"#utility.yul\":15857:15861   */\n      0x20\n        /* \"#utility.yul\":15852:15855   */\n      dup3\n        /* \"#utility.yul\":15848:15862   */\n      add\n        /* \"#utility.yul\":15833:15862   */\n      swap1\n      pop\n        /* \"#utility.yul\":15699:15868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15874:16038   */\n    tag_476:\n        /* \"#utility.yul\":16014:16030   */\n      0x416d6f756e74206973207a65726f000000000000000000000000000000000000\n        /* \"#utility.yul\":16010:16011   */\n      0x00\n        /* \"#utility.yul\":16002:16008   */\n      dup3\n        /* \"#utility.yul\":15998:16012   */\n      add\n        /* \"#utility.yul\":15991:16031   */\n      mstore\n        /* \"#utility.yul\":15874:16038   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16044:16410   */\n    tag_477:\n        /* \"#utility.yul\":16186:16189   */\n      0x00\n        /* \"#utility.yul\":16207:16274   */\n      tag_677\n        /* \"#utility.yul\":16271:16273   */\n      0x0e\n        /* \"#utility.yul\":16266:16269   */\n      dup4\n        /* \"#utility.yul\":16207:16274   */\n      tag_475\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":16200:16274   */\n      swap2\n      pop\n        /* \"#utility.yul\":16283:16376   */\n      tag_678\n        /* \"#utility.yul\":16372:16375   */\n      dup3\n        /* \"#utility.yul\":16283:16376   */\n      tag_476\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":16401:16403   */\n      0x20\n        /* \"#utility.yul\":16396:16399   */\n      dup3\n        /* \"#utility.yul\":16392:16404   */\n      add\n        /* \"#utility.yul\":16385:16404   */\n      swap1\n      pop\n        /* \"#utility.yul\":16044:16410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16416:16835   */\n    tag_162:\n        /* \"#utility.yul\":16582:16586   */\n      0x00\n        /* \"#utility.yul\":16620:16622   */\n      0x20\n        /* \"#utility.yul\":16609:16618   */\n      dup3\n        /* \"#utility.yul\":16605:16623   */\n      add\n        /* \"#utility.yul\":16597:16623   */\n      swap1\n      pop\n        /* \"#utility.yul\":16669:16678   */\n      dup2\n        /* \"#utility.yul\":16663:16667   */\n      dup2\n        /* \"#utility.yul\":16659:16679   */\n      sub\n        /* \"#utility.yul\":16655:16656   */\n      0x00\n        /* \"#utility.yul\":16644:16653   */\n      dup4\n        /* \"#utility.yul\":16640:16657   */\n      add\n        /* \"#utility.yul\":16633:16680   */\n      mstore\n        /* \"#utility.yul\":16697:16828   */\n      tag_680\n        /* \"#utility.yul\":16823:16827   */\n      dup2\n        /* \"#utility.yul\":16697:16828   */\n      tag_477\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":16689:16828   */\n      swap1\n      pop\n        /* \"#utility.yul\":16416:16835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16841:17173   */\n    tag_164:\n        /* \"#utility.yul\":16962:16966   */\n      0x00\n        /* \"#utility.yul\":17000:17002   */\n      0x40\n        /* \"#utility.yul\":16989:16998   */\n      dup3\n        /* \"#utility.yul\":16985:17003   */\n      add\n        /* \"#utility.yul\":16977:17003   */\n      swap1\n      pop\n        /* \"#utility.yul\":17013:17084   */\n      tag_682\n        /* \"#utility.yul\":17081:17082   */\n      0x00\n        /* \"#utility.yul\":17070:17079   */\n      dup4\n        /* \"#utility.yul\":17066:17083   */\n      add\n        /* \"#utility.yul\":17057:17063   */\n      dup6\n        /* \"#utility.yul\":17013:17084   */\n      tag_463\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":17094:17166   */\n      tag_683\n        /* \"#utility.yul\":17162:17164   */\n      0x20\n        /* \"#utility.yul\":17151:17160   */\n      dup4\n        /* \"#utility.yul\":17147:17165   */\n      add\n        /* \"#utility.yul\":17138:17144   */\n      dup5\n        /* \"#utility.yul\":17094:17166   */\n      tag_425\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":16841:17173   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17179:17316   */\n    tag_478:\n        /* \"#utility.yul\":17233:17238   */\n      0x00\n        /* \"#utility.yul\":17264:17270   */\n      dup2\n        /* \"#utility.yul\":17258:17271   */\n      mload\n        /* \"#utility.yul\":17249:17271   */\n      swap1\n      pop\n        /* \"#utility.yul\":17280:17310   */\n      tag_685\n        /* \"#utility.yul\":17304:17309   */\n      dup2\n        /* \"#utility.yul\":17280:17310   */\n      tag_456\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":17179:17316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17322:17667   */\n    tag_168:\n        /* \"#utility.yul\":17389:17395   */\n      0x00\n        /* \"#utility.yul\":17438:17440   */\n      0x20\n        /* \"#utility.yul\":17426:17435   */\n      dup3\n        /* \"#utility.yul\":17417:17424   */\n      dup5\n        /* \"#utility.yul\":17413:17436   */\n      sub\n        /* \"#utility.yul\":17409:17441   */\n      slt\n        /* \"#utility.yul\":17406:17525   */\n      iszero\n      tag_687\n      jumpi\n        /* \"#utility.yul\":17444:17523   */\n      tag_688\n      tag_427\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":17406:17525   */\n    tag_687:\n        /* \"#utility.yul\":17564:17565   */\n      0x00\n        /* \"#utility.yul\":17589:17650   */\n      tag_689\n        /* \"#utility.yul\":17642:17649   */\n      dup5\n        /* \"#utility.yul\":17633:17639   */\n      dup3\n        /* \"#utility.yul\":17622:17631   */\n      dup6\n        /* \"#utility.yul\":17618:17640   */\n      add\n        /* \"#utility.yul\":17589:17650   */\n      tag_478\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":17579:17650   */\n      swap2\n      pop\n        /* \"#utility.yul\":17535:17660   */\n      pop\n        /* \"#utility.yul\":17322:17667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17673:18005   */\n    tag_170:\n        /* \"#utility.yul\":17794:17798   */\n      0x00\n        /* \"#utility.yul\":17832:17834   */\n      0x40\n        /* \"#utility.yul\":17821:17830   */\n      dup3\n        /* \"#utility.yul\":17817:17835   */\n      add\n        /* \"#utility.yul\":17809:17835   */\n      swap1\n      pop\n        /* \"#utility.yul\":17845:17916   */\n      tag_691\n        /* \"#utility.yul\":17913:17914   */\n      0x00\n        /* \"#utility.yul\":17902:17911   */\n      dup4\n        /* \"#utility.yul\":17898:17915   */\n      add\n        /* \"#utility.yul\":17889:17895   */\n      dup6\n        /* \"#utility.yul\":17845:17916   */\n      tag_425\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":17926:17998   */\n      tag_692\n        /* \"#utility.yul\":17994:17996   */\n      0x20\n        /* \"#utility.yul\":17983:17992   */\n      dup4\n        /* \"#utility.yul\":17979:17997   */\n      add\n        /* \"#utility.yul\":17970:17976   */\n      dup5\n        /* \"#utility.yul\":17926:17998   */\n      tag_463\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":17673:18005   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18011:18193   */\n    tag_479:\n        /* \"#utility.yul\":18151:18185   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":18147:18148   */\n      0x00\n        /* \"#utility.yul\":18139:18145   */\n      dup3\n        /* \"#utility.yul\":18135:18149   */\n      add\n        /* \"#utility.yul\":18128:18186   */\n      mstore\n        /* \"#utility.yul\":18011:18193   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18199:18565   */\n    tag_480:\n        /* \"#utility.yul\":18341:18344   */\n      0x00\n        /* \"#utility.yul\":18362:18429   */\n      tag_695\n        /* \"#utility.yul\":18426:18428   */\n      0x20\n        /* \"#utility.yul\":18421:18424   */\n      dup4\n        /* \"#utility.yul\":18362:18429   */\n      tag_475\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":18355:18429   */\n      swap2\n      pop\n        /* \"#utility.yul\":18438:18531   */\n      tag_696\n        /* \"#utility.yul\":18527:18530   */\n      dup3\n        /* \"#utility.yul\":18438:18531   */\n      tag_479\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":18556:18558   */\n      0x20\n        /* \"#utility.yul\":18551:18554   */\n      dup3\n        /* \"#utility.yul\":18547:18559   */\n      add\n        /* \"#utility.yul\":18540:18559   */\n      swap1\n      pop\n        /* \"#utility.yul\":18199:18565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18571:18990   */\n    tag_186:\n        /* \"#utility.yul\":18737:18741   */\n      0x00\n        /* \"#utility.yul\":18775:18777   */\n      0x20\n        /* \"#utility.yul\":18764:18773   */\n      dup3\n        /* \"#utility.yul\":18760:18778   */\n      add\n        /* \"#utility.yul\":18752:18778   */\n      swap1\n      pop\n        /* \"#utility.yul\":18824:18833   */\n      dup2\n        /* \"#utility.yul\":18818:18822   */\n      dup2\n        /* \"#utility.yul\":18814:18834   */\n      sub\n        /* \"#utility.yul\":18810:18811   */\n      0x00\n        /* \"#utility.yul\":18799:18808   */\n      dup4\n        /* \"#utility.yul\":18795:18812   */\n      add\n        /* \"#utility.yul\":18788:18835   */\n      mstore\n        /* \"#utility.yul\":18852:18983   */\n      tag_698\n        /* \"#utility.yul\":18978:18982   */\n      dup2\n        /* \"#utility.yul\":18852:18983   */\n      tag_480\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":18844:18983   */\n      swap1\n      pop\n        /* \"#utility.yul\":18571:18990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18996:19139   */\n    tag_481:\n        /* \"#utility.yul\":19053:19058   */\n      0x00\n        /* \"#utility.yul\":19084:19090   */\n      dup2\n        /* \"#utility.yul\":19078:19091   */\n      mload\n        /* \"#utility.yul\":19069:19091   */\n      swap1\n      pop\n        /* \"#utility.yul\":19100:19133   */\n      tag_700\n        /* \"#utility.yul\":19127:19132   */\n      dup2\n        /* \"#utility.yul\":19100:19133   */\n      tag_429\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":18996:19139   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19145:19496   */\n    tag_203:\n        /* \"#utility.yul\":19215:19221   */\n      0x00\n        /* \"#utility.yul\":19264:19266   */\n      0x20\n        /* \"#utility.yul\":19252:19261   */\n      dup3\n        /* \"#utility.yul\":19243:19250   */\n      dup5\n        /* \"#utility.yul\":19239:19262   */\n      sub\n        /* \"#utility.yul\":19235:19267   */\n      slt\n        /* \"#utility.yul\":19232:19351   */\n      iszero\n      tag_702\n      jumpi\n        /* \"#utility.yul\":19270:19349   */\n      tag_703\n      tag_427\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":19232:19351   */\n    tag_702:\n        /* \"#utility.yul\":19390:19391   */\n      0x00\n        /* \"#utility.yul\":19415:19479   */\n      tag_704\n        /* \"#utility.yul\":19471:19478   */\n      dup5\n        /* \"#utility.yul\":19462:19468   */\n      dup3\n        /* \"#utility.yul\":19451:19460   */\n      dup6\n        /* \"#utility.yul\":19447:19469   */\n      add\n        /* \"#utility.yul\":19415:19479   */\n      tag_481\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":19405:19479   */\n      swap2\n      pop\n        /* \"#utility.yul\":19361:19489   */\n      pop\n        /* \"#utility.yul\":19145:19496   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19502:19682   */\n    tag_482:\n        /* \"#utility.yul\":19550:19627   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19547:19548   */\n      0x00\n        /* \"#utility.yul\":19540:19628   */\n      mstore\n        /* \"#utility.yul\":19647:19651   */\n      0x11\n        /* \"#utility.yul\":19644:19645   */\n      0x04\n        /* \"#utility.yul\":19637:19652   */\n      mstore\n        /* \"#utility.yul\":19671:19675   */\n      0x24\n        /* \"#utility.yul\":19668:19669   */\n      0x00\n        /* \"#utility.yul\":19661:19676   */\n      revert\n        /* \"#utility.yul\":19688:19921   */\n    tag_245:\n        /* \"#utility.yul\":19727:19730   */\n      0x00\n        /* \"#utility.yul\":19750:19774   */\n      tag_707\n        /* \"#utility.yul\":19768:19773   */\n      dup3\n        /* \"#utility.yul\":19750:19774   */\n      tag_424\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":19741:19774   */\n      swap2\n      pop\n        /* \"#utility.yul\":19796:19862   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19789:19794   */\n      dup3\n        /* \"#utility.yul\":19786:19863   */\n      sub\n        /* \"#utility.yul\":19783:19886   */\n      tag_708\n      jumpi\n        /* \"#utility.yul\":19866:19884   */\n      tag_709\n      tag_482\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":19783:19886   */\n    tag_708:\n        /* \"#utility.yul\":19913:19914   */\n      0x01\n        /* \"#utility.yul\":19906:19911   */\n      dup3\n        /* \"#utility.yul\":19902:19915   */\n      add\n        /* \"#utility.yul\":19895:19915   */\n      swap1\n      pop\n        /* \"#utility.yul\":19688:19921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19927:20106   */\n    tag_483:\n        /* \"#utility.yul\":20067:20098   */\n      0x596f7520617265206e6f74204f776e6572206f6620746f6b656e206964000000\n        /* \"#utility.yul\":20063:20064   */\n      0x00\n        /* \"#utility.yul\":20055:20061   */\n      dup3\n        /* \"#utility.yul\":20051:20065   */\n      add\n        /* \"#utility.yul\":20044:20099   */\n      mstore\n        /* \"#utility.yul\":19927:20106   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20112:20478   */\n    tag_484:\n        /* \"#utility.yul\":20254:20257   */\n      0x00\n        /* \"#utility.yul\":20275:20342   */\n      tag_712\n        /* \"#utility.yul\":20339:20341   */\n      0x1d\n        /* \"#utility.yul\":20334:20337   */\n      dup4\n        /* \"#utility.yul\":20275:20342   */\n      tag_475\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":20268:20342   */\n      swap2\n      pop\n        /* \"#utility.yul\":20351:20444   */\n      tag_713\n        /* \"#utility.yul\":20440:20443   */\n      dup3\n        /* \"#utility.yul\":20351:20444   */\n      tag_483\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":20469:20471   */\n      0x20\n        /* \"#utility.yul\":20464:20467   */\n      dup3\n        /* \"#utility.yul\":20460:20472   */\n      add\n        /* \"#utility.yul\":20453:20472   */\n      swap1\n      pop\n        /* \"#utility.yul\":20112:20478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20484:20903   */\n    tag_248:\n        /* \"#utility.yul\":20650:20654   */\n      0x00\n        /* \"#utility.yul\":20688:20690   */\n      0x20\n        /* \"#utility.yul\":20677:20686   */\n      dup3\n        /* \"#utility.yul\":20673:20691   */\n      add\n        /* \"#utility.yul\":20665:20691   */\n      swap1\n      pop\n        /* \"#utility.yul\":20737:20746   */\n      dup2\n        /* \"#utility.yul\":20731:20735   */\n      dup2\n        /* \"#utility.yul\":20727:20747   */\n      sub\n        /* \"#utility.yul\":20723:20724   */\n      0x00\n        /* \"#utility.yul\":20712:20721   */\n      dup4\n        /* \"#utility.yul\":20708:20725   */\n      add\n        /* \"#utility.yul\":20701:20748   */\n      mstore\n        /* \"#utility.yul\":20765:20896   */\n      tag_715\n        /* \"#utility.yul\":20891:20895   */\n      dup2\n        /* \"#utility.yul\":20765:20896   */\n      tag_484\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":20757:20896   */\n      swap1\n      pop\n        /* \"#utility.yul\":20484:20903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20909:21077   */\n    tag_485:\n        /* \"#utility.yul\":21049:21069   */\n      0x77697468647261773a206e6f7420676f6f640000000000000000000000000000\n        /* \"#utility.yul\":21045:21046   */\n      0x00\n        /* \"#utility.yul\":21037:21043   */\n      dup3\n        /* \"#utility.yul\":21033:21047   */\n      add\n        /* \"#utility.yul\":21026:21070   */\n      mstore\n        /* \"#utility.yul\":20909:21077   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21083:21449   */\n    tag_486:\n        /* \"#utility.yul\":21225:21228   */\n      0x00\n        /* \"#utility.yul\":21246:21313   */\n      tag_718\n        /* \"#utility.yul\":21310:21312   */\n      0x12\n        /* \"#utility.yul\":21305:21308   */\n      dup4\n        /* \"#utility.yul\":21246:21313   */\n      tag_475\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":21239:21313   */\n      swap2\n      pop\n        /* \"#utility.yul\":21322:21415   */\n      tag_719\n        /* \"#utility.yul\":21411:21414   */\n      dup3\n        /* \"#utility.yul\":21322:21415   */\n      tag_485\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":21440:21442   */\n      0x20\n        /* \"#utility.yul\":21435:21438   */\n      dup3\n        /* \"#utility.yul\":21431:21443   */\n      add\n        /* \"#utility.yul\":21424:21443   */\n      swap1\n      pop\n        /* \"#utility.yul\":21083:21449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21455:21874   */\n    tag_251:\n        /* \"#utility.yul\":21621:21625   */\n      0x00\n        /* \"#utility.yul\":21659:21661   */\n      0x20\n        /* \"#utility.yul\":21648:21657   */\n      dup3\n        /* \"#utility.yul\":21644:21662   */\n      add\n        /* \"#utility.yul\":21636:21662   */\n      swap1\n      pop\n        /* \"#utility.yul\":21708:21717   */\n      dup2\n        /* \"#utility.yul\":21702:21706   */\n      dup2\n        /* \"#utility.yul\":21698:21718   */\n      sub\n        /* \"#utility.yul\":21694:21695   */\n      0x00\n        /* \"#utility.yul\":21683:21692   */\n      dup4\n        /* \"#utility.yul\":21679:21696   */\n      add\n        /* \"#utility.yul\":21672:21719   */\n      mstore\n        /* \"#utility.yul\":21736:21867   */\n      tag_721\n        /* \"#utility.yul\":21862:21866   */\n      dup2\n        /* \"#utility.yul\":21736:21867   */\n      tag_486\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":21728:21867   */\n      swap1\n      pop\n        /* \"#utility.yul\":21455:21874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21880:22322   */\n    tag_265:\n        /* \"#utility.yul\":22029:22033   */\n      0x00\n        /* \"#utility.yul\":22067:22069   */\n      0x60\n        /* \"#utility.yul\":22056:22065   */\n      dup3\n        /* \"#utility.yul\":22052:22070   */\n      add\n        /* \"#utility.yul\":22044:22070   */\n      swap1\n      pop\n        /* \"#utility.yul\":22080:22151   */\n      tag_723\n        /* \"#utility.yul\":22148:22149   */\n      0x00\n        /* \"#utility.yul\":22137:22146   */\n      dup4\n        /* \"#utility.yul\":22133:22150   */\n      add\n        /* \"#utility.yul\":22124:22130   */\n      dup7\n        /* \"#utility.yul\":22080:22151   */\n      tag_463\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":22161:22233   */\n      tag_724\n        /* \"#utility.yul\":22229:22231   */\n      0x20\n        /* \"#utility.yul\":22218:22227   */\n      dup4\n        /* \"#utility.yul\":22214:22232   */\n      add\n        /* \"#utility.yul\":22205:22211   */\n      dup6\n        /* \"#utility.yul\":22161:22233   */\n      tag_463\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":22243:22315   */\n      tag_725\n        /* \"#utility.yul\":22311:22313   */\n      0x40\n        /* \"#utility.yul\":22300:22309   */\n      dup4\n        /* \"#utility.yul\":22296:22314   */\n      add\n        /* \"#utility.yul\":22287:22293   */\n      dup5\n        /* \"#utility.yul\":22243:22315   */\n      tag_425\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":21880:22322   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22328:22553   */\n    tag_487:\n        /* \"#utility.yul\":22468:22502   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":22464:22465   */\n      0x00\n        /* \"#utility.yul\":22456:22462   */\n      dup3\n        /* \"#utility.yul\":22452:22466   */\n      add\n        /* \"#utility.yul\":22445:22503   */\n      mstore\n        /* \"#utility.yul\":22537:22545   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22532:22534   */\n      0x20\n        /* \"#utility.yul\":22524:22530   */\n      dup3\n        /* \"#utility.yul\":22520:22535   */\n      add\n        /* \"#utility.yul\":22513:22546   */\n      mstore\n        /* \"#utility.yul\":22328:22553   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22559:22925   */\n    tag_488:\n        /* \"#utility.yul\":22701:22704   */\n      0x00\n        /* \"#utility.yul\":22722:22789   */\n      tag_728\n        /* \"#utility.yul\":22786:22788   */\n      0x26\n        /* \"#utility.yul\":22781:22784   */\n      dup4\n        /* \"#utility.yul\":22722:22789   */\n      tag_475\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":22715:22789   */\n      swap2\n      pop\n        /* \"#utility.yul\":22798:22891   */\n      tag_729\n        /* \"#utility.yul\":22887:22890   */\n      dup3\n        /* \"#utility.yul\":22798:22891   */\n      tag_487\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":22916:22918   */\n      0x40\n        /* \"#utility.yul\":22911:22914   */\n      dup3\n        /* \"#utility.yul\":22907:22919   */\n      add\n        /* \"#utility.yul\":22900:22919   */\n      swap1\n      pop\n        /* \"#utility.yul\":22559:22925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22931:23350   */\n    tag_374:\n        /* \"#utility.yul\":23097:23101   */\n      0x00\n        /* \"#utility.yul\":23135:23137   */\n      0x20\n        /* \"#utility.yul\":23124:23133   */\n      dup3\n        /* \"#utility.yul\":23120:23138   */\n      add\n        /* \"#utility.yul\":23112:23138   */\n      swap1\n      pop\n        /* \"#utility.yul\":23184:23193   */\n      dup2\n        /* \"#utility.yul\":23178:23182   */\n      dup2\n        /* \"#utility.yul\":23174:23194   */\n      sub\n        /* \"#utility.yul\":23170:23171   */\n      0x00\n        /* \"#utility.yul\":23159:23168   */\n      dup4\n        /* \"#utility.yul\":23155:23172   */\n      add\n        /* \"#utility.yul\":23148:23195   */\n      mstore\n        /* \"#utility.yul\":23212:23343   */\n      tag_731\n        /* \"#utility.yul\":23338:23342   */\n      dup2\n        /* \"#utility.yul\":23212:23343   */\n      tag_488\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":23204:23343   */\n      swap1\n      pop\n        /* \"#utility.yul\":22931:23350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23356:23704   */\n    tag_379:\n        /* \"#utility.yul\":23396:23403   */\n      0x00\n        /* \"#utility.yul\":23419:23439   */\n      tag_733\n        /* \"#utility.yul\":23437:23438   */\n      dup3\n        /* \"#utility.yul\":23419:23439   */\n      tag_424\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":23414:23439   */\n      swap2\n      pop\n        /* \"#utility.yul\":23453:23473   */\n      tag_734\n        /* \"#utility.yul\":23471:23472   */\n      dup4\n        /* \"#utility.yul\":23453:23473   */\n      tag_424\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":23448:23473   */\n      swap3\n      pop\n        /* \"#utility.yul\":23641:23642   */\n      dup2\n        /* \"#utility.yul\":23573:23639   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23569:23643   */\n      div\n        /* \"#utility.yul\":23566:23567   */\n      dup4\n        /* \"#utility.yul\":23563:23644   */\n      gt\n        /* \"#utility.yul\":23558:23559   */\n      dup3\n        /* \"#utility.yul\":23551:23560   */\n      iszero\n        /* \"#utility.yul\":23544:23561   */\n      iszero\n        /* \"#utility.yul\":23540:23645   */\n      and\n        /* \"#utility.yul\":23537:23668   */\n      iszero\n      tag_735\n      jumpi\n        /* \"#utility.yul\":23648:23666   */\n      tag_736\n      tag_482\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":23537:23668   */\n    tag_735:\n        /* \"#utility.yul\":23696:23697   */\n      dup3\n        /* \"#utility.yul\":23693:23694   */\n      dup3\n        /* \"#utility.yul\":23689:23698   */\n      mul\n        /* \"#utility.yul\":23678:23698   */\n      swap1\n      pop\n        /* \"#utility.yul\":23356:23704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23710:23890   */\n    tag_489:\n        /* \"#utility.yul\":23758:23835   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23755:23756   */\n      0x00\n        /* \"#utility.yul\":23748:23836   */\n      mstore\n        /* \"#utility.yul\":23855:23859   */\n      0x12\n        /* \"#utility.yul\":23852:23853   */\n      0x04\n        /* \"#utility.yul\":23845:23860   */\n      mstore\n        /* \"#utility.yul\":23879:23883   */\n      0x24\n        /* \"#utility.yul\":23876:23877   */\n      0x00\n        /* \"#utility.yul\":23869:23884   */\n      revert\n        /* \"#utility.yul\":23896:24081   */\n    tag_381:\n        /* \"#utility.yul\":23936:23937   */\n      0x00\n        /* \"#utility.yul\":23953:23973   */\n      tag_739\n        /* \"#utility.yul\":23971:23972   */\n      dup3\n        /* \"#utility.yul\":23953:23973   */\n      tag_424\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":23948:23973   */\n      swap2\n      pop\n        /* \"#utility.yul\":23987:24007   */\n      tag_740\n        /* \"#utility.yul\":24005:24006   */\n      dup4\n        /* \"#utility.yul\":23987:24007   */\n      tag_424\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":23982:24007   */\n      swap3\n      pop\n        /* \"#utility.yul\":24026:24027   */\n      dup3\n        /* \"#utility.yul\":24016:24051   */\n      tag_741\n      jumpi\n        /* \"#utility.yul\":24031:24049   */\n      tag_742\n      tag_489\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":24016:24051   */\n    tag_741:\n        /* \"#utility.yul\":24073:24074   */\n      dup3\n        /* \"#utility.yul\":24070:24071   */\n      dup3\n        /* \"#utility.yul\":24066:24075   */\n      div\n        /* \"#utility.yul\":24061:24075   */\n      swap1\n      pop\n        /* \"#utility.yul\":23896:24081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24087:24307   */\n    tag_490:\n        /* \"#utility.yul\":24227:24261   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":24223:24224   */\n      0x00\n        /* \"#utility.yul\":24215:24221   */\n      dup3\n        /* \"#utility.yul\":24211:24225   */\n      add\n        /* \"#utility.yul\":24204:24262   */\n      mstore\n        /* \"#utility.yul\":24296:24299   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24291:24293   */\n      0x20\n        /* \"#utility.yul\":24283:24289   */\n      dup3\n        /* \"#utility.yul\":24279:24294   */\n      add\n        /* \"#utility.yul\":24272:24300   */\n      mstore\n        /* \"#utility.yul\":24087:24307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24313:24679   */\n    tag_491:\n        /* \"#utility.yul\":24455:24458   */\n      0x00\n        /* \"#utility.yul\":24476:24543   */\n      tag_745\n        /* \"#utility.yul\":24540:24542   */\n      0x21\n        /* \"#utility.yul\":24535:24538   */\n      dup4\n        /* \"#utility.yul\":24476:24543   */\n      tag_475\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":24469:24543   */\n      swap2\n      pop\n        /* \"#utility.yul\":24552:24645   */\n      tag_746\n        /* \"#utility.yul\":24641:24644   */\n      dup3\n        /* \"#utility.yul\":24552:24645   */\n      tag_490\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":24670:24672   */\n      0x40\n        /* \"#utility.yul\":24665:24668   */\n      dup3\n        /* \"#utility.yul\":24661:24673   */\n      add\n        /* \"#utility.yul\":24654:24673   */\n      swap1\n      pop\n        /* \"#utility.yul\":24313:24679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24685:25104   */\n    tag_384:\n        /* \"#utility.yul\":24851:24855   */\n      0x00\n        /* \"#utility.yul\":24889:24891   */\n      0x20\n        /* \"#utility.yul\":24878:24887   */\n      dup3\n        /* \"#utility.yul\":24874:24892   */\n      add\n        /* \"#utility.yul\":24866:24892   */\n      swap1\n      pop\n        /* \"#utility.yul\":24938:24947   */\n      dup2\n        /* \"#utility.yul\":24932:24936   */\n      dup2\n        /* \"#utility.yul\":24928:24948   */\n      sub\n        /* \"#utility.yul\":24924:24925   */\n      0x00\n        /* \"#utility.yul\":24913:24922   */\n      dup4\n        /* \"#utility.yul\":24909:24926   */\n      add\n        /* \"#utility.yul\":24902:24949   */\n      mstore\n        /* \"#utility.yul\":24966:25097   */\n      tag_748\n        /* \"#utility.yul\":25092:25096   */\n      dup2\n        /* \"#utility.yul\":24966:25097   */\n      tag_491\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":24958:25097   */\n      swap1\n      pop\n        /* \"#utility.yul\":24685:25104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25110:25415   */\n    tag_394:\n        /* \"#utility.yul\":25150:25153   */\n      0x00\n        /* \"#utility.yul\":25169:25189   */\n      tag_750\n        /* \"#utility.yul\":25187:25188   */\n      dup3\n        /* \"#utility.yul\":25169:25189   */\n      tag_424\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":25164:25189   */\n      swap2\n      pop\n        /* \"#utility.yul\":25203:25223   */\n      tag_751\n        /* \"#utility.yul\":25221:25222   */\n      dup4\n        /* \"#utility.yul\":25203:25223   */\n      tag_424\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":25198:25223   */\n      swap3\n      pop\n        /* \"#utility.yul\":25357:25358   */\n      dup3\n        /* \"#utility.yul\":25289:25355   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25285:25359   */\n      sub\n        /* \"#utility.yul\":25282:25283   */\n      dup3\n        /* \"#utility.yul\":25279:25360   */\n      gt\n        /* \"#utility.yul\":25276:25383   */\n      iszero\n      tag_752\n      jumpi\n        /* \"#utility.yul\":25363:25381   */\n      tag_753\n      tag_482\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":25276:25383   */\n    tag_752:\n        /* \"#utility.yul\":25407:25408   */\n      dup3\n        /* \"#utility.yul\":25404:25405   */\n      dup3\n        /* \"#utility.yul\":25400:25409   */\n      add\n        /* \"#utility.yul\":25393:25409   */\n      swap1\n      pop\n        /* \"#utility.yul\":25110:25415   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25421:25598   */\n    tag_492:\n        /* \"#utility.yul\":25561:25590   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":25557:25558   */\n      0x00\n        /* \"#utility.yul\":25549:25555   */\n      dup3\n        /* \"#utility.yul\":25545:25559   */\n      add\n        /* \"#utility.yul\":25538:25591   */\n      mstore\n        /* \"#utility.yul\":25421:25598   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25604:25970   */\n    tag_493:\n        /* \"#utility.yul\":25746:25749   */\n      0x00\n        /* \"#utility.yul\":25767:25834   */\n      tag_756\n        /* \"#utility.yul\":25831:25833   */\n      0x1b\n        /* \"#utility.yul\":25826:25829   */\n      dup4\n        /* \"#utility.yul\":25767:25834   */\n      tag_475\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":25760:25834   */\n      swap2\n      pop\n        /* \"#utility.yul\":25843:25936   */\n      tag_757\n        /* \"#utility.yul\":25932:25935   */\n      dup3\n        /* \"#utility.yul\":25843:25936   */\n      tag_492\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":25961:25963   */\n      0x20\n        /* \"#utility.yul\":25956:25959   */\n      dup3\n        /* \"#utility.yul\":25952:25964   */\n      add\n        /* \"#utility.yul\":25945:25964   */\n      swap1\n      pop\n        /* \"#utility.yul\":25604:25970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25976:26395   */\n    tag_397:\n        /* \"#utility.yul\":26142:26146   */\n      0x00\n        /* \"#utility.yul\":26180:26182   */\n      0x20\n        /* \"#utility.yul\":26169:26178   */\n      dup3\n        /* \"#utility.yul\":26165:26183   */\n      add\n        /* \"#utility.yul\":26157:26183   */\n      swap1\n      pop\n        /* \"#utility.yul\":26229:26238   */\n      dup2\n        /* \"#utility.yul\":26223:26227   */\n      dup2\n        /* \"#utility.yul\":26219:26239   */\n      sub\n        /* \"#utility.yul\":26215:26216   */\n      0x00\n        /* \"#utility.yul\":26204:26213   */\n      dup4\n        /* \"#utility.yul\":26200:26217   */\n      add\n        /* \"#utility.yul\":26193:26240   */\n      mstore\n        /* \"#utility.yul\":26257:26388   */\n      tag_759\n        /* \"#utility.yul\":26383:26387   */\n      dup2\n        /* \"#utility.yul\":26257:26388   */\n      tag_493\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":26249:26388   */\n      swap1\n      pop\n        /* \"#utility.yul\":25976:26395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26401:26500   */\n    tag_494:\n        /* \"#utility.yul\":26453:26459   */\n      0x00\n        /* \"#utility.yul\":26487:26492   */\n      dup2\n        /* \"#utility.yul\":26481:26493   */\n      mload\n        /* \"#utility.yul\":26471:26493   */\n      swap1\n      pop\n        /* \"#utility.yul\":26401:26500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26506:26813   */\n    tag_495:\n        /* \"#utility.yul\":26574:26575   */\n      0x00\n        /* \"#utility.yul\":26584:26697   */\n    tag_762:\n        /* \"#utility.yul\":26598:26604   */\n      dup4\n        /* \"#utility.yul\":26595:26596   */\n      dup2\n        /* \"#utility.yul\":26592:26605   */\n      lt\n        /* \"#utility.yul\":26584:26697   */\n      iszero\n      tag_764\n      jumpi\n        /* \"#utility.yul\":26683:26684   */\n      dup1\n        /* \"#utility.yul\":26678:26681   */\n      dup3\n        /* \"#utility.yul\":26674:26685   */\n      add\n        /* \"#utility.yul\":26668:26686   */\n      mload\n        /* \"#utility.yul\":26664:26665   */\n      dup2\n        /* \"#utility.yul\":26659:26662   */\n      dup5\n        /* \"#utility.yul\":26655:26666   */\n      add\n        /* \"#utility.yul\":26648:26687   */\n      mstore\n        /* \"#utility.yul\":26620:26622   */\n      0x20\n        /* \"#utility.yul\":26617:26618   */\n      dup2\n        /* \"#utility.yul\":26613:26623   */\n      add\n        /* \"#utility.yul\":26608:26623   */\n      swap1\n      pop\n        /* \"#utility.yul\":26584:26697   */\n      jump(tag_762)\n    tag_764:\n        /* \"#utility.yul\":26715:26721   */\n      dup4\n        /* \"#utility.yul\":26712:26713   */\n      dup2\n        /* \"#utility.yul\":26709:26722   */\n      gt\n        /* \"#utility.yul\":26706:26807   */\n      iszero\n      tag_765\n      jumpi\n        /* \"#utility.yul\":26795:26796   */\n      0x00\n        /* \"#utility.yul\":26786:26792   */\n      dup5\n        /* \"#utility.yul\":26781:26784   */\n      dup5\n        /* \"#utility.yul\":26777:26793   */\n      add\n        /* \"#utility.yul\":26770:26797   */\n      mstore\n        /* \"#utility.yul\":26706:26807   */\n    tag_765:\n        /* \"#utility.yul\":26555:26813   */\n      pop\n        /* \"#utility.yul\":26506:26813   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26819:27183   */\n    tag_496:\n        /* \"#utility.yul\":26907:26910   */\n      0x00\n        /* \"#utility.yul\":26935:26974   */\n      tag_767\n        /* \"#utility.yul\":26968:26973   */\n      dup3\n        /* \"#utility.yul\":26935:26974   */\n      tag_494\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":26990:27061   */\n      tag_768\n        /* \"#utility.yul\":27054:27060   */\n      dup2\n        /* \"#utility.yul\":27049:27052   */\n      dup6\n        /* \"#utility.yul\":26990:27061   */\n      tag_475\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":26983:27061   */\n      swap4\n      pop\n        /* \"#utility.yul\":27070:27122   */\n      tag_769\n        /* \"#utility.yul\":27115:27121   */\n      dup2\n        /* \"#utility.yul\":27110:27113   */\n      dup6\n        /* \"#utility.yul\":27103:27107   */\n      0x20\n        /* \"#utility.yul\":27096:27101   */\n      dup7\n        /* \"#utility.yul\":27092:27108   */\n      add\n        /* \"#utility.yul\":27070:27122   */\n      tag_495\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":27147:27176   */\n      tag_770\n        /* \"#utility.yul\":27169:27175   */\n      dup2\n        /* \"#utility.yul\":27147:27176   */\n      tag_437\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":27142:27145   */\n      dup5\n        /* \"#utility.yul\":27138:27177   */\n      add\n        /* \"#utility.yul\":27131:27177   */\n      swap2\n      pop\n        /* \"#utility.yul\":26911:27183   */\n      pop\n        /* \"#utility.yul\":26819:27183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27189:27502   */\n    tag_417:\n        /* \"#utility.yul\":27302:27306   */\n      0x00\n        /* \"#utility.yul\":27340:27342   */\n      0x20\n        /* \"#utility.yul\":27329:27338   */\n      dup3\n        /* \"#utility.yul\":27325:27343   */\n      add\n        /* \"#utility.yul\":27317:27343   */\n      swap1\n      pop\n        /* \"#utility.yul\":27389:27398   */\n      dup2\n        /* \"#utility.yul\":27383:27387   */\n      dup2\n        /* \"#utility.yul\":27379:27399   */\n      sub\n        /* \"#utility.yul\":27375:27376   */\n      0x00\n        /* \"#utility.yul\":27364:27373   */\n      dup4\n        /* \"#utility.yul\":27360:27377   */\n      add\n        /* \"#utility.yul\":27353:27400   */\n      mstore\n        /* \"#utility.yul\":27417:27495   */\n      tag_772\n        /* \"#utility.yul\":27490:27494   */\n      dup2\n        /* \"#utility.yul\":27481:27487   */\n      dup5\n        /* \"#utility.yul\":27417:27495   */\n      tag_496\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":27409:27495   */\n      swap1\n      pop\n        /* \"#utility.yul\":27189:27502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27508:27699   */\n    tag_423:\n        /* \"#utility.yul\":27548:27552   */\n      0x00\n        /* \"#utility.yul\":27568:27588   */\n      tag_774\n        /* \"#utility.yul\":27586:27587   */\n      dup3\n        /* \"#utility.yul\":27568:27588   */\n      tag_424\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":27563:27588   */\n      swap2\n      pop\n        /* \"#utility.yul\":27602:27622   */\n      tag_775\n        /* \"#utility.yul\":27620:27621   */\n      dup4\n        /* \"#utility.yul\":27602:27622   */\n      tag_424\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":27597:27622   */\n      swap3\n      pop\n        /* \"#utility.yul\":27641:27642   */\n      dup3\n        /* \"#utility.yul\":27638:27639   */\n      dup3\n        /* \"#utility.yul\":27635:27643   */\n      lt\n        /* \"#utility.yul\":27632:27666   */\n      iszero\n      tag_776\n      jumpi\n        /* \"#utility.yul\":27646:27664   */\n      tag_777\n      tag_482\n      jump\t// in\n    tag_777:\n        /* \"#utility.yul\":27632:27666   */\n    tag_776:\n        /* \"#utility.yul\":27691:27692   */\n      dup3\n        /* \"#utility.yul\":27688:27689   */\n      dup3\n        /* \"#utility.yul\":27684:27693   */\n      sub\n        /* \"#utility.yul\":27676:27693   */\n      swap1\n      pop\n        /* \"#utility.yul\":27508:27699   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220065401f608dd177bdc09ce884f4616e27d8b8922b18df9f1fcc7cdba1205120664736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1192": {
									"entryPoint": null,
									"id": 1192,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_806": {
									"entryPoint": 317,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_916": {
									"entryPoint": 325,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_INFTMasterChef_$1071_fromMemory": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$286t_contract$_INFTMasterChef_$1071t_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$286": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_INFTMasterChef_$1071": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$286": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_INFTMasterChef_$1071": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3202:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "627:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "637:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "609:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "619:7:1",
														"type": ""
													}
												],
												"src": "568:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "812:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "821:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "824:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$286",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "754:57:1"
															},
															"nodeType": "YulIf",
															"src": "751:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "734:5:1",
														"type": ""
													}
												],
												"src": "684:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "927:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "958:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "958:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "895:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "903:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "911:5:1",
														"type": ""
													}
												],
												"src": "840:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1085:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1095:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1124:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1106:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1106:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1095:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_INFTMasterChef_$1071",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1067:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1077:7:1",
														"type": ""
													}
												],
												"src": "1017:119:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1208:102:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1288:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1297:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1300:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1290:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1290:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1290:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1231:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1279:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_INFTMasterChef_$1071",
																					"nodeType": "YulIdentifier",
																					"src": "1238:40:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1238:47:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1228:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1228:58:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1221:66:1"
															},
															"nodeType": "YulIf",
															"src": "1218:86:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_INFTMasterChef_$1071",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1201:5:1",
														"type": ""
													}
												],
												"src": "1142:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1402:103:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1412:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1427:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1421:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1421:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1412:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1493:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_INFTMasterChef_$1071",
																	"nodeType": "YulIdentifier",
																	"src": "1443:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1443:56:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_INFTMasterChef_$1071_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1380:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1388:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1396:5:1",
														"type": ""
													}
												],
												"src": "1316:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1611:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1620:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1623:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1613:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1613:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1613:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1577:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1602:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1584:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1584:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1574:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1574:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1567:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1567:43:1"
															},
															"nodeType": "YulIf",
															"src": "1564:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1547:5:1",
														"type": ""
													}
												],
												"src": "1511:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1702:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1712:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1727:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1721:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1721:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1712:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1770:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1743:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1743:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1743:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1680:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1688:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1696:5:1",
														"type": ""
													}
												],
												"src": "1639:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1833:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1843:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1854:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1843:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1815:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1825:7:1",
														"type": ""
													}
												],
												"src": "1788:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1914:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1971:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1980:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1983:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1973:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1973:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1973:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1937:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1962:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1944:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1944:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1934:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1927:43:1"
															},
															"nodeType": "YulIf",
															"src": "1924:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1907:5:1",
														"type": ""
													}
												],
												"src": "1871:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2062:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2072:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2087:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2081:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2081:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2072:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2130:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2103:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2103:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2103:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2040:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2048:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2056:5:1",
														"type": ""
													}
												],
												"src": "1999:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2330:869:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2377:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2379:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2379:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2379:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2351:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2360:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2347:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2347:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2372:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2343:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2343:33:1"
															},
															"nodeType": "YulIf",
															"src": "2340:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2470:142:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2485:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2499:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2489:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2514:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2574:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2585:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2570:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2570:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2594:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2524:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2524:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2514:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2622:152:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2637:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2651:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2641:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2667:97:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2736:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2747:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2732:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2732:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2756:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_INFTMasterChef_$1071_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2677:54:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2677:87:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2667:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2784:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2799:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2813:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2803:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2829:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2875:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2886:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2871:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2871:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2895:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2839:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2839:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2829:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2923:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2938:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2952:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2942:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2968:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3014:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3025:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3010:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3010:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3034:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2978:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2978:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2968:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3062:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3077:17:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3091:3:1",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3081:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3108:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3154:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3165:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3150:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3150:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3174:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3118:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3118:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3108:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$286t_contract$_INFTMasterChef_$1071t_addresst_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2268:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2279:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2291:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2299:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2307:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2315:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2323:6:1",
														"type": ""
													}
												],
												"src": "2148:1051:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$286(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$286(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$286(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$286_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function cleanup_t_contract$_INFTMasterChef_$1071(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_INFTMasterChef_$1071(value) {\n        if iszero(eq(value, cleanup_t_contract$_INFTMasterChef_$1071(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_INFTMasterChef_$1071_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_INFTMasterChef_$1071(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$286t_contract$_INFTMasterChef_$1071t_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$286_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_INFTMasterChef_$1071_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x0 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x33FC CODESIZE SUB DUP1 PUSH3 0x33FC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x41 SWAP2 SWAP1 PUSH3 0x338 JUMP JUMPDEST PUSH3 0x61 PUSH3 0x55 PUSH3 0x13D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x145 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH3 0x3C0 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x23B DUP3 PUSH3 0x20E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24F DUP3 PUSH3 0x22E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x261 DUP2 PUSH3 0x242 JUMP JUMPDEST DUP2 EQ PUSH3 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x281 DUP2 PUSH3 0x256 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x294 DUP3 PUSH3 0x22E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2A6 DUP2 PUSH3 0x287 JUMP JUMPDEST DUP2 EQ PUSH3 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2C6 DUP2 PUSH3 0x29B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2D7 DUP2 PUSH3 0x22E JUMP JUMPDEST DUP2 EQ PUSH3 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F7 DUP2 PUSH3 0x2CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x312 DUP2 PUSH3 0x2FD JUMP JUMPDEST DUP2 EQ PUSH3 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x332 DUP2 PUSH3 0x307 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x357 JUMPI PUSH3 0x356 PUSH3 0x209 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x367 DUP9 DUP3 DUP10 ADD PUSH3 0x270 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x37A DUP9 DUP3 DUP10 ADD PUSH3 0x2B5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x38D DUP9 DUP3 DUP10 ADD PUSH3 0x2E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x3A0 DUP9 DUP3 DUP10 ADD PUSH3 0x321 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x3B3 DUP9 DUP3 DUP10 ADD PUSH3 0x321 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x302C DUP1 PUSH3 0x3D0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64482F79 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xCB3CBA55 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE2BBB158 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xE4D09896 EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xF395DB2C EQ PUSH2 0x54E JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xCB3CBA55 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xD0D41FE1 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0xD49E77CD EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0xD5545992 EQ PUSH2 0x4C8 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8AA28550 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x43F JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x64482F79 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x3B5 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x23CF3118 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x612EEE43 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x385 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x313 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x2080BAAB EQ PUSH2 0x2AB JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x1395D8C9 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x20E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x86C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x243B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x2570 JUMP JUMPDEST PUSH2 0x8E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x25C3 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x2641 JUMP JUMPDEST PUSH2 0xC98 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x266E JUMP JUMPDEST PUSH2 0xD58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31B PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x113A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x367 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x137A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x1400 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38D PUSH2 0x1486 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x26AE JUMP JUMPDEST PUSH2 0x14B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B3 PUSH2 0x15C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BD PUSH2 0x164D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x2722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DB PUSH2 0x1673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F9 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x274C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x429 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x266E JUMP JUMPDEST PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x459 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x25C3 JUMP JUMPDEST PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP3 SWAP2 SWAP1 PUSH2 0x2767 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x478 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x27B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x27CC JUMP JUMPDEST PUSH2 0x172A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B2 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x274C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x25C3 JUMP JUMPDEST PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x28B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x512 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x266E JUMP JUMPDEST PUSH2 0x18C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51C PUSH2 0x1B21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x28FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x27CC JUMP JUMPDEST PUSH2 0x1B47 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x556 PUSH2 0x1C3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x5FC DUP4 PUSH2 0x113A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x646 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x638 PUSH5 0xE8D4A51000 PUSH2 0x62A DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x682 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70A SWAP3 SWAP2 SWAP1 PUSH2 0x29C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x729 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x849DF12C DUP3 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AB SWAP3 SWAP2 SWAP1 PUSH2 0x2A2C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x80F PUSH5 0xE8D4A51000 PUSH2 0x801 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 PUSH1 0x40 MLOAD PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8EE PUSH2 0x1D52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x90C PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x959 SWAP1 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x971 JUMPI PUSH2 0x970 PUSH2 0x1486 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD NUMBER GT PUSH2 0x984 JUMPI PUSH1 0xA SLOAD PUSH2 0x986 JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP PUSH2 0x99D DUP5 PUSH1 0x9 SLOAD PUSH2 0x1D5A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA8A JUMPI PUSH2 0xA89 PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0x274C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB97 SWAP2 SWAP1 PUSH2 0x2AD6 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xBAD JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xC48 JUMPI PUSH1 0x0 PUSH2 0xBC2 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x16A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC05 PUSH1 0x9 SLOAD PUSH2 0xBF7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xBE9 PUSH1 0x4 SLOAD DUP8 PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC43 PUSH2 0xC34 DUP5 PUSH2 0xC26 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x1D5A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xC8C DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0xC7E PUSH5 0xE8D4A51000 PUSH2 0xC70 DUP7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCA0 PUSH2 0x1D52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCBE PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP1 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD6E JUMPI PUSH2 0xD6D PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 DUP5 SUB PUSH2 0xE81 JUMPI PUSH2 0xDE4 DUP6 PUSH2 0x113A JUMP JUMPDEST PUSH2 0xE2C DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0xE1E PUSH5 0xE8D4A51000 PUSH2 0xE10 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xE42 JUMPI PUSH2 0xE41 CALLER DUP3 PUSH2 0x1DB8 JUMP JUMPDEST JUMPDEST PUSH2 0xE74 PUSH5 0xE8D4A51000 PUSH2 0xE66 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP5 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xED7 JUMPI DUP7 DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEAC JUMPI PUSH2 0xEAB PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0xEC4 JUMPI PUSH1 0x1 SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0xECF SWAP1 PUSH2 0x2B32 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE86 JUMP JUMPDEST POP PUSH1 0x1 DUP3 EQ PUSH2 0xF1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF12 SWAP1 PUSH2 0x2BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0xF63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5A SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF6C DUP8 PUSH2 0x113A JUMP JUMPDEST PUSH2 0xFB4 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0xFA6 PUSH5 0xE8D4A51000 PUSH2 0xF98 DUP10 PUSH1 0x3 ADD SLOAD DUP10 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0xFCA JUMPI PUSH2 0xFC9 CALLER DUP5 PUSH2 0x1DB8 JUMP JUMPDEST JUMPDEST PUSH2 0xFE2 PUSH1 0x1 DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1D08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x101C PUSH5 0xE8D4A51000 PUSH2 0x100E DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x103A JUMPI PUSH2 0x1039 PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1125 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1150 JUMPI PUSH2 0x114F PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1171 JUMPI POP PUSH2 0x1377 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D0 SWAP2 SWAP1 PUSH2 0x274C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1211 SWAP2 SWAP1 PUSH2 0x2AD6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x122B JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1377 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123B DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x16A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x127E PUSH1 0x9 SLOAD PUSH2 0x1270 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1262 PUSH1 0x4 SLOAD DUP8 PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DD SWAP3 SWAP2 SWAP1 PUSH2 0x29C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1320 SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST POP PUSH2 0x1361 PUSH2 0x134E DUP5 PUSH2 0x1340 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x1D5A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1382 PUSH2 0x1D52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13A0 PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13ED SWAP1 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1408 PUSH2 0x1D52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1426 PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x147C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1473 SWAP1 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14B5 JUMPI PUSH2 0x14A4 DUP2 PUSH2 0x113A JUMP JUMPDEST DUP1 PUSH2 0x14AE SWAP1 PUSH2 0x2B32 JUMP JUMPDEST SWAP1 POP PUSH2 0x1493 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x14C1 PUSH2 0x1D52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14DF PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1535 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152C SWAP1 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1544 JUMPI PUSH2 0x1543 PUSH2 0x1486 JUMP JUMPDEST JUMPDEST PUSH2 0x1590 DUP3 PUSH2 0x1582 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x1D08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D5A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x15AB JUMPI PUSH2 0x15AA PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x15CD PUSH2 0x1D52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15EB PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1641 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1638 SWAP1 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x164B PUSH1 0x0 PUSH2 0x1FAD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CB PUSH1 0x5 SLOAD PUSH2 0x16BD DUP6 DUP6 PUSH2 0x1D08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1732 PUSH2 0x1D52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1750 PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179D SWAP1 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x18B4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x18A0 JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x18D8 JUMPI PUSH2 0x18D7 PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1945 DUP5 PUSH2 0x113A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x19B4 JUMPI PUSH1 0x0 PUSH2 0x199C DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x198E PUSH5 0xE8D4A51000 PUSH2 0x1980 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x19B2 JUMPI PUSH2 0x19B1 CALLER DUP3 PUSH2 0x1DB8 JUMP JUMPDEST JUMPDEST POP JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A15 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1A5F PUSH1 0x1 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1D5A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1A99 PUSH5 0xE8D4A51000 PUSH2 0x1A8B DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1B13 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B4F PUSH2 0x1D52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B6D PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BBA SWAP1 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C29 SWAP1 PUSH2 0x2CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C3B DUP2 PUSH2 0x1FAD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SUB PUSH2 0x1C56 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x1C64 SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x1C73 SWAP2 SWAP1 PUSH2 0x2DA4 JUMP JUMPDEST EQ PUSH2 0x1CB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CAA SWAP1 PUSH2 0x2E47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D00 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D4A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x20D4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x1D69 SWAP2 SWAP1 PUSH2 0x2E67 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1DAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DA5 SWAP1 PUSH2 0x2F09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E15 SWAP2 SWAP1 PUSH2 0x274C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E32 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E56 SWAP2 SWAP1 PUSH2 0x2AD6 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F06 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EBD SWAP3 SWAP2 SWAP1 PUSH2 0x29C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EDC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F00 SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST POP PUSH2 0x1FA8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F63 SWAP3 SWAP2 SWAP1 PUSH2 0x29C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FA6 SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x20B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20AF SWAP2 SWAP1 PUSH2 0x2FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x20C7 SWAP2 SWAP1 PUSH2 0x2DA4 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x211C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2113 SWAP2 SWAP1 PUSH2 0x2FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x212B SWAP2 SWAP1 PUSH2 0x2FC2 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x214B DUP2 PUSH2 0x2138 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2166 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2189 DUP2 PUSH2 0x2138 JUMP JUMPDEST DUP2 EQ PUSH2 0x2194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21A6 DUP2 PUSH2 0x2180 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C2 JUMPI PUSH2 0x21C1 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21D0 DUP5 DUP3 DUP6 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2204 DUP3 PUSH2 0x21D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2214 DUP2 PUSH2 0x21F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x221F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2231 DUP2 PUSH2 0x220B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x228A DUP3 PUSH2 0x2241 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x22A9 JUMPI PUSH2 0x22A8 PUSH2 0x2252 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BC PUSH2 0x216C JUMP JUMPDEST SWAP1 POP PUSH2 0x22C8 DUP3 DUP3 PUSH2 0x2281 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x22E8 JUMPI PUSH2 0x22E7 PUSH2 0x2252 JUMP JUMPDEST JUMPDEST PUSH2 0x22F1 DUP3 PUSH2 0x2241 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2320 PUSH2 0x231B DUP5 PUSH2 0x22CD JUMP JUMPDEST PUSH2 0x22B2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x233C JUMPI PUSH2 0x233B PUSH2 0x223C JUMP JUMPDEST JUMPDEST PUSH2 0x2347 DUP5 DUP3 DUP6 PUSH2 0x22FE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2364 JUMPI PUSH2 0x2363 PUSH2 0x2237 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2374 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x230D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2397 JUMPI PUSH2 0x2396 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23A5 DUP8 DUP3 DUP9 ADD PUSH2 0x2222 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x23B6 DUP8 DUP3 DUP9 ADD PUSH2 0x2222 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x23C7 DUP8 DUP3 DUP9 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23E8 JUMPI PUSH2 0x23E7 PUSH2 0x217B JUMP JUMPDEST JUMPDEST PUSH2 0x23F4 DUP8 DUP3 DUP9 ADD PUSH2 0x234F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2435 DUP2 PUSH2 0x2400 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2450 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x242C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247B PUSH2 0x2476 PUSH2 0x2471 DUP5 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x2456 JUMP JUMPDEST PUSH2 0x21D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248D DUP3 PUSH2 0x2460 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x249F DUP3 PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24AF DUP2 PUSH2 0x2494 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x24CA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x24A6 JUMP JUMPDEST PUSH2 0x24D7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x24E4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x24F1 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2505 DUP3 PUSH2 0x21F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2515 DUP2 PUSH2 0x24FA JUMP JUMPDEST DUP2 EQ PUSH2 0x2520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2532 DUP2 PUSH2 0x250C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x254D DUP2 PUSH2 0x2538 JUMP JUMPDEST DUP2 EQ PUSH2 0x2558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x256A DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2589 JUMPI PUSH2 0x2588 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2597 DUP7 DUP3 DUP8 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x25A8 DUP7 DUP3 DUP8 ADD PUSH2 0x2523 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x25B9 DUP7 DUP3 DUP8 ADD PUSH2 0x255B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25DA JUMPI PUSH2 0x25D9 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25E8 DUP6 DUP3 DUP7 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25F9 DUP6 DUP3 DUP7 ADD PUSH2 0x2222 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260E DUP3 PUSH2 0x21F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x261E DUP2 PUSH2 0x2603 JUMP JUMPDEST DUP2 EQ PUSH2 0x2629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x263B DUP2 PUSH2 0x2615 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2657 JUMPI PUSH2 0x2656 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2665 DUP5 DUP3 DUP6 ADD PUSH2 0x262C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2685 JUMPI PUSH2 0x2684 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2693 DUP6 DUP3 DUP7 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26A4 DUP6 DUP3 DUP7 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26C7 JUMPI PUSH2 0x26C6 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26D5 DUP7 DUP3 DUP8 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x26E6 DUP7 DUP3 DUP8 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x26F7 DUP7 DUP3 DUP8 ADD PUSH2 0x255B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x270C DUP3 PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x271C DUP2 PUSH2 0x2701 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2737 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2713 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2746 DUP2 PUSH2 0x21F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2761 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x273D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x277C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x2789 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x279B DUP3 PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27AB DUP2 PUSH2 0x2790 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E2 JUMPI PUSH2 0x27E1 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27F0 DUP5 DUP3 DUP6 ADD PUSH2 0x2222 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x282E DUP2 PUSH2 0x2138 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2840 DUP4 DUP4 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2864 DUP3 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x286E DUP2 DUP6 PUSH2 0x2804 JUMP JUMPDEST SWAP4 POP PUSH2 0x2879 DUP4 PUSH2 0x2815 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28AA JUMPI DUP2 MLOAD PUSH2 0x2891 DUP9 DUP3 PUSH2 0x2834 JUMP JUMPDEST SWAP8 POP PUSH2 0x289C DUP4 PUSH2 0x284C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x287D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28D1 DUP2 DUP5 PUSH2 0x2859 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E4 DUP3 PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F4 DUP2 PUSH2 0x28D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x290F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206973207A65726F000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298B PUSH1 0xE DUP4 PUSH2 0x2944 JUMP JUMPDEST SWAP2 POP PUSH2 0x2996 DUP3 PUSH2 0x2955 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29BA DUP2 PUSH2 0x297E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x29D6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x273D JUMP JUMPDEST PUSH2 0x29E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x29F9 DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A15 JUMPI PUSH2 0x2A14 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A23 DUP5 DUP3 DUP6 ADD PUSH2 0x29EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A41 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x2A4E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x273D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A8B PUSH1 0x20 DUP4 PUSH2 0x2944 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A96 DUP3 PUSH2 0x2A55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ABA DUP2 PUSH2 0x2A7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2AD0 DUP2 PUSH2 0x2180 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AEC JUMPI PUSH2 0x2AEB PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AFA DUP5 DUP3 DUP6 ADD PUSH2 0x2AC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B3D DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2B6F JUMPI PUSH2 0x2B6E PUSH2 0x2B03 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F74204F776E6572206F6620746F6B656E206964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB0 PUSH1 0x1D DUP4 PUSH2 0x2944 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BBB DUP3 PUSH2 0x2B7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BDF DUP2 PUSH2 0x2BA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C1C PUSH1 0x12 DUP4 PUSH2 0x2944 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C27 DUP3 PUSH2 0x2BE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C4B DUP2 PUSH2 0x2C0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C67 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x273D JUMP JUMPDEST PUSH2 0x2C74 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x273D JUMP JUMPDEST PUSH2 0x2C81 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE5 PUSH1 0x26 DUP4 PUSH2 0x2944 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CF0 DUP3 PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D14 DUP2 PUSH2 0x2CD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D26 DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D31 DUP4 PUSH2 0x2138 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2D6A JUMPI PUSH2 0x2D69 PUSH2 0x2B03 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2DAF DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DBA DUP4 PUSH2 0x2138 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2DCA JUMPI PUSH2 0x2DC9 PUSH2 0x2D75 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E31 PUSH1 0x21 DUP4 PUSH2 0x2944 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E3C DUP3 PUSH2 0x2DD5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E60 DUP2 PUSH2 0x2E24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E72 DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7D DUP4 PUSH2 0x2138 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2EB2 JUMPI PUSH2 0x2EB1 PUSH2 0x2B03 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EF3 PUSH1 0x1B DUP4 PUSH2 0x2944 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EFE DUP3 PUSH2 0x2EBD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F22 DUP2 PUSH2 0x2EE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F52 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F37 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2F61 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F72 DUP3 PUSH2 0x2F29 JUMP JUMPDEST PUSH2 0x2F7C DUP2 DUP6 PUSH2 0x2944 JUMP JUMPDEST SWAP4 POP PUSH2 0x2F8C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F34 JUMP JUMPDEST PUSH2 0x2F95 DUP2 PUSH2 0x2241 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FBA DUP2 DUP5 PUSH2 0x2F67 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FCD DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD8 DUP4 PUSH2 0x2138 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2FEB JUMPI PUSH2 0x2FEA PUSH2 0x2B03 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD SLOAD ADD 0xF6 ADDMOD 0xDD OR PUSH28 0xDC09CE884F4616E27D8B8922B18DF9F1FCC7CDBA1205120664736F6C PUSH4 0x4300080F STOP CALLER ",
							"sourceMap": "28007:10488:0:-:0;;;29672:1;29638:35;;30113:1;30080:34;;30488:340;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20054:32;20073:12;:10;;;:12;;:::i;:::-;20054:18;;;:32;;:::i;:::-;30674:4;30668:3;;:10;;;;;;;;;;;;;;;;;;30705:14;30689:13;;:30;;;;;;;;;;;;;;;;;;30740:8;30730:7;;:18;;;;;;;;;;;;;;;;;;30773:12;30759:11;:26;;;;30809:11;30796:10;:24;;;;30488:340;;;;;28007:10488;;19549:98;19602:7;19629:10;19622:17;;19549:98;:::o;21445:191::-;21519:16;21538:6;;;;;;;;;;;21519:25;;21564:8;21555:6;;:17;;;;;;;;;;;;;;;;;;21619:8;21588:40;;21609:8;21588:40;;;;;;;;;;;;21508:128;21445:191;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:119::-;1077:7;1106:24;1124:5;1106:24;:::i;:::-;1095:35;;1017:119;;;:::o;1142:168::-;1238:47;1279:5;1238:47;:::i;:::-;1231:5;1228:58;1218:86;;1300:1;1297;1290:12;1218:86;1142:168;:::o;1316:189::-;1396:5;1427:6;1421:13;1412:22;;1443:56;1493:5;1443:56;:::i;:::-;1316:189;;;;:::o;1511:122::-;1584:24;1602:5;1584:24;:::i;:::-;1577:5;1574:35;1564:63;;1623:1;1620;1613:12;1564:63;1511:122;:::o;1639:143::-;1696:5;1727:6;1721:13;1712:22;;1743:33;1770:5;1743:33;:::i;:::-;1639:143;;;;:::o;1788:77::-;1825:7;1854:5;1843:16;;1788:77;;;:::o;1871:122::-;1944:24;1962:5;1944:24;:::i;:::-;1937:5;1934:35;1924:63;;1983:1;1980;1973:12;1924:63;1871:122;:::o;1999:143::-;2056:5;2087:6;2081:13;2072:22;;2103:33;2130:5;2103:33;:::i;:::-;1999:143;;;;:::o;2148:1051::-;2291:6;2299;2307;2315;2323;2372:3;2360:9;2351:7;2347:23;2343:33;2340:120;;;2379:79;;:::i;:::-;2340:120;2499:1;2524:78;2594:7;2585:6;2574:9;2570:22;2524:78;:::i;:::-;2514:88;;2470:142;2651:2;2677:87;2756:7;2747:6;2736:9;2732:22;2677:87;:::i;:::-;2667:97;;2622:152;2813:2;2839:64;2895:7;2886:6;2875:9;2871:22;2839:64;:::i;:::-;2829:74;;2784:129;2952:2;2978:64;3034:7;3025:6;3014:9;3010:22;2978:64;:::i;:::-;2968:74;;2923:129;3091:3;3118:64;3174:7;3165:6;3154:9;3150:22;3118:64;:::i;:::-;3108:74;;3062:130;2148:1051;;;;;;;;:::o;28007:10488:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BONUS_MULTIPLIER_1113": {
									"entryPoint": 5747,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DDTPerBlock_1110": {
									"entryPoint": 7230,
									"id": 1110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DDT_1106": {
									"entryPoint": 5892,
									"id": 1106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NFTMasterChef_1103": {
									"entryPoint": 6945,
									"id": 1103,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_806": {
									"entryPoint": 7506,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_916": {
									"entryPoint": 8109,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1281": {
									"entryPoint": 2278,
									"id": 1281,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_27": {
									"entryPoint": 7514,
									"id": 27,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@compundDDT_2023": {
									"entryPoint": 1401,
									"id": 2023,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_1719": {
									"entryPoint": 6338,
									"id": 1719,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@devaddr_1108": {
									"entryPoint": 6122,
									"id": 1108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_124": {
									"entryPoint": 7358,
									"id": 124,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_152": {
									"entryPoint": 8305,
									"id": 152,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getMultiplier_1350": {
									"entryPoint": 5794,
									"id": 1350,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getUserTokenIds_1373": {
									"entryPoint": 6160,
									"id": 1373,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@massUpdatePools_1500": {
									"entryPoint": 5254,
									"id": 1500,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@migrator_1116": {
									"entryPoint": 5709,
									"id": 1116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_107": {
									"entryPoint": 7236,
									"id": 107,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@onERC721Received_1212": {
									"entryPoint": 2156,
									"id": 1212,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_845": {
									"entryPoint": 5753,
									"id": 845,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingDDT_1475": {
									"entryPoint": 2675,
									"id": 1475,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolInfo_1120": {
									"entryPoint": 2176,
									"id": 1120,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_1233": {
									"entryPoint": 1388,
									"id": 1233,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_873": {
									"entryPoint": 5573,
									"id": 873,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeDDTTransfer_2061": {
									"entryPoint": 7608,
									"id": 2061,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setDevAddress_2073": {
									"entryPoint": 5930,
									"id": 2073,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMigrator_1332": {
									"entryPoint": 3224,
									"id": 1332,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@set_1319": {
									"entryPoint": 5305,
									"id": 1319,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startBlock_1132": {
									"entryPoint": 4404,
									"id": 1132,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_44": {
									"entryPoint": 7432,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_72": {
									"entryPoint": 8404,
									"id": 72,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@totalAllocPoint_1130": {
									"entryPoint": 2272,
									"id": 1130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_896": {
									"entryPoint": 6983,
									"id": 896,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateDDTPerBlock_2085": {
									"entryPoint": 5120,
									"id": 2085,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateMultiplier_1224": {
									"entryPoint": 4986,
									"id": 1224,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePool_1601": {
									"entryPoint": 4410,
									"id": 1601,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_1127": {
									"entryPoint": 5843,
									"id": 1127,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1934": {
									"entryPoint": 3416,
									"id": 1934,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8973,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 10730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721_$1048": {
									"entryPoint": 9507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IMigratorChef_$927": {
									"entryPoint": 9772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 10945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IMigratorChef_$927": {
									"entryPoint": 9793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 10966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 9667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC721_$1048t_bool": {
									"entryPoint": 9584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 9838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 9902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 10292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 10329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 9260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack": {
									"entryPoint": 10146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$1048_to_t_address_fromStack": {
									"entryPoint": 9382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack": {
									"entryPoint": 10003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_INFTMasterChef_$1071_to_t_address_fromStack": {
									"entryPoint": 10475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 10277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11346,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10689,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 10423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 9275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed": {
									"entryPoint": 10161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$1048_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9397,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed": {
									"entryPoint": 10018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INFTMasterChef_$1071__to_t_address__fromStack_reversed": {
									"entryPoint": 10490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 10796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10087,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 10261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 10233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 12073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 10316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 10244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 12226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 9216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$1048": {
									"entryPoint": 9466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IMigratorChef_$927": {
									"entryPoint": 9731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$286_to_t_address": {
									"entryPoint": 10128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$1048_to_t_address": {
									"entryPoint": 9364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IMigratorChef_$927_to_t_address": {
									"entryPoint": 9985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_INFTMasterChef_$1071_to_t_address": {
									"entryPoint": 10457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 9312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 8958,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 12084,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 8833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 11058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11011,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11637,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10517,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8786,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8759,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8764,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8571,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8566,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 11401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 11965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd": {
									"entryPoint": 11130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c": {
									"entryPoint": 10581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3": {
									"entryPoint": 11733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 10837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df": {
									"entryPoint": 11238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$1048": {
									"entryPoint": 9484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IMigratorChef_$927": {
									"entryPoint": 9749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:27702:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"src": "442:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:1"
															},
															"nodeType": "YulIf",
															"src": "822:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:1",
														"type": ""
													}
												],
												"src": "769:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:1",
														"type": ""
													}
												],
												"src": "897:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:1"
															},
															"nodeType": "YulIf",
															"src": "1118:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:1",
														"type": ""
													}
												],
												"src": "1042:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:1",
														"type": ""
													}
												],
												"src": "1377:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:1",
														"type": ""
													}
												],
												"src": "1509:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:1"
															},
															"nodeType": "YulIf",
															"src": "1664:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:1",
														"type": ""
													}
												],
												"src": "1611:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:1",
														"type": ""
													}
												],
												"src": "1739:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1973:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1990:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1993:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1983:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1884:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2096:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2113:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2116:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2106:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2106:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "2007:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2188:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2206:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2213:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2202:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2202:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2222:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2218:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2218:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2198:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2198:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2188:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2161:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2171:6:1",
														"type": ""
													}
												],
												"src": "2130:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2266:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2283:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2286:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2276:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2276:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2380:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2383:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2373:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2373:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2373:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2404:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2407:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2397:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2397:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2397:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2238:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2467:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2477:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2499:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2529:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2507:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2507:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2495:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2495:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2481:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2646:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2648:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2648:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2648:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2589:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2601:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2586:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2586:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2625:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2637:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2622:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2622:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2583:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:62:1"
															},
															"nodeType": "YulIf",
															"src": "2580:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2684:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2688:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2677:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2677:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2453:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2461:4:1",
														"type": ""
													}
												],
												"src": "2424:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2752:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2762:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2772:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2772:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2821:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2829:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2801:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2801:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2801:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2736:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2745:6:1",
														"type": ""
													}
												],
												"src": "2711:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2912:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3017:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3019:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3019:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3019:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2989:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2997:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2986:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2986:30:1"
															},
															"nodeType": "YulIf",
															"src": "2983:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3049:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3079:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "3057:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3057:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3049:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3123:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3135:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3141:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3131:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3131:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3123:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2896:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2907:4:1",
														"type": ""
													}
												],
												"src": "2846:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3210:103:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3233:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3238:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3243:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3220:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3220:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3220:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3291:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3296:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3287:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3287:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3305:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3280:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3280:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3280:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3192:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3197:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3202:6:1",
														"type": ""
													}
												],
												"src": "3159:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3402:327:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3412:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3478:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3437:40:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3437:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3421:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3421:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3412:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3502:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3509:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3495:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3495:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3525:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3540:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3547:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3536:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3536:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3529:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3590:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "3592:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3592:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3592:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3571:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3576:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3567:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3585:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3564:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3564:25:1"
															},
															"nodeType": "YulIf",
															"src": "3561:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3706:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3711:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3716:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3682:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3682:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3682:41:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3375:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3380:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3388:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3396:5:1",
														"type": ""
													}
												],
												"src": "3319:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3809:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3858:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3860:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3860:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3860:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3837:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3845:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3833:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3833:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3852:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3829:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3829:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3822:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3822:35:1"
															},
															"nodeType": "YulIf",
															"src": "3819:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3950:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3977:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3964:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3954:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3993:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4053:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4061:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4068:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4076:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4002:46:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4002:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3993:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3787:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3795:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3803:5:1",
														"type": ""
													}
												],
												"src": "3748:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4218:817:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4265:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4267:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4267:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4267:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4260:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4231:33:1"
															},
															"nodeType": "YulIf",
															"src": "4228:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4358:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4373:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4387:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4377:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4402:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4437:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4448:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4433:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4457:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4412:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4412:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4402:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4485:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4500:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4514:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4504:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4530:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4565:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4576:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4561:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4561:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4585:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4540:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4540:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4530:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4613:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4628:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4642:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4632:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4658:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4693:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4704:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4689:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4689:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4713:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4668:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4668:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4658:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4741:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4756:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4787:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4798:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4783:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4783:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4770:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4770:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4760:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4849:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4851:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4851:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4851:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4821:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4829:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4818:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4818:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "4815:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4946:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4990:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5001:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4986:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4986:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5010:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4956:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4956:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4946:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4164:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4175:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4187:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4195:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4203:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4211:6:1",
														"type": ""
													}
												],
												"src": "4092:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5085:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5095:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5110:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5117:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5106:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5106:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5095:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5067:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5077:7:1",
														"type": ""
													}
												],
												"src": "5041:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5259:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5276:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5298:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5281:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5281:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5269:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5269:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5269:36:1"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5247:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5254:3:1",
														"type": ""
													}
												],
												"src": "5196:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5413:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5423:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5435:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5446:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5431:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5431:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5423:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5501:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5514:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5525:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5510:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5510:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5459:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5459:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5459:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5385:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5397:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5408:4:1",
														"type": ""
													}
												],
												"src": "5317:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5573:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5583:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5590:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5583:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5559:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5569:3:1",
														"type": ""
													}
												],
												"src": "5541:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5667:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5677:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5735:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "5717:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5717:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5708:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5708:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5690:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5690:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5677:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5647:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5657:9:1",
														"type": ""
													}
												],
												"src": "5607:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5815:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5825:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5869:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5838:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5838:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5825:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5795:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5805:9:1",
														"type": ""
													}
												],
												"src": "5755:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5963:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5973:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6017:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5986:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5986:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5973:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$1048_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5943:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5953:9:1",
														"type": ""
													}
												],
												"src": "5887:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6116:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6133:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6185:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$1048_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6138:46:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6138:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6126:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6126:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6126:66:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$1048_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6104:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6111:3:1",
														"type": ""
													}
												],
												"src": "6035:163:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6402:387:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6412:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6424:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6435:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6420:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6420:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6412:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6509:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6522:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6533:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6518:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6518:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$1048_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6449:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6449:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6449:87:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6590:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6603:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6614:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6599:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6599:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6546:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6546:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6546:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6672:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6681:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6628:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6628:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6628:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6754:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6767:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6778:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6763:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6763:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6710:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6710:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6710:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$1048_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6350:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6362:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6370:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6378:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6386:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6397:4:1",
														"type": ""
													}
												],
												"src": "6204:585:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6856:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6866:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6895:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6877:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6877:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6866:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$1048",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6838:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6848:7:1",
														"type": ""
													}
												],
												"src": "6795:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6972:95:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7045:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7054:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7057:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7047:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7047:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7047:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6995:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7036:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$1048",
																					"nodeType": "YulIdentifier",
																					"src": "7002:33:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7002:40:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6992:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6992:51:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6985:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6985:59:1"
															},
															"nodeType": "YulIf",
															"src": "6982:79:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$1048",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6965:5:1",
														"type": ""
													}
												],
												"src": "6913:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7141:103:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7151:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7173:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7160:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7160:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7151:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7232:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$1048",
																	"nodeType": "YulIdentifier",
																	"src": "7189:42:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7189:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7189:49:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$1048",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7119:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7127:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7135:5:1",
														"type": ""
													}
												],
												"src": "7073:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7292:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7302:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7327:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7320:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7320:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7313:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7313:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7302:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7274:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7284:7:1",
														"type": ""
													}
												],
												"src": "7250:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7386:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7440:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7449:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7452:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7442:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7442:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7409:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7431:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "7416:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7416:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7406:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7406:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7399:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7399:40:1"
															},
															"nodeType": "YulIf",
															"src": "7396:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7379:5:1",
														"type": ""
													}
												],
												"src": "7346:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7517:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7527:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7549:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7536:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7536:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7527:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7589:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "7565:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7565:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7565:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7495:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7503:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7511:5:1",
														"type": ""
													}
												],
												"src": "7468:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7720:532:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7766:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7768:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7768:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7768:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7741:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7750:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7737:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7737:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7762:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7733:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7733:32:1"
															},
															"nodeType": "YulIf",
															"src": "7730:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "7859:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7874:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7888:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7878:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7903:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7938:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7949:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7934:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7934:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7958:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7913:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7913:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7903:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7986:134:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8001:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8015:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8005:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8031:79:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8082:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8093:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8078:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8078:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8102:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$1048",
																			"nodeType": "YulIdentifier",
																			"src": "8041:36:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8041:69:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8031:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8130:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8145:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8159:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8149:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8175:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8207:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8218:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8203:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8203:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8227:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "8185:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8185:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8175:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC721_$1048t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7674:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7685:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7697:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7705:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7713:6:1",
														"type": ""
													}
												],
												"src": "7607:645:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8341:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8387:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8389:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8389:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8389:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8362:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8371:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8358:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8358:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8383:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8354:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8354:32:1"
															},
															"nodeType": "YulIf",
															"src": "8351:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "8480:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8495:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8509:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8499:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8524:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8559:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8570:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8555:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8555:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8579:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8534:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8534:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8524:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8607:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8622:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8636:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8626:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8652:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8687:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8698:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8683:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8683:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8707:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8662:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8662:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8652:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8303:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8314:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8326:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8334:6:1",
														"type": ""
													}
												],
												"src": "8258:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8804:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8814:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8843:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8825:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8825:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8814:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8786:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8796:7:1",
														"type": ""
													}
												],
												"src": "8738:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8925:100:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9003:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9012:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9015:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9005:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9005:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9005:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8948:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8994:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IMigratorChef_$927",
																					"nodeType": "YulIdentifier",
																					"src": "8955:38:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8955:45:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8945:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8945:56:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8938:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8938:64:1"
															},
															"nodeType": "YulIf",
															"src": "8935:84:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8918:5:1",
														"type": ""
													}
												],
												"src": "8861:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9104:108:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9114:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9136:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9123:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9123:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9114:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IMigratorChef_$927",
																	"nodeType": "YulIdentifier",
																	"src": "9152:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9152:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9152:54:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9082:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9090:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9098:5:1",
														"type": ""
													}
												],
												"src": "9031:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9305:284:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9351:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9353:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9353:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9353:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9326:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9335:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9322:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9322:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9347:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9318:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9318:32:1"
															},
															"nodeType": "YulIf",
															"src": "9315:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "9444:138:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9459:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9473:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9463:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9488:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9544:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9555:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9540:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9540:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9564:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IMigratorChef_$927",
																			"nodeType": "YulIdentifier",
																			"src": "9498:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9498:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9488:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9275:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9286:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9298:6:1",
														"type": ""
													}
												],
												"src": "9218:371:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9678:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9724:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9726:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9726:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9726:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9699:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9708:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9695:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9695:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9720:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9691:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9691:32:1"
															},
															"nodeType": "YulIf",
															"src": "9688:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "9817:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9832:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9846:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9836:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9861:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9896:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9907:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9892:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9892:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9916:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9871:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9871:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9861:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9944:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9959:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9973:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9963:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9989:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10024:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10035:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10020:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10020:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10044:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9999:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9999:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9989:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9640:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9651:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9663:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9671:6:1",
														"type": ""
													}
												],
												"src": "9595:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10172:516:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10218:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10220:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10220:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10220:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10193:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10202:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10189:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10189:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10214:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10185:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10185:32:1"
															},
															"nodeType": "YulIf",
															"src": "10182:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "10311:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10326:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10340:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10330:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10355:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10390:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10401:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10386:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10386:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10410:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10365:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10365:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10355:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10438:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10453:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10467:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10457:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10483:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10518:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10529:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10514:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10514:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10538:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10493:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10493:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10483:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10566:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10581:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10595:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10585:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10611:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10643:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10654:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10639:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10639:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10663:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "10621:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10621:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "10611:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10126:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10137:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10149:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10157:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10165:6:1",
														"type": ""
													}
												],
												"src": "10075:613:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10775:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10785:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10829:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "10798:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10798:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10785:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IMigratorChef_$927_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10755:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10765:9:1",
														"type": ""
													}
												],
												"src": "10694:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10933:87:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10950:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11007:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IMigratorChef_$927_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10955:51:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10955:58:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10943:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10943:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10943:71:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10921:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10928:3:1",
														"type": ""
													}
												],
												"src": "10847:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11145:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11155:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11167:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11178:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11163:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11163:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11155:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11256:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11269:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11280:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11265:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11265:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11191:64:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11191:92:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11191:92:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11117:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11129:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11140:4:1",
														"type": ""
													}
												],
												"src": "11026:264:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11361:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11378:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11401:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11383:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11383:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11371:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11371:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11371:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11349:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11356:3:1",
														"type": ""
													}
												],
												"src": "11296:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11518:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11528:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11540:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11551:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11536:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11536:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11528:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11608:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11621:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11632:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11617:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11617:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11564:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11564:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11564:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11490:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11502:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11513:4:1",
														"type": ""
													}
												],
												"src": "11420:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11774:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11784:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11796:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11807:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11792:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11792:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11784:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11864:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11877:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11888:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11873:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11873:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11820:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11820:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11820:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11945:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11958:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11969:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11954:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11954:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11901:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11901:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11901:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11738:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11750:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11758:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11769:4:1",
														"type": ""
													}
												],
												"src": "11648:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12060:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12070:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12114:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "12083:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12083:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12070:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$286_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12040:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12050:9:1",
														"type": ""
													}
												],
												"src": "11986:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12211:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12228:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12278:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$286_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12233:44:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12233:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12221:64:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12221:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12199:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12206:3:1",
														"type": ""
													}
												],
												"src": "12132:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12409:138:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12419:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12431:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12442:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12427:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12427:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12419:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12513:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12526:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12537:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12522:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12522:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12455:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12455:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12455:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12381:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12393:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12404:4:1",
														"type": ""
													}
												],
												"src": "12297:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12619:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12665:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12667:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12667:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12667:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12640:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12649:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12636:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12636:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12661:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12632:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12632:32:1"
															},
															"nodeType": "YulIf",
															"src": "12629:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "12758:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12773:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12787:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12777:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12802:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12837:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12848:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12833:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12833:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12857:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12812:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12812:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12802:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12589:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12600:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12612:6:1",
														"type": ""
													}
												],
												"src": "12553:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12962:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12973:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12989:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12983:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12983:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12973:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12945:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12955:6:1",
														"type": ""
													}
												],
												"src": "12888:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13119:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13136:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13141:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13129:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13129:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13129:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13157:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13176:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13181:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13172:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13172:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13157:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13091:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13096:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13107:11:1",
														"type": ""
													}
												],
												"src": "13008:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13270:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13280:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "13288:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "13280:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13301:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13313:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13318:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13309:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "13301:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13257:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "13265:4:1",
														"type": ""
													}
												],
												"src": "13198:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13391:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13408:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13431:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13413:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13413:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13401:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13401:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13379:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13386:3:1",
														"type": ""
													}
												],
												"src": "13336:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13530:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13574:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13582:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13540:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13540:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13540:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13595:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13613:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13618:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13609:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13609:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "13595:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13503:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13511:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "13519:10:1",
														"type": ""
													}
												],
												"src": "13450:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13710:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13720:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13732:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13737:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13728:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13728:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "13720:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13697:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "13705:4:1",
														"type": ""
													}
												],
												"src": "13635:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13908:608:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13918:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13980:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13932:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13932:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13922:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13995:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14076:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14081:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14002:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14002:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13995:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14097:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14162:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14112:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14112:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "14101:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14177:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "14191:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "14181:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14267:224:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14281:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14308:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "14302:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14302:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "14285:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14328:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "14379:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "14394:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "14335:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14335:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14328:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14411:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14474:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "14421:52:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14421:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14411:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14229:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14232:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14226:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14226:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14240:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14242:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14251:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14254:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14247:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14247:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14242:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14211:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14213:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "14222:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "14217:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "14207:284:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14500:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14507:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14500:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13887:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13894:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13903:3:1",
														"type": ""
													}
												],
												"src": "13784:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14670:225:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14680:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14692:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14703:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14688:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14688:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14680:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14727:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14738:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14723:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14723:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14746:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14752:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14742:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14742:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14716:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14716:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14772:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14874:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14883:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14780:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14780:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14772:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14642:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14654:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14665:4:1",
														"type": ""
													}
												],
												"src": "14522:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14984:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14994:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15038:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "15007:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15007:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "14994:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_INFTMasterChef_$1071_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14964:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "14974:9:1",
														"type": ""
													}
												],
												"src": "14901:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15144:89:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15161:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15220:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_INFTMasterChef_$1071_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15166:53:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15166:60:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15154:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15154:73:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_INFTMasterChef_$1071_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15132:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15139:3:1",
														"type": ""
													}
												],
												"src": "15056:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15360:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15370:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15382:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15393:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15378:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15378:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15370:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15473:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15486:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15497:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15482:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15482:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_INFTMasterChef_$1071_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15406:66:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15406:94:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15406:94:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INFTMasterChef_$1071__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15332:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15344:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15355:4:1",
														"type": ""
													}
												],
												"src": "15239:268:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15541:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15558:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15561:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15551:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15551:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15551:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15655:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15658:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15648:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15648:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15679:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15682:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15672:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15672:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15672:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15513:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15795:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15812:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15817:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15805:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15805:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15805:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15833:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15852:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15857:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15848:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15848:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "15833:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15767:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15772:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15783:11:1",
														"type": ""
													}
												],
												"src": "15699:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15980:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16002:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16010:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15998:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15998:14:1"
																	},
																	{
																		"hexValue": "416d6f756e74206973207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16014:16:1",
																		"type": "",
																		"value": "Amount is zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15991:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15991:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15991:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15972:6:1",
														"type": ""
													}
												],
												"src": "15874:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16190:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16200:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16266:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16271:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16207:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16207:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16200:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16372:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																	"nodeType": "YulIdentifier",
																	"src": "16283:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16283:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16283:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16385:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16396:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16401:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16392:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16392:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16385:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16178:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16186:3:1",
														"type": ""
													}
												],
												"src": "16044:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16587:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16597:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16609:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16620:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16605:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16605:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16597:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16644:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16655:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16640:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16640:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16663:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16669:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16659:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16659:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16633:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16633:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16633:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16689:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16823:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16697:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16697:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16689:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16567:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16582:4:1",
														"type": ""
													}
												],
												"src": "16416:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16967:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16977:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16989:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17000:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16985:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16985:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16977:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17057:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17070:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17081:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17066:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17066:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17013:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17013:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17013:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17138:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17151:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17162:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17147:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17147:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17094:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17094:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17094:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16931:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16943:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16951:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16962:4:1",
														"type": ""
													}
												],
												"src": "16841:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17239:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17249:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17264:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17258:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17258:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17249:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17304:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "17280:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17280:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17280:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17217:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17225:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17233:5:1",
														"type": ""
													}
												],
												"src": "17179:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17396:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17442:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "17444:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17444:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17444:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17417:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17426:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17413:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17413:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17438:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17409:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17409:32:1"
															},
															"nodeType": "YulIf",
															"src": "17406:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "17535:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17550:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17564:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17554:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17579:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17622:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17633:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17618:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17618:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17642:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "17589:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17589:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17579:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17366:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17377:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17389:6:1",
														"type": ""
													}
												],
												"src": "17322:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17799:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17809:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17821:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17832:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17817:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17817:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17809:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17889:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17902:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17913:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17898:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17845:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17845:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17845:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17970:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17983:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17994:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17979:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17979:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17926:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17926:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17926:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17763:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17775:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17783:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17794:4:1",
														"type": ""
													}
												],
												"src": "17673:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18117:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18139:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18147:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18135:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18135:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18151:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18128:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18128:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18128:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18109:6:1",
														"type": ""
													}
												],
												"src": "18011:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18345:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18355:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18421:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18426:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18362:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18362:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18355:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18527:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "18438:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18438:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18438:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18540:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18551:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18556:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18547:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18547:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18540:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18333:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18341:3:1",
														"type": ""
													}
												],
												"src": "18199:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18742:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18752:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18764:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18775:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18760:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18760:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18752:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18799:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18810:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18795:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18795:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18818:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18824:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18814:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18814:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18788:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18788:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18788:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18844:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18978:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18852:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18852:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18844:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18722:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18737:4:1",
														"type": ""
													}
												],
												"src": "18571:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19059:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19069:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19084:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19078:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19078:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "19069:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19127:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19100:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19100:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19100:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19037:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19045:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19053:5:1",
														"type": ""
													}
												],
												"src": "18996:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19222:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19268:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19270:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19270:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19270:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19243:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19252:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19239:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19264:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19235:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19235:32:1"
															},
															"nodeType": "YulIf",
															"src": "19232:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "19361:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19376:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19390:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19380:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19405:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19451:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19462:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19447:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19447:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19471:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "19415:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19415:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19405:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19192:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19203:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19215:6:1",
														"type": ""
													}
												],
												"src": "19145:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19530:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19547:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19550:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19540:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19540:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19540:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19644:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19647:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19637:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19637:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19637:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19668:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19671:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19661:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19661:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19661:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "19502:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19731:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19741:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19768:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19750:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19750:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "19741:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19864:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19866:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19866:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19866:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19789:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19796:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "19786:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19786:77:1"
															},
															"nodeType": "YulIf",
															"src": "19783:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19895:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19906:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19913:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19902:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19902:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "19895:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19717:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "19727:3:1",
														"type": ""
													}
												],
												"src": "19688:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20033:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20055:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20063:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20051:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20051:14:1"
																	},
																	{
																		"hexValue": "596f7520617265206e6f74204f776e6572206f6620746f6b656e206964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20067:31:1",
																		"type": "",
																		"value": "You are not Owner of token id"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20044:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20044:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20044:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20025:6:1",
														"type": ""
													}
												],
												"src": "19927:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20258:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20268:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20334:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20339:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20275:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20275:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20268:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20440:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd",
																	"nodeType": "YulIdentifier",
																	"src": "20351:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20351:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20351:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20453:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20464:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20469:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20460:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20460:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20453:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20246:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20254:3:1",
														"type": ""
													}
												],
												"src": "20112:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20655:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20665:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20677:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20688:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20673:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20673:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20665:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20712:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20723:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20708:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20708:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20731:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20737:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20727:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20727:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20701:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20701:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20701:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20757:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20891:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20765:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20765:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20757:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20635:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20650:4:1",
														"type": ""
													}
												],
												"src": "20484:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21015:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21037:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21045:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21033:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21033:14:1"
																	},
																	{
																		"hexValue": "77697468647261773a206e6f7420676f6f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21049:20:1",
																		"type": "",
																		"value": "withdraw: not good"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21026:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21026:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21026:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21007:6:1",
														"type": ""
													}
												],
												"src": "20909:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21229:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21239:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21305:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21310:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21246:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21246:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21239:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21411:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																	"nodeType": "YulIdentifier",
																	"src": "21322:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21322:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21322:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21424:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21435:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21440:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21431:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21431:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21424:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21217:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21225:3:1",
														"type": ""
													}
												],
												"src": "21083:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21626:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21636:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21648:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21659:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21644:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21644:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21636:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21694:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21679:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21702:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21708:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21698:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21672:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21672:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21672:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21728:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21862:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21736:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21736:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21728:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21606:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21621:4:1",
														"type": ""
													}
												],
												"src": "21455:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22034:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22044:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22056:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22067:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22052:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22052:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22044:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22124:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22137:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22148:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22133:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22133:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22080:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22080:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22080:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22205:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22218:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22229:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22214:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22214:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22161:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22161:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22161:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "22287:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22300:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22311:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22296:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22296:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22243:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22243:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22243:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21990:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "22002:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22010:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22018:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22029:4:1",
														"type": ""
													}
												],
												"src": "21880:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22434:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22456:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22464:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22452:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22452:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22468:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22445:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22445:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22445:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22524:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22532:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22520:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22520:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22537:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22513:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22513:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22513:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22426:6:1",
														"type": ""
													}
												],
												"src": "22328:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22705:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22715:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22781:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22786:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22722:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22722:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22715:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22887:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "22798:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22798:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22798:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22900:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22911:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22916:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22907:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22907:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22900:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22693:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22701:3:1",
														"type": ""
													}
												],
												"src": "22559:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23102:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23112:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23124:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23135:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23120:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23120:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23112:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23159:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23170:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23155:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23155:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23178:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23184:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23174:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23174:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23148:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23148:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23148:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23204:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23338:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23212:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23212:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23204:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23082:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23097:4:1",
														"type": ""
													}
												],
												"src": "22931:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23404:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23414:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23437:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23419:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23419:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "23414:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23448:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23471:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23453:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23453:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "23448:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23646:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23648:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23648:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23648:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "23558:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "23551:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23551:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "23544:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23544:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "23566:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "23573:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "23641:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "23569:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23569:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "23563:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23563:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "23540:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23540:105:1"
															},
															"nodeType": "YulIf",
															"src": "23537:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23678:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23693:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23696:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "23689:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23689:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "23678:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "23387:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "23390:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "23396:7:1",
														"type": ""
													}
												],
												"src": "23356:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23738:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23755:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23758:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23748:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23748:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23748:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23852:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23855:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23845:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23845:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23876:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23879:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "23869:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23869:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23869:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "23710:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23938:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23948:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23971:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23953:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23953:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "23948:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23982:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24005:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23987:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23987:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "23982:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24029:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "24031:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24031:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24031:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24026:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24019:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24019:9:1"
															},
															"nodeType": "YulIf",
															"src": "24016:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24061:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24070:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24073:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "24066:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24066:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "24061:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "23927:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "23930:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "23936:1:1",
														"type": ""
													}
												],
												"src": "23896:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24193:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24215:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24223:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24211:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24211:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24227:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24204:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24204:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24204:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24283:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24291:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24279:15:1"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24296:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24272:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24272:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24185:6:1",
														"type": ""
													}
												],
												"src": "24087:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24459:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24469:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24535:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24540:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24476:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24476:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24469:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24641:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																	"nodeType": "YulIdentifier",
																	"src": "24552:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24552:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24552:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24654:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24665:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24670:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24661:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24661:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24654:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24447:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24455:3:1",
														"type": ""
													}
												],
												"src": "24313:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24856:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24866:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24878:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24889:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24874:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24874:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24866:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24913:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24924:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24909:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24909:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24932:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24938:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24928:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24928:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24902:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24902:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24958:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25092:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24966:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24966:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24958:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24836:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24851:4:1",
														"type": ""
													}
												],
												"src": "24685:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25154:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25164:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25187:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25169:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25169:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25164:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25198:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25221:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25203:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25203:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25198:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25361:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25363:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25363:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25363:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25282:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25289:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "25357:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25285:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25285:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25279:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25279:81:1"
															},
															"nodeType": "YulIf",
															"src": "25276:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25393:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25404:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25407:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25400:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "25393:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25141:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25144:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "25150:3:1",
														"type": ""
													}
												],
												"src": "25110:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25527:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25549:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25557:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25545:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25545:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25561:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25538:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25538:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25538:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25519:6:1",
														"type": ""
													}
												],
												"src": "25421:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25750:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25760:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25826:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25831:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25767:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25767:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25760:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25932:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nodeType": "YulIdentifier",
																	"src": "25843:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25843:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25843:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25945:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25956:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25961:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25952:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25952:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25945:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25738:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25746:3:1",
														"type": ""
													}
												],
												"src": "25604:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26147:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26157:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26169:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26180:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26165:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26165:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26157:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26204:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26215:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26200:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26200:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26223:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26229:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26219:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26193:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26193:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26249:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26383:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26257:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26257:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26249:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26127:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26142:4:1",
														"type": ""
													}
												],
												"src": "25976:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26460:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26471:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26487:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26481:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26481:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "26471:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26443:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26453:6:1",
														"type": ""
													}
												],
												"src": "26401:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26555:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26565:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "26574:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "26569:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26634:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "26659:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "26664:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "26655:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26655:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "26678:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "26683:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "26674:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "26674:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "26668:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26668:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "26648:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26648:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26648:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "26595:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26598:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "26592:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26592:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "26606:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "26608:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "26617:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26620:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "26613:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26613:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "26608:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "26588:3:1",
																"statements": []
															},
															"src": "26584:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26731:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "26781:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "26786:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "26777:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26777:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26795:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "26770:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26770:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26770:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "26712:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26715:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26709:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26709:13:1"
															},
															"nodeType": "YulIf",
															"src": "26706:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "26537:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "26542:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26547:6:1",
														"type": ""
													}
												],
												"src": "26506:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26911:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26921:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26968:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26935:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26935:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26925:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26983:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27049:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27054:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26990:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26990:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26983:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27096:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27103:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27092:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27110:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27115:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "27070:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27070:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27070:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27131:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27142:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27169:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "27147:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27147:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27138:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27138:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27131:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26892:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26899:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26907:3:1",
														"type": ""
													}
												],
												"src": "26819:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27307:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27317:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27329:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27340:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27325:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27325:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27317:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27364:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27375:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27360:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27360:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27383:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27389:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27379:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27379:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27353:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27353:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27353:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27409:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27481:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27490:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27417:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27417:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27409:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27279:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27291:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27302:4:1",
														"type": ""
													}
												],
												"src": "27189:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27553:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27563:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27586:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27568:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27568:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "27563:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27597:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27620:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27602:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27602:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "27597:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27644:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "27646:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27646:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27646:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27638:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27641:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "27635:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27635:8:1"
															},
															"nodeType": "YulIf",
															"src": "27632:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27676:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27688:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27691:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "27684:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27684:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "27676:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "27539:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "27542:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "27548:4:1",
														"type": ""
													}
												],
												"src": "27508:191:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$1048_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$1048_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$1048_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$1048_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC721_$1048_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_contract$_IERC721_$1048(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC721_$1048(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$1048(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC721_$1048(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC721_$1048(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC721_$1048t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC721_$1048(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IMigratorChef_$927(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IMigratorChef_$927(value) {\n        if iszero(eq(value, cleanup_t_contract$_IMigratorChef_$927(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IMigratorChef_$927(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IMigratorChef_$927(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IMigratorChef_$927(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IMigratorChef_$927(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IMigratorChef_$927_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IMigratorChef_$927_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function convert_t_contract$_IERC20_$286_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$286_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function convert_t_contract$_INFTMasterChef_$1071_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_INFTMasterChef_$1071_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_INFTMasterChef_$1071_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_INFTMasterChef_$1071__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_INFTMasterChef_$1071_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount is zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not Owner of token id\")\n\n    }\n\n    function abi_encode_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw: not good\")\n\n    }\n\n    function abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64482F79 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xCB3CBA55 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE2BBB158 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xE4D09896 EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xF395DB2C EQ PUSH2 0x54E JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xCB3CBA55 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xD0D41FE1 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0xD49E77CD EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0xD5545992 EQ PUSH2 0x4C8 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8AA28550 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x43F JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x64482F79 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x3B5 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x23CF3118 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x612EEE43 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x385 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x313 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x2080BAAB EQ PUSH2 0x2AB JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x1395D8C9 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x20E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x86C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x243B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x2570 JUMP JUMPDEST PUSH2 0x8E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x25C3 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x2641 JUMP JUMPDEST PUSH2 0xC98 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x266E JUMP JUMPDEST PUSH2 0xD58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31B PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x113A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x367 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x137A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x1400 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38D PUSH2 0x1486 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x26AE JUMP JUMPDEST PUSH2 0x14B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B3 PUSH2 0x15C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BD PUSH2 0x164D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x2722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DB PUSH2 0x1673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F9 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x274C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x429 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x266E JUMP JUMPDEST PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x459 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x25C3 JUMP JUMPDEST PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP3 SWAP2 SWAP1 PUSH2 0x2767 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x478 PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x27B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x27CC JUMP JUMPDEST PUSH2 0x172A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B2 PUSH2 0x17EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x274C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x25C3 JUMP JUMPDEST PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x28B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x512 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x266E JUMP JUMPDEST PUSH2 0x18C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51C PUSH2 0x1B21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x28FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x27CC JUMP JUMPDEST PUSH2 0x1B47 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x556 PUSH2 0x1C3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x5FC DUP4 PUSH2 0x113A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x646 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x638 PUSH5 0xE8D4A51000 PUSH2 0x62A DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x682 SWAP1 PUSH2 0x29A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70A SWAP3 SWAP2 SWAP1 PUSH2 0x29C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x729 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x849DF12C DUP3 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AB SWAP3 SWAP2 SWAP1 PUSH2 0x2A2C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x80F PUSH5 0xE8D4A51000 PUSH2 0x801 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 PUSH1 0x40 MLOAD PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8EE PUSH2 0x1D52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x90C PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x959 SWAP1 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x971 JUMPI PUSH2 0x970 PUSH2 0x1486 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD NUMBER GT PUSH2 0x984 JUMPI PUSH1 0xA SLOAD PUSH2 0x986 JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP PUSH2 0x99D DUP5 PUSH1 0x9 SLOAD PUSH2 0x1D5A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA8A JUMPI PUSH2 0xA89 PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0x274C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB97 SWAP2 SWAP1 PUSH2 0x2AD6 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xBAD JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xC48 JUMPI PUSH1 0x0 PUSH2 0xBC2 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x16A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC05 PUSH1 0x9 SLOAD PUSH2 0xBF7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xBE9 PUSH1 0x4 SLOAD DUP8 PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC43 PUSH2 0xC34 DUP5 PUSH2 0xC26 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x1D5A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xC8C DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0xC7E PUSH5 0xE8D4A51000 PUSH2 0xC70 DUP7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCA0 PUSH2 0x1D52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCBE PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP1 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD6E JUMPI PUSH2 0xD6D PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 DUP5 SUB PUSH2 0xE81 JUMPI PUSH2 0xDE4 DUP6 PUSH2 0x113A JUMP JUMPDEST PUSH2 0xE2C DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0xE1E PUSH5 0xE8D4A51000 PUSH2 0xE10 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xE42 JUMPI PUSH2 0xE41 CALLER DUP3 PUSH2 0x1DB8 JUMP JUMPDEST JUMPDEST PUSH2 0xE74 PUSH5 0xE8D4A51000 PUSH2 0xE66 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP5 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xED7 JUMPI DUP7 DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEAC JUMPI PUSH2 0xEAB PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0xEC4 JUMPI PUSH1 0x1 SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0xECF SWAP1 PUSH2 0x2B32 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE86 JUMP JUMPDEST POP PUSH1 0x1 DUP3 EQ PUSH2 0xF1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF12 SWAP1 PUSH2 0x2BC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0xF63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5A SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF6C DUP8 PUSH2 0x113A JUMP JUMPDEST PUSH2 0xFB4 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0xFA6 PUSH5 0xE8D4A51000 PUSH2 0xF98 DUP10 PUSH1 0x3 ADD SLOAD DUP10 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0xFCA JUMPI PUSH2 0xFC9 CALLER DUP5 PUSH2 0x1DB8 JUMP JUMPDEST JUMPDEST PUSH2 0xFE2 PUSH1 0x1 DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1D08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x101C PUSH5 0xE8D4A51000 PUSH2 0x100E DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x103A JUMPI PUSH2 0x1039 PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1125 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1150 JUMPI PUSH2 0x114F PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1171 JUMPI POP PUSH2 0x1377 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D0 SWAP2 SWAP1 PUSH2 0x274C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1211 SWAP2 SWAP1 PUSH2 0x2AD6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x122B JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1377 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123B DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x16A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x127E PUSH1 0x9 SLOAD PUSH2 0x1270 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1262 PUSH1 0x4 SLOAD DUP8 PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DD SWAP3 SWAP2 SWAP1 PUSH2 0x29C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1320 SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST POP PUSH2 0x1361 PUSH2 0x134E DUP5 PUSH2 0x1340 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x1D5A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1382 PUSH2 0x1D52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13A0 PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13ED SWAP1 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1408 PUSH2 0x1D52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1426 PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x147C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1473 SWAP1 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14B5 JUMPI PUSH2 0x14A4 DUP2 PUSH2 0x113A JUMP JUMPDEST DUP1 PUSH2 0x14AE SWAP1 PUSH2 0x2B32 JUMP JUMPDEST SWAP1 POP PUSH2 0x1493 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x14C1 PUSH2 0x1D52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14DF PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1535 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152C SWAP1 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1544 JUMPI PUSH2 0x1543 PUSH2 0x1486 JUMP JUMPDEST JUMPDEST PUSH2 0x1590 DUP3 PUSH2 0x1582 PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x1D08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D5A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x15AB JUMPI PUSH2 0x15AA PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x15CD PUSH2 0x1D52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15EB PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1641 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1638 SWAP1 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x164B PUSH1 0x0 PUSH2 0x1FAD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CB PUSH1 0x5 SLOAD PUSH2 0x16BD DUP6 DUP6 PUSH2 0x1D08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1732 PUSH2 0x1D52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1750 PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179D SWAP1 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x18B4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x18A0 JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x18D8 JUMPI PUSH2 0x18D7 PUSH2 0x2915 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1945 DUP5 PUSH2 0x113A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x19B4 JUMPI PUSH1 0x0 PUSH2 0x199C DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x198E PUSH5 0xE8D4A51000 PUSH2 0x1980 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x19B2 JUMPI PUSH2 0x19B1 CALLER DUP3 PUSH2 0x1DB8 JUMP JUMPDEST JUMPDEST POP JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A15 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1A5F PUSH1 0x1 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1D5A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1A99 PUSH5 0xE8D4A51000 PUSH2 0x1A8B DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x1C44 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1B13 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B4F PUSH2 0x1D52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B6D PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BBA SWAP1 PUSH2 0x2AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C29 SWAP1 PUSH2 0x2CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C3B DUP2 PUSH2 0x1FAD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SUB PUSH2 0x1C56 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x1C64 SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x1C73 SWAP2 SWAP1 PUSH2 0x2DA4 JUMP JUMPDEST EQ PUSH2 0x1CB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CAA SWAP1 PUSH2 0x2E47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D00 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D4A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x20D4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x1D69 SWAP2 SWAP1 PUSH2 0x2E67 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1DAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DA5 SWAP1 PUSH2 0x2F09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E15 SWAP2 SWAP1 PUSH2 0x274C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E32 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E56 SWAP2 SWAP1 PUSH2 0x2AD6 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F06 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EBD SWAP3 SWAP2 SWAP1 PUSH2 0x29C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EDC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F00 SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST POP PUSH2 0x1FA8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F63 SWAP3 SWAP2 SWAP1 PUSH2 0x29C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FA6 SWAP2 SWAP1 PUSH2 0x29FF JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x20B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20AF SWAP2 SWAP1 PUSH2 0x2FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x20C7 SWAP2 SWAP1 PUSH2 0x2DA4 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x211C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2113 SWAP2 SWAP1 PUSH2 0x2FA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x212B SWAP2 SWAP1 PUSH2 0x2FC2 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x214B DUP2 PUSH2 0x2138 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2166 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2189 DUP2 PUSH2 0x2138 JUMP JUMPDEST DUP2 EQ PUSH2 0x2194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21A6 DUP2 PUSH2 0x2180 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C2 JUMPI PUSH2 0x21C1 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21D0 DUP5 DUP3 DUP6 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2204 DUP3 PUSH2 0x21D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2214 DUP2 PUSH2 0x21F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x221F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2231 DUP2 PUSH2 0x220B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x228A DUP3 PUSH2 0x2241 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x22A9 JUMPI PUSH2 0x22A8 PUSH2 0x2252 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BC PUSH2 0x216C JUMP JUMPDEST SWAP1 POP PUSH2 0x22C8 DUP3 DUP3 PUSH2 0x2281 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x22E8 JUMPI PUSH2 0x22E7 PUSH2 0x2252 JUMP JUMPDEST JUMPDEST PUSH2 0x22F1 DUP3 PUSH2 0x2241 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2320 PUSH2 0x231B DUP5 PUSH2 0x22CD JUMP JUMPDEST PUSH2 0x22B2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x233C JUMPI PUSH2 0x233B PUSH2 0x223C JUMP JUMPDEST JUMPDEST PUSH2 0x2347 DUP5 DUP3 DUP6 PUSH2 0x22FE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2364 JUMPI PUSH2 0x2363 PUSH2 0x2237 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2374 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x230D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2397 JUMPI PUSH2 0x2396 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23A5 DUP8 DUP3 DUP9 ADD PUSH2 0x2222 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x23B6 DUP8 DUP3 DUP9 ADD PUSH2 0x2222 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x23C7 DUP8 DUP3 DUP9 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23E8 JUMPI PUSH2 0x23E7 PUSH2 0x217B JUMP JUMPDEST JUMPDEST PUSH2 0x23F4 DUP8 DUP3 DUP9 ADD PUSH2 0x234F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2435 DUP2 PUSH2 0x2400 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2450 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x242C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247B PUSH2 0x2476 PUSH2 0x2471 DUP5 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x2456 JUMP JUMPDEST PUSH2 0x21D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248D DUP3 PUSH2 0x2460 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x249F DUP3 PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24AF DUP2 PUSH2 0x2494 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x24CA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x24A6 JUMP JUMPDEST PUSH2 0x24D7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x24E4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x24F1 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2505 DUP3 PUSH2 0x21F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2515 DUP2 PUSH2 0x24FA JUMP JUMPDEST DUP2 EQ PUSH2 0x2520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2532 DUP2 PUSH2 0x250C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x254D DUP2 PUSH2 0x2538 JUMP JUMPDEST DUP2 EQ PUSH2 0x2558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x256A DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2589 JUMPI PUSH2 0x2588 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2597 DUP7 DUP3 DUP8 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x25A8 DUP7 DUP3 DUP8 ADD PUSH2 0x2523 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x25B9 DUP7 DUP3 DUP8 ADD PUSH2 0x255B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25DA JUMPI PUSH2 0x25D9 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25E8 DUP6 DUP3 DUP7 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25F9 DUP6 DUP3 DUP7 ADD PUSH2 0x2222 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260E DUP3 PUSH2 0x21F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x261E DUP2 PUSH2 0x2603 JUMP JUMPDEST DUP2 EQ PUSH2 0x2629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x263B DUP2 PUSH2 0x2615 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2657 JUMPI PUSH2 0x2656 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2665 DUP5 DUP3 DUP6 ADD PUSH2 0x262C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2685 JUMPI PUSH2 0x2684 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2693 DUP6 DUP3 DUP7 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26A4 DUP6 DUP3 DUP7 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26C7 JUMPI PUSH2 0x26C6 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26D5 DUP7 DUP3 DUP8 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x26E6 DUP7 DUP3 DUP8 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x26F7 DUP7 DUP3 DUP8 ADD PUSH2 0x255B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x270C DUP3 PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x271C DUP2 PUSH2 0x2701 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2737 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2713 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2746 DUP2 PUSH2 0x21F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2761 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x273D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x277C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x2789 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x279B DUP3 PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27AB DUP2 PUSH2 0x2790 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E2 JUMPI PUSH2 0x27E1 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27F0 DUP5 DUP3 DUP6 ADD PUSH2 0x2222 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x282E DUP2 PUSH2 0x2138 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2840 DUP4 DUP4 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2864 DUP3 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x286E DUP2 DUP6 PUSH2 0x2804 JUMP JUMPDEST SWAP4 POP PUSH2 0x2879 DUP4 PUSH2 0x2815 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28AA JUMPI DUP2 MLOAD PUSH2 0x2891 DUP9 DUP3 PUSH2 0x2834 JUMP JUMPDEST SWAP8 POP PUSH2 0x289C DUP4 PUSH2 0x284C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x287D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28D1 DUP2 DUP5 PUSH2 0x2859 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E4 DUP3 PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F4 DUP2 PUSH2 0x28D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x290F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206973207A65726F000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298B PUSH1 0xE DUP4 PUSH2 0x2944 JUMP JUMPDEST SWAP2 POP PUSH2 0x2996 DUP3 PUSH2 0x2955 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29BA DUP2 PUSH2 0x297E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x29D6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x273D JUMP JUMPDEST PUSH2 0x29E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x29F9 DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A15 JUMPI PUSH2 0x2A14 PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A23 DUP5 DUP3 DUP6 ADD PUSH2 0x29EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A41 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x2A4E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x273D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A8B PUSH1 0x20 DUP4 PUSH2 0x2944 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A96 DUP3 PUSH2 0x2A55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ABA DUP2 PUSH2 0x2A7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2AD0 DUP2 PUSH2 0x2180 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AEC JUMPI PUSH2 0x2AEB PUSH2 0x2176 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AFA DUP5 DUP3 DUP6 ADD PUSH2 0x2AC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B3D DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2B6F JUMPI PUSH2 0x2B6E PUSH2 0x2B03 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F74204F776E6572206F6620746F6B656E206964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB0 PUSH1 0x1D DUP4 PUSH2 0x2944 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BBB DUP3 PUSH2 0x2B7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BDF DUP2 PUSH2 0x2BA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C1C PUSH1 0x12 DUP4 PUSH2 0x2944 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C27 DUP3 PUSH2 0x2BE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C4B DUP2 PUSH2 0x2C0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C67 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x273D JUMP JUMPDEST PUSH2 0x2C74 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x273D JUMP JUMPDEST PUSH2 0x2C81 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2142 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE5 PUSH1 0x26 DUP4 PUSH2 0x2944 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CF0 DUP3 PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D14 DUP2 PUSH2 0x2CD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D26 DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D31 DUP4 PUSH2 0x2138 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2D6A JUMPI PUSH2 0x2D69 PUSH2 0x2B03 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2DAF DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DBA DUP4 PUSH2 0x2138 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2DCA JUMPI PUSH2 0x2DC9 PUSH2 0x2D75 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E31 PUSH1 0x21 DUP4 PUSH2 0x2944 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E3C DUP3 PUSH2 0x2DD5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E60 DUP2 PUSH2 0x2E24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E72 DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7D DUP4 PUSH2 0x2138 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2EB2 JUMPI PUSH2 0x2EB1 PUSH2 0x2B03 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EF3 PUSH1 0x1B DUP4 PUSH2 0x2944 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EFE DUP3 PUSH2 0x2EBD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F22 DUP2 PUSH2 0x2EE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F52 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F37 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2F61 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F72 DUP3 PUSH2 0x2F29 JUMP JUMPDEST PUSH2 0x2F7C DUP2 DUP6 PUSH2 0x2944 JUMP JUMPDEST SWAP4 POP PUSH2 0x2F8C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2F34 JUMP JUMPDEST PUSH2 0x2F95 DUP2 PUSH2 0x2241 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FBA DUP2 DUP5 PUSH2 0x2F67 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FCD DUP3 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD8 DUP4 PUSH2 0x2138 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2FEB JUMPI PUSH2 0x2FEA PUSH2 0x2B03 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD SLOAD ADD 0xF6 ADDMOD 0xDD OR PUSH28 0xDC09CE884F4616E27D8B8922B18DF9F1FCC7CDBA1205120664736F6C PUSH4 0x4300080F STOP CALLER ",
							"sourceMap": "28007:10488:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31225:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37323:570;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30922:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29839:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;30080:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31489:562;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;33108:753;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32527:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;35790:1525;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30170:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34200:729;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;31094:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;38387:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;33944:180;;;:::i;:::-;;32146:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20826:103;;;:::i;:::-;;29776:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29638:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20175:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32705:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29921:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;29447:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38284:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29492:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32857:188;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34998:739;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29380:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21084:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29559:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31225:95;31270:7;31297:8;:15;;;;31290:22;;31225:95;:::o;37323:570::-;37375:21;37399:8;37408:4;37399:14;;;;;;;;:::i;:::-;;;;;;;;;;;;37375:38;;37424:21;37448:8;:14;37457:4;37448:14;;;;;;;;;;;:26;37463:10;37448:26;;;;;;;;;;;;;;;37424:50;;37485:16;37496:4;37485:10;:16::i;:::-;37512:15;37530:67;37581:4;:15;;;37530:46;37571:4;37530:36;37546:4;:19;;;37530:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;:50;;:67;;;;:::i;:::-;37512:85;;37626:1;37616:7;:11;37608:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;37657:3;;;;;;;;;;;:11;;;37677:13;;;;;;;;;;;37693:7;37657:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;37712:13;;;;;;;;;;;:26;;;37739:7;37748:10;37712:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37788:46;37829:4;37788:36;37804:4;:19;;;37788:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;37770:4;:15;;:64;;;;37871:4;37859:10;37850:35;;;37877:7;37850:35;;;;;;:::i;:::-;;;;;;;;37364:529;;;37323:570;:::o;30922:164::-;31022:6;31048:30;;;31041:37;;30922:164;;;;;;:::o;29839:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;30080:34::-;;;;:::o;31489:562::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;31594:11:::1;31590:61;;;31622:17;:15;:17::i;:::-;31590:61;31661:23;31702:10;;31687:12;:25;:53;;31730:10;;31687:53;;;31715:12;31687:53;31661:79;;31769:32;31789:11;31769:15;;:19;;:32;;;;:::i;:::-;31751:15;:50;;;;31812:8;31840:192;;;;;;;;31878:9;31840:192;;;;;;31918:11;31840:192;;;;31965:15;31840:192;;;;32015:1;31840:192;;::::0;31812:231:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31579:472;31489:562:::0;;;:::o;33108:753::-;33180:7;33199:21;33223:8;33232:4;33223:14;;;;;;;;:::i;:::-;;;;;;;;;;;;33199:38;;33248:21;33272:8;:14;33281:4;33272:14;;;;;;;;;;;:21;33287:5;33272:21;;;;;;;;;;;;;;;33248:45;;33304:22;33329:4;:19;;;33304:44;;33359:17;33379:4;:13;;;;;;;;;;;;:23;;;33411:4;33379:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33359:58;;33447:4;:20;;;33432:12;:35;:53;;;;;33484:1;33471:9;:14;;33432:53;33428:346;;;33502:18;33523:49;33537:4;:20;;;33559:12;33523:13;:49::i;:::-;33502:70;;33587:17;33607:69;33660:15;;33607:48;33639:4;:15;;;33607:27;33622:11;;33607:10;:14;;:27;;;;:::i;:::-;:31;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;33587:89;;33708:54;33727:34;33751:9;33727:19;33741:4;33727:9;:13;;:19;;;;:::i;:::-;:23;;:34;;;;:::i;:::-;33708:14;:18;;:54;;;;:::i;:::-;33691:71;;33487:287;;33428:346;33791:62;33837:4;:15;;;33791:41;33827:4;33791:31;33807:14;33791:4;:11;;;:15;;:31;;;;:::i;:::-;:35;;:41;;;;:::i;:::-;:45;;:62;;;;:::i;:::-;33784:69;;;;;;33108:753;;;;:::o;32527:102::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;32612:9:::1;32601:8;;:20;;;;;;;;;;;;;;;;;;32527:102:::0;:::o;35790:1525::-;35858:21;35882:8;35891:4;35882:14;;;;;;;;:::i;:::-;;;;;;;;;;;;35858:38;;35907:21;35931:8;:14;35940:4;35931:14;;;;;;;;;;;:26;35946:10;35931:26;;;;;;;;;;;;;;;35907:50;;35968:15;36009:1;35997:8;:13;35994:1262;;36026:16;36037:4;36026:10;:16::i;:::-;36067:67;36118:4;:15;;;36067:46;36108:4;36067:36;36083:4;:19;;;36067:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;:50;;:67;;;;:::i;:::-;36057:77;;36162:1;36152:7;:11;36149:86;;;36183:36;36199:10;36211:7;36183:15;:36::i;:::-;36149:86;36267:46;36308:4;36267:36;36283:4;:19;;;36267:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;36249:4;:15;;:64;;;;35994:1262;;;36345:18;36382:20;36421:9;36417:205;36434:4;:13;;:20;;;;36432:1;:22;36417:205;;;36502:8;36482:4;:13;;36496:1;36482:16;;;;;;;;:::i;:::-;;;;;;;;;;:28;36479:128;;36547:1;36534:14;;36586:1;36571:16;;36479:128;36456:3;;;;;:::i;:::-;;;;36417:205;;;;36658:1;36644:10;:15;36636:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;36731:1;36716:4;:11;;;:16;;36708:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;36770:16;36781:4;36770:10;:16::i;:::-;36811:67;36862:4;:15;;;36811:46;36852:4;36811:36;36827:4;:19;;;36811:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;:50;;:67;;;;:::i;:::-;36801:77;;36906:1;36896:7;:11;36893:86;;;36927:36;36943:10;36955:7;36927:15;:36::i;:::-;36893:86;37007:18;37023:1;37007:4;:11;;;:15;;:18;;;;:::i;:::-;36993:4;:11;;:32;;;;37058:46;37099:4;37058:36;37074:4;:19;;;37058:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;37040:4;:15;;:64;;;;37126:4;:13;;37140:12;37126:27;;;;;;;;:::i;:::-;;;;;;;;;37119:34;;;37168:4;:13;;;;;;;;;;;;:30;;;37207:4;37222:10;37235:8;37168:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36330:926;;35994:1262;37292:4;37280:10;37271:36;;;37298:8;37271:36;;;;;;:::i;:::-;;;;;;;;35847:1468;;;35790:1525;;:::o;30170:25::-;;;;:::o;34200:729::-;34252:21;34276:8;34285:4;34276:14;;;;;;;;:::i;:::-;;;;;;;;;;;;34252:38;;34321:4;:20;;;34305:12;:36;34301:75;;34358:7;;;34301:75;34386:17;34406:4;:13;;;;;;;;;;;;:23;;;34438:4;34406:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34386:58;;34472:1;34459:9;:14;34455:103;;34513:12;34490:4;:20;;:35;;;;34540:7;;;;34455:103;34568:18;34589:49;34603:4;:20;;;34625:12;34589:13;:49::i;:::-;34568:70;;34649:17;34669:69;34722:15;;34669:48;34701:4;:15;;;34669:27;34684:11;;34669:10;:14;;:27;;;;:::i;:::-;:31;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;34649:89;;34749:3;;;;;;;;;;;:8;;;34766:4;34773:9;34749:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;34816:59;34840:34;34864:9;34840:19;34854:4;34840:9;:13;;:19;;;;:::i;:::-;:23;;:34;;;;:::i;:::-;34816:4;:19;;;:23;;:59;;;;:::i;:::-;34794:4;:19;;:81;;;;34909:12;34886:4;:20;;:35;;;;34241:688;;;;34200:729;;:::o;31094:123::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;31193:16:::1;31174;:35;;;;31094:123:::0;:::o;38387:105::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;38475:9:::1;38461:11;:23;;;;38387:105:::0;:::o;33944:180::-;33989:14;34006:8;:15;;;;33989:32;;34037:11;34032:85;34060:6;34054:3;:12;34032:85;;;34090:15;34101:3;34090:10;:15::i;:::-;34068:5;;;;:::i;:::-;;;34032:85;;;;33978:146;33944:180::o;32146:305::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;32245:11:::1;32241:61;;;32273:17;:15;:17::i;:::-;32241:61;32330:63;32381:11;32330:46;32350:8;32359:4;32350:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;32330:15;;:19;;:46;;;;:::i;:::-;:50;;:63;;;;:::i;:::-;32312:15;:81;;;;32432:11;32404:8;32413:4;32404:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;:39;;;;32146:305:::0;;;:::o;20826:103::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;20891:30:::1;20918:1;20891:18;:30::i;:::-;20826:103::o:0;29776:29::-;;;;;;;;;;;;;:::o;29638:35::-;;;;:::o;20175:87::-;20221:7;20248:6;;;;;;;;;;;20241:13;;20175:87;:::o;32705:144::-;32777:7;32805:36;32824:16;;32805:14;32813:5;32805:3;:7;;:14;;;;:::i;:::-;:18;;:36;;;;:::i;:::-;32798:43;;32705:144;;;;:::o;29921:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;29447:17::-;;;;;;;;;;;;;:::o;38284:95::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;38363:8:::1;38353:7;;:18;;;;;;;;;;;;;;;;;;38284:95:::0;:::o;29492:22::-;;;;;;;;;;;;;:::o;32857:188::-;32932:16;32961:21;32985:8;:14;32994:4;32985:14;;;;;;;;;;;:21;33000:5;32985:21;;;;;;;;;;;;;;;32961:45;;33024:4;:13;;33017:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32857:188;;;;:::o;34998:739::-;35065:21;35089:8;35098:4;35089:14;;;;;;;;:::i;:::-;;;;;;;;;;;;35065:38;;35114:21;35138:8;:14;35147:4;35138:14;;;;;;;;;;;:26;35153:10;35138:26;;;;;;;;;;;;;;;35114:50;;35175:16;35186:4;35175:10;:16::i;:::-;35220:1;35206:4;:11;;;:15;35202:233;;;35238:15;35256:67;35307:4;:15;;;35256:46;35297:4;35256:36;35272:4;:19;;;35256:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;:50;;:67;;;;:::i;:::-;35238:85;;35351:1;35341:7;:11;35338:86;;;35372:36;35388:10;35400:7;35372:15;:36::i;:::-;35338:86;35223:212;35202:233;35445:4;:13;;;;;;;;;;;;:30;;;35484:10;35505:4;35512:8;35445:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35546:18;35562:1;35546:4;:11;;;:15;;:18;;;;:::i;:::-;35532:4;:11;;:32;;;;35593:46;35634:4;35593:36;35609:4;:19;;;35593:4;:11;;;:15;;:36;;;;:::i;:::-;:40;;:46;;;;:::i;:::-;35575:4;:15;;:64;;;;35650:4;:13;;35669:8;35650:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35714:4;35702:10;35694:35;;;35720:8;35694:35;;;;;;:::i;:::-;;;;;;;;35054:683;;34998:739;;:::o;29380:35::-;;;;;;;;;;;;;:::o;21084:201::-;20406:12;:10;:12::i;:::-;20395:23;;:7;:5;:7::i;:::-;:23;;;20387:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;21193:1:::1;21173:22;;:8;:22;;::::0;21165:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;21249:28;21268:8;21249:18;:28::i;:::-;21084:201:::0;:::o;29559:26::-;;;;:::o;1827:471::-;1885:7;2135:1;2130;:6;2126:47;;2160:1;2153:8;;;;2126:47;2185:9;2201:1;2197;:5;;;;:::i;:::-;2185:17;;2230:1;2225;2221;:5;;;;:::i;:::-;:10;2213:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2289:1;2282:8;;;1827:471;;;;;:::o;2766:132::-;2824:7;2851:39;2855:1;2858;2851:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;2844:46;;2766:132;;;;:::o;911:136::-;969:7;996:43;1000:1;1003;996:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;989:50;;911:136;;;;:::o;19549:98::-;19602:7;19629:10;19622:17;;19549:98;:::o;455:181::-;513:7;533:9;549:1;545;:5;;;;:::i;:::-;533:17;;574:1;569;:6;;561:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;627:1;620:8;;;455:181;;;;:::o;38005:271::-;38080:14;38097:3;;;;;;;;;;;:13;;;38119:4;38097:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;38080:45;;38150:6;38140:7;:16;38136:133;;;38173:3;;;;;;;;;;;:12;;;38186:3;38191:6;38173:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;38136:133;;;38231:3;;;;;;;;;;;:12;;;38244:3;38249:7;38231:26;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;38136:133;38069:207;38005:271;;:::o;21445:191::-;21519:16;21538:6;;;;;;;;;;;21519:25;;21564:8;21555:6;;:17;;;;;;;;;;;;;;;;;;21619:8;21588:40;;21609:8;21588:40;;;;;;;;;;;;21508:128;21445:191;:::o;3428:345::-;3514:7;3613:1;3609;:5;3616:12;3601:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3640:9;3656:1;3652;:5;;;;:::i;:::-;3640:17;;3764:1;3757:8;;;3428:345;;;;;:::o;1384:192::-;1470:7;1503:1;1498;:6;;1506:12;1490:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1530:9;1546:1;1542;:5;;;;:::i;:::-;1530:17;;1567:1;1560:8;;;1384:192;;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:117::-;1993:1;1990;1983:12;2007:117;2116:1;2113;2106:12;2130:102;2171:6;2222:2;2218:7;2213:2;2206:5;2202:14;2198:28;2188:38;;2130:102;;;:::o;2238:180::-;2286:77;2283:1;2276:88;2383:4;2380:1;2373:15;2407:4;2404:1;2397:15;2424:281;2507:27;2529:4;2507:27;:::i;:::-;2499:6;2495:40;2637:6;2625:10;2622:22;2601:18;2589:10;2586:34;2583:62;2580:88;;;2648:18;;:::i;:::-;2580:88;2688:10;2684:2;2677:22;2467:238;2424:281;;:::o;2711:129::-;2745:6;2772:20;;:::i;:::-;2762:30;;2801:33;2829:4;2821:6;2801:33;:::i;:::-;2711:129;;;:::o;2846:307::-;2907:4;2997:18;2989:6;2986:30;2983:56;;;3019:18;;:::i;:::-;2983:56;3057:29;3079:6;3057:29;:::i;:::-;3049:37;;3141:4;3135;3131:15;3123:23;;2846:307;;;:::o;3159:154::-;3243:6;3238:3;3233;3220:30;3305:1;3296:6;3291:3;3287:16;3280:27;3159:154;;;:::o;3319:410::-;3396:5;3421:65;3437:48;3478:6;3437:48;:::i;:::-;3421:65;:::i;:::-;3412:74;;3509:6;3502:5;3495:21;3547:4;3540:5;3536:16;3585:3;3576:6;3571:3;3567:16;3564:25;3561:112;;;3592:79;;:::i;:::-;3561:112;3682:41;3716:6;3711:3;3706;3682:41;:::i;:::-;3402:327;3319:410;;;;;:::o;3748:338::-;3803:5;3852:3;3845:4;3837:6;3833:17;3829:27;3819:122;;3860:79;;:::i;:::-;3819:122;3977:6;3964:20;4002:78;4076:3;4068:6;4061:4;4053:6;4049:17;4002:78;:::i;:::-;3993:87;;3809:277;3748:338;;;;:::o;4092:943::-;4187:6;4195;4203;4211;4260:3;4248:9;4239:7;4235:23;4231:33;4228:120;;;4267:79;;:::i;:::-;4228:120;4387:1;4412:53;4457:7;4448:6;4437:9;4433:22;4412:53;:::i;:::-;4402:63;;4358:117;4514:2;4540:53;4585:7;4576:6;4565:9;4561:22;4540:53;:::i;:::-;4530:63;;4485:118;4642:2;4668:53;4713:7;4704:6;4693:9;4689:22;4668:53;:::i;:::-;4658:63;;4613:118;4798:2;4787:9;4783:18;4770:32;4829:18;4821:6;4818:30;4815:117;;;4851:79;;:::i;:::-;4815:117;4956:62;5010:7;5001:6;4990:9;4986:22;4956:62;:::i;:::-;4946:72;;4741:287;4092:943;;;;;;;:::o;5041:149::-;5077:7;5117:66;5110:5;5106:78;5095:89;;5041:149;;;:::o;5196:115::-;5281:23;5298:5;5281:23;:::i;:::-;5276:3;5269:36;5196:115;;:::o;5317:218::-;5408:4;5446:2;5435:9;5431:18;5423:26;;5459:69;5525:1;5514:9;5510:17;5501:6;5459:69;:::i;:::-;5317:218;;;;:::o;5541:60::-;5569:3;5590:5;5583:12;;5541:60;;;:::o;5607:142::-;5657:9;5690:53;5708:34;5717:24;5735:5;5717:24;:::i;:::-;5708:34;:::i;:::-;5690:53;:::i;:::-;5677:66;;5607:142;;;:::o;5755:126::-;5805:9;5838:37;5869:5;5838:37;:::i;:::-;5825:50;;5755:126;;;:::o;5887:142::-;5953:9;5986:37;6017:5;5986:37;:::i;:::-;5973:50;;5887:142;;;:::o;6035:163::-;6138:53;6185:5;6138:53;:::i;:::-;6133:3;6126:66;6035:163;;:::o;6204:585::-;6397:4;6435:3;6424:9;6420:19;6412:27;;6449:87;6533:1;6522:9;6518:17;6509:6;6449:87;:::i;:::-;6546:72;6614:2;6603:9;6599:18;6590:6;6546:72;:::i;:::-;6628;6696:2;6685:9;6681:18;6672:6;6628:72;:::i;:::-;6710;6778:2;6767:9;6763:18;6754:6;6710:72;:::i;:::-;6204:585;;;;;;;:::o;6795:112::-;6848:7;6877:24;6895:5;6877:24;:::i;:::-;6866:35;;6795:112;;;:::o;6913:154::-;7002:40;7036:5;7002:40;:::i;:::-;6995:5;6992:51;6982:79;;7057:1;7054;7047:12;6982:79;6913:154;:::o;7073:171::-;7135:5;7173:6;7160:20;7151:29;;7189:49;7232:5;7189:49;:::i;:::-;7073:171;;;;:::o;7250:90::-;7284:7;7327:5;7320:13;7313:21;7302:32;;7250:90;;;:::o;7346:116::-;7416:21;7431:5;7416:21;:::i;:::-;7409:5;7406:32;7396:60;;7452:1;7449;7442:12;7396:60;7346:116;:::o;7468:133::-;7511:5;7549:6;7536:20;7527:29;;7565:30;7589:5;7565:30;:::i;:::-;7468:133;;;;:::o;7607:645::-;7697:6;7705;7713;7762:2;7750:9;7741:7;7737:23;7733:32;7730:119;;;7768:79;;:::i;:::-;7730:119;7888:1;7913:53;7958:7;7949:6;7938:9;7934:22;7913:53;:::i;:::-;7903:63;;7859:117;8015:2;8041:69;8102:7;8093:6;8082:9;8078:22;8041:69;:::i;:::-;8031:79;;7986:134;8159:2;8185:50;8227:7;8218:6;8207:9;8203:22;8185:50;:::i;:::-;8175:60;;8130:115;7607:645;;;;;:::o;8258:474::-;8326:6;8334;8383:2;8371:9;8362:7;8358:23;8354:32;8351:119;;;8389:79;;:::i;:::-;8351:119;8509:1;8534:53;8579:7;8570:6;8559:9;8555:22;8534:53;:::i;:::-;8524:63;;8480:117;8636:2;8662:53;8707:7;8698:6;8687:9;8683:22;8662:53;:::i;:::-;8652:63;;8607:118;8258:474;;;;;:::o;8738:117::-;8796:7;8825:24;8843:5;8825:24;:::i;:::-;8814:35;;8738:117;;;:::o;8861:164::-;8955:45;8994:5;8955:45;:::i;:::-;8948:5;8945:56;8935:84;;9015:1;9012;9005:12;8935:84;8861:164;:::o;9031:181::-;9098:5;9136:6;9123:20;9114:29;;9152:54;9200:5;9152:54;:::i;:::-;9031:181;;;;:::o;9218:371::-;9298:6;9347:2;9335:9;9326:7;9322:23;9318:32;9315:119;;;9353:79;;:::i;:::-;9315:119;9473:1;9498:74;9564:7;9555:6;9544:9;9540:22;9498:74;:::i;:::-;9488:84;;9444:138;9218:371;;;;:::o;9595:474::-;9663:6;9671;9720:2;9708:9;9699:7;9695:23;9691:32;9688:119;;;9726:79;;:::i;:::-;9688:119;9846:1;9871:53;9916:7;9907:6;9896:9;9892:22;9871:53;:::i;:::-;9861:63;;9817:117;9973:2;9999:53;10044:7;10035:6;10024:9;10020:22;9999:53;:::i;:::-;9989:63;;9944:118;9595:474;;;;;:::o;10075:613::-;10149:6;10157;10165;10214:2;10202:9;10193:7;10189:23;10185:32;10182:119;;;10220:79;;:::i;:::-;10182:119;10340:1;10365:53;10410:7;10401:6;10390:9;10386:22;10365:53;:::i;:::-;10355:63;;10311:117;10467:2;10493:53;10538:7;10529:6;10518:9;10514:22;10493:53;:::i;:::-;10483:63;;10438:118;10595:2;10621:50;10663:7;10654:6;10643:9;10639:22;10621:50;:::i;:::-;10611:60;;10566:115;10075:613;;;;;:::o;10694:147::-;10765:9;10798:37;10829:5;10798:37;:::i;:::-;10785:50;;10694:147;;;:::o;10847:173::-;10955:58;11007:5;10955:58;:::i;:::-;10950:3;10943:71;10847:173;;:::o;11026:264::-;11140:4;11178:2;11167:9;11163:18;11155:26;;11191:92;11280:1;11269:9;11265:17;11256:6;11191:92;:::i;:::-;11026:264;;;;:::o;11296:118::-;11383:24;11401:5;11383:24;:::i;:::-;11378:3;11371:37;11296:118;;:::o;11420:222::-;11513:4;11551:2;11540:9;11536:18;11528:26;;11564:71;11632:1;11621:9;11617:17;11608:6;11564:71;:::i;:::-;11420:222;;;;:::o;11648:332::-;11769:4;11807:2;11796:9;11792:18;11784:26;;11820:71;11888:1;11877:9;11873:17;11864:6;11820:71;:::i;:::-;11901:72;11969:2;11958:9;11954:18;11945:6;11901:72;:::i;:::-;11648:332;;;;;:::o;11986:140::-;12050:9;12083:37;12114:5;12083:37;:::i;:::-;12070:50;;11986:140;;;:::o;12132:159::-;12233:51;12278:5;12233:51;:::i;:::-;12228:3;12221:64;12132:159;;:::o;12297:250::-;12404:4;12442:2;12431:9;12427:18;12419:26;;12455:85;12537:1;12526:9;12522:17;12513:6;12455:85;:::i;:::-;12297:250;;;;:::o;12553:329::-;12612:6;12661:2;12649:9;12640:7;12636:23;12632:32;12629:119;;;12667:79;;:::i;:::-;12629:119;12787:1;12812:53;12857:7;12848:6;12837:9;12833:22;12812:53;:::i;:::-;12802:63;;12758:117;12553:329;;;;:::o;12888:114::-;12955:6;12989:5;12983:12;12973:22;;12888:114;;;:::o;13008:184::-;13107:11;13141:6;13136:3;13129:19;13181:4;13176:3;13172:14;13157:29;;13008:184;;;;:::o;13198:132::-;13265:4;13288:3;13280:11;;13318:4;13313:3;13309:14;13301:22;;13198:132;;;:::o;13336:108::-;13413:24;13431:5;13413:24;:::i;:::-;13408:3;13401:37;13336:108;;:::o;13450:179::-;13519:10;13540:46;13582:3;13574:6;13540:46;:::i;:::-;13618:4;13613:3;13609:14;13595:28;;13450:179;;;;:::o;13635:113::-;13705:4;13737;13732:3;13728:14;13720:22;;13635:113;;;:::o;13784:732::-;13903:3;13932:54;13980:5;13932:54;:::i;:::-;14002:86;14081:6;14076:3;14002:86;:::i;:::-;13995:93;;14112:56;14162:5;14112:56;:::i;:::-;14191:7;14222:1;14207:284;14232:6;14229:1;14226:13;14207:284;;;14308:6;14302:13;14335:63;14394:3;14379:13;14335:63;:::i;:::-;14328:70;;14421:60;14474:6;14421:60;:::i;:::-;14411:70;;14267:224;14254:1;14251;14247:9;14242:14;;14207:284;;;14211:14;14507:3;14500:10;;13908:608;;;13784:732;;;;:::o;14522:373::-;14665:4;14703:2;14692:9;14688:18;14680:26;;14752:9;14746:4;14742:20;14738:1;14727:9;14723:17;14716:47;14780:108;14883:4;14874:6;14780:108;:::i;:::-;14772:116;;14522:373;;;;:::o;14901:149::-;14974:9;15007:37;15038:5;15007:37;:::i;:::-;14994:50;;14901:149;;;:::o;15056:177::-;15166:60;15220:5;15166:60;:::i;:::-;15161:3;15154:73;15056:177;;:::o;15239:268::-;15355:4;15393:2;15382:9;15378:18;15370:26;;15406:94;15497:1;15486:9;15482:17;15473:6;15406:94;:::i;:::-;15239:268;;;;:::o;15513:180::-;15561:77;15558:1;15551:88;15658:4;15655:1;15648:15;15682:4;15679:1;15672:15;15699:169;15783:11;15817:6;15812:3;15805:19;15857:4;15852:3;15848:14;15833:29;;15699:169;;;;:::o;15874:164::-;16014:16;16010:1;16002:6;15998:14;15991:40;15874:164;:::o;16044:366::-;16186:3;16207:67;16271:2;16266:3;16207:67;:::i;:::-;16200:74;;16283:93;16372:3;16283:93;:::i;:::-;16401:2;16396:3;16392:12;16385:19;;16044:366;;;:::o;16416:419::-;16582:4;16620:2;16609:9;16605:18;16597:26;;16669:9;16663:4;16659:20;16655:1;16644:9;16640:17;16633:47;16697:131;16823:4;16697:131;:::i;:::-;16689:139;;16416:419;;;:::o;16841:332::-;16962:4;17000:2;16989:9;16985:18;16977:26;;17013:71;17081:1;17070:9;17066:17;17057:6;17013:71;:::i;:::-;17094:72;17162:2;17151:9;17147:18;17138:6;17094:72;:::i;:::-;16841:332;;;;;:::o;17179:137::-;17233:5;17264:6;17258:13;17249:22;;17280:30;17304:5;17280:30;:::i;:::-;17179:137;;;;:::o;17322:345::-;17389:6;17438:2;17426:9;17417:7;17413:23;17409:32;17406:119;;;17444:79;;:::i;:::-;17406:119;17564:1;17589:61;17642:7;17633:6;17622:9;17618:22;17589:61;:::i;:::-;17579:71;;17535:125;17322:345;;;;:::o;17673:332::-;17794:4;17832:2;17821:9;17817:18;17809:26;;17845:71;17913:1;17902:9;17898:17;17889:6;17845:71;:::i;:::-;17926:72;17994:2;17983:9;17979:18;17970:6;17926:72;:::i;:::-;17673:332;;;;;:::o;18011:182::-;18151:34;18147:1;18139:6;18135:14;18128:58;18011:182;:::o;18199:366::-;18341:3;18362:67;18426:2;18421:3;18362:67;:::i;:::-;18355:74;;18438:93;18527:3;18438:93;:::i;:::-;18556:2;18551:3;18547:12;18540:19;;18199:366;;;:::o;18571:419::-;18737:4;18775:2;18764:9;18760:18;18752:26;;18824:9;18818:4;18814:20;18810:1;18799:9;18795:17;18788:47;18852:131;18978:4;18852:131;:::i;:::-;18844:139;;18571:419;;;:::o;18996:143::-;19053:5;19084:6;19078:13;19069:22;;19100:33;19127:5;19100:33;:::i;:::-;18996:143;;;;:::o;19145:351::-;19215:6;19264:2;19252:9;19243:7;19239:23;19235:32;19232:119;;;19270:79;;:::i;:::-;19232:119;19390:1;19415:64;19471:7;19462:6;19451:9;19447:22;19415:64;:::i;:::-;19405:74;;19361:128;19145:351;;;;:::o;19502:180::-;19550:77;19547:1;19540:88;19647:4;19644:1;19637:15;19671:4;19668:1;19661:15;19688:233;19727:3;19750:24;19768:5;19750:24;:::i;:::-;19741:33;;19796:66;19789:5;19786:77;19783:103;;19866:18;;:::i;:::-;19783:103;19913:1;19906:5;19902:13;19895:20;;19688:233;;;:::o;19927:179::-;20067:31;20063:1;20055:6;20051:14;20044:55;19927:179;:::o;20112:366::-;20254:3;20275:67;20339:2;20334:3;20275:67;:::i;:::-;20268:74;;20351:93;20440:3;20351:93;:::i;:::-;20469:2;20464:3;20460:12;20453:19;;20112:366;;;:::o;20484:419::-;20650:4;20688:2;20677:9;20673:18;20665:26;;20737:9;20731:4;20727:20;20723:1;20712:9;20708:17;20701:47;20765:131;20891:4;20765:131;:::i;:::-;20757:139;;20484:419;;;:::o;20909:168::-;21049:20;21045:1;21037:6;21033:14;21026:44;20909:168;:::o;21083:366::-;21225:3;21246:67;21310:2;21305:3;21246:67;:::i;:::-;21239:74;;21322:93;21411:3;21322:93;:::i;:::-;21440:2;21435:3;21431:12;21424:19;;21083:366;;;:::o;21455:419::-;21621:4;21659:2;21648:9;21644:18;21636:26;;21708:9;21702:4;21698:20;21694:1;21683:9;21679:17;21672:47;21736:131;21862:4;21736:131;:::i;:::-;21728:139;;21455:419;;;:::o;21880:442::-;22029:4;22067:2;22056:9;22052:18;22044:26;;22080:71;22148:1;22137:9;22133:17;22124:6;22080:71;:::i;:::-;22161:72;22229:2;22218:9;22214:18;22205:6;22161:72;:::i;:::-;22243;22311:2;22300:9;22296:18;22287:6;22243:72;:::i;:::-;21880:442;;;;;;:::o;22328:225::-;22468:34;22464:1;22456:6;22452:14;22445:58;22537:8;22532:2;22524:6;22520:15;22513:33;22328:225;:::o;22559:366::-;22701:3;22722:67;22786:2;22781:3;22722:67;:::i;:::-;22715:74;;22798:93;22887:3;22798:93;:::i;:::-;22916:2;22911:3;22907:12;22900:19;;22559:366;;;:::o;22931:419::-;23097:4;23135:2;23124:9;23120:18;23112:26;;23184:9;23178:4;23174:20;23170:1;23159:9;23155:17;23148:47;23212:131;23338:4;23212:131;:::i;:::-;23204:139;;22931:419;;;:::o;23356:348::-;23396:7;23419:20;23437:1;23419:20;:::i;:::-;23414:25;;23453:20;23471:1;23453:20;:::i;:::-;23448:25;;23641:1;23573:66;23569:74;23566:1;23563:81;23558:1;23551:9;23544:17;23540:105;23537:131;;;23648:18;;:::i;:::-;23537:131;23696:1;23693;23689:9;23678:20;;23356:348;;;;:::o;23710:180::-;23758:77;23755:1;23748:88;23855:4;23852:1;23845:15;23879:4;23876:1;23869:15;23896:185;23936:1;23953:20;23971:1;23953:20;:::i;:::-;23948:25;;23987:20;24005:1;23987:20;:::i;:::-;23982:25;;24026:1;24016:35;;24031:18;;:::i;:::-;24016:35;24073:1;24070;24066:9;24061:14;;23896:185;;;;:::o;24087:220::-;24227:34;24223:1;24215:6;24211:14;24204:58;24296:3;24291:2;24283:6;24279:15;24272:28;24087:220;:::o;24313:366::-;24455:3;24476:67;24540:2;24535:3;24476:67;:::i;:::-;24469:74;;24552:93;24641:3;24552:93;:::i;:::-;24670:2;24665:3;24661:12;24654:19;;24313:366;;;:::o;24685:419::-;24851:4;24889:2;24878:9;24874:18;24866:26;;24938:9;24932:4;24928:20;24924:1;24913:9;24909:17;24902:47;24966:131;25092:4;24966:131;:::i;:::-;24958:139;;24685:419;;;:::o;25110:305::-;25150:3;25169:20;25187:1;25169:20;:::i;:::-;25164:25;;25203:20;25221:1;25203:20;:::i;:::-;25198:25;;25357:1;25289:66;25285:74;25282:1;25279:81;25276:107;;;25363:18;;:::i;:::-;25276:107;25407:1;25404;25400:9;25393:16;;25110:305;;;;:::o;25421:177::-;25561:29;25557:1;25549:6;25545:14;25538:53;25421:177;:::o;25604:366::-;25746:3;25767:67;25831:2;25826:3;25767:67;:::i;:::-;25760:74;;25843:93;25932:3;25843:93;:::i;:::-;25961:2;25956:3;25952:12;25945:19;;25604:366;;;:::o;25976:419::-;26142:4;26180:2;26169:9;26165:18;26157:26;;26229:9;26223:4;26219:20;26215:1;26204:9;26200:17;26193:47;26257:131;26383:4;26257:131;:::i;:::-;26249:139;;25976:419;;;:::o;26401:99::-;26453:6;26487:5;26481:12;26471:22;;26401:99;;;:::o;26506:307::-;26574:1;26584:113;26598:6;26595:1;26592:13;26584:113;;;26683:1;26678:3;26674:11;26668:18;26664:1;26659:3;26655:11;26648:39;26620:2;26617:1;26613:10;26608:15;;26584:113;;;26715:6;26712:1;26709:13;26706:101;;;26795:1;26786:6;26781:3;26777:16;26770:27;26706:101;26555:258;26506:307;;;:::o;26819:364::-;26907:3;26935:39;26968:5;26935:39;:::i;:::-;26990:71;27054:6;27049:3;26990:71;:::i;:::-;26983:78;;27070:52;27115:6;27110:3;27103:4;27096:5;27092:16;27070:52;:::i;:::-;27147:29;27169:6;27147:29;:::i;:::-;27142:3;27138:39;27131:46;;26911:272;26819:364;;;;:::o;27189:313::-;27302:4;27340:2;27329:9;27325:18;27317:26;;27389:9;27383:4;27379:20;27375:1;27364:9;27360:17;27353:47;27417:78;27490:4;27481:6;27417:78;:::i;:::-;27409:86;;27189:313;;;;:::o;27508:191::-;27548:4;27568:20;27586:1;27568:20;:::i;:::-;27563:25;;27602:20;27620:1;27602:20;:::i;:::-;27597:25;;27641:1;27638;27635:8;27632:34;;;27646:18;;:::i;:::-;27632:34;27691:1;27688;27684:9;27676:17;;27508:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2466400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BONUS_MULTIPLIER()": "2474",
								"DDT()": "infinite",
								"DDTPerBlock()": "2539",
								"NFTMasterChef()": "infinite",
								"add(uint256,address,bool)": "infinite",
								"compundDDT(uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"devaddr()": "2603",
								"getMultiplier(uint256,uint256)": "infinite",
								"getUserTokenIds(uint256,address)": "infinite",
								"massUpdatePools()": "infinite",
								"migrator()": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2589",
								"pendingDDT(uint256,address)": "infinite",
								"poolInfo(uint256)": "infinite",
								"poolLength()": "2492",
								"renounceOwnership()": "30442",
								"set(uint256,uint256,bool)": "infinite",
								"setDevAddress(address)": "27029",
								"setMigrator(address)": "27051",
								"startBlock()": "2519",
								"totalAllocPoint()": "2497",
								"transferOwnership(address)": "30808",
								"updateDDTPerBlock(uint256)": "24849",
								"updateMultiplier(uint256)": "24827",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"safeDDTTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28007,
									"end": 38495,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29672,
									"end": 29673,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29638,
									"end": 29673,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 29638,
									"end": 29673,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30113,
									"end": 30114,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30080,
									"end": 30114,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 30080,
									"end": 30114,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30488,
									"end": 30828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20054,
									"end": 20086,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20073,
									"end": 20085,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20073,
									"end": 20083,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20073,
									"end": 20083,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20073,
									"end": 20083,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 20073,
									"end": 20085,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20073,
									"end": 20085,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 20073,
									"end": 20085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20073,
									"end": 20085,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20073,
									"end": 20085,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20054,
									"end": 20072,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 20054,
									"end": 20072,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20054,
									"end": 20072,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 20054,
									"end": 20086,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20054,
									"end": 20086,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 20054,
									"end": 20086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20054,
									"end": 20086,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20054,
									"end": 20086,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30674,
									"end": 30678,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30671,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30668,
									"end": 30671,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30668,
									"end": 30678,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30705,
									"end": 30719,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30702,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30689,
									"end": 30702,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30689,
									"end": 30719,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30740,
									"end": 30748,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30737,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30730,
									"end": 30737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30730,
									"end": 30748,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30773,
									"end": 30785,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30759,
									"end": 30770,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30759,
									"end": 30785,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30759,
									"end": 30785,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30759,
									"end": 30785,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30759,
									"end": 30785,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30809,
									"end": 30820,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30796,
									"end": 30806,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 30796,
									"end": 30820,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30796,
									"end": 30820,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30796,
									"end": 30820,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30796,
									"end": 30820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30488,
									"end": 30828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19549,
									"end": 19647,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 19549,
									"end": 19647,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19602,
									"end": 19609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19629,
									"end": 19639,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 19622,
									"end": 19639,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19622,
									"end": 19639,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19549,
									"end": 19647,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19549,
									"end": 19647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21445,
									"end": 21636,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 21445,
									"end": 21636,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21519,
									"end": 21535,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21538,
									"end": 21544,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21519,
									"end": 21544,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21519,
									"end": 21544,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21564,
									"end": 21572,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21561,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21555,
									"end": 21561,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21555,
									"end": 21572,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21619,
									"end": 21627,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21609,
									"end": 21617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21588,
									"end": 21628,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 21508,
									"end": 21636,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21445,
									"end": 21636,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21445,
									"end": 21636,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1136,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1017,
									"end": 1136,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1077,
									"end": 1084,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1106,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1124,
									"end": 1129,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1106,
									"end": 1130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 1130,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1106,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1095,
									"end": 1130,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1095,
									"end": 1130,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1136,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1136,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1136,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1136,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1142,
									"end": 1310,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1142,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1285,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1279,
									"end": 1284,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1285,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1238,
									"end": 1285,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1285,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1238,
									"end": 1285,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1231,
									"end": 1236,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1286,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1218,
									"end": 1304,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1218,
									"end": 1304,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1300,
									"end": 1301,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1290,
									"end": 1302,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1218,
									"end": 1304,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1218,
									"end": 1304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1142,
									"end": 1310,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1142,
									"end": 1310,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1316,
									"end": 1505,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1316,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1396,
									"end": 1401,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 1433,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1421,
									"end": 1434,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1412,
									"end": 1434,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1412,
									"end": 1434,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1443,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1493,
									"end": 1498,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1443,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1443,
									"end": 1499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1443,
									"end": 1499,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1443,
									"end": 1499,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1316,
									"end": 1505,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1316,
									"end": 1505,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1316,
									"end": 1505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1316,
									"end": 1505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1316,
									"end": 1505,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1633,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1511,
									"end": 1633,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1584,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1602,
									"end": 1607,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1584,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1584,
									"end": 1608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1584,
									"end": 1608,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1584,
									"end": 1608,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1577,
									"end": 1582,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1574,
									"end": 1609,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1564,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1564,
									"end": 1627,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1624,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1620,
									"end": 1621,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1625,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1564,
									"end": 1627,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1564,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1633,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1633,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1782,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1639,
									"end": 1782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1701,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1727,
									"end": 1733,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1734,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1734,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1734,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1743,
									"end": 1776,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1770,
									"end": 1775,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1743,
									"end": 1776,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1743,
									"end": 1776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1743,
									"end": 1776,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1743,
									"end": 1776,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1782,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1782,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1782,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1782,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1782,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1865,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1788,
									"end": 1865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1825,
									"end": 1832,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1854,
									"end": 1859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1865,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1865,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1871,
									"end": 1993,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1871,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1944,
									"end": 1968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1944,
									"end": 1968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1944,
									"end": 1968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1944,
									"end": 1968,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1944,
									"end": 1968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1937,
									"end": 1942,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1934,
									"end": 1969,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1924,
									"end": 1987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1924,
									"end": 1987,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1983,
									"end": 1984,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 1985,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1924,
									"end": 1987,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1924,
									"end": 1987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1871,
									"end": 1993,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1871,
									"end": 1993,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2142,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1999,
									"end": 2142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2061,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2087,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2081,
									"end": 2094,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2072,
									"end": 2094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2072,
									"end": 2094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2103,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2130,
									"end": 2135,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2103,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 2103,
									"end": 2136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2103,
									"end": 2136,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2103,
									"end": 2136,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2142,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2142,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2142,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2142,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2291,
									"end": 2297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2299,
									"end": 2305,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2307,
									"end": 2313,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2315,
									"end": 2321,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2323,
									"end": 2329,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2372,
									"end": 2375,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 2360,
									"end": 2369,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2351,
									"end": 2358,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2347,
									"end": 2370,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2376,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2460,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2340,
									"end": 2460,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2379,
									"end": 2458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2379,
									"end": 2458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2379,
									"end": 2458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2379,
									"end": 2458,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2379,
									"end": 2458,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2460,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2340,
									"end": 2460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2499,
									"end": 2500,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2524,
									"end": 2602,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2594,
									"end": 2601,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2585,
									"end": 2591,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2574,
									"end": 2583,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 2570,
									"end": 2592,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2524,
									"end": 2602,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2524,
									"end": 2602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2524,
									"end": 2602,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2524,
									"end": 2602,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2514,
									"end": 2602,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2514,
									"end": 2602,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2470,
									"end": 2612,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2651,
									"end": 2653,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2677,
									"end": 2764,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2756,
									"end": 2763,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2747,
									"end": 2753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2736,
									"end": 2745,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 2732,
									"end": 2754,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2764,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2677,
									"end": 2764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2764,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2677,
									"end": 2764,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2667,
									"end": 2764,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2667,
									"end": 2764,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2622,
									"end": 2774,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2813,
									"end": 2815,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2839,
									"end": 2903,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2895,
									"end": 2902,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2886,
									"end": 2892,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2875,
									"end": 2884,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 2871,
									"end": 2893,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2839,
									"end": 2903,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2839,
									"end": 2903,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2839,
									"end": 2903,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2839,
									"end": 2903,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2829,
									"end": 2903,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2829,
									"end": 2903,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2784,
									"end": 2913,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2952,
									"end": 2954,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2978,
									"end": 3042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 3034,
									"end": 3041,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3014,
									"end": 3023,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 3010,
									"end": 3032,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2978,
									"end": 3042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 2978,
									"end": 3042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2978,
									"end": 3042,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2978,
									"end": 3042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2968,
									"end": 3042,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2968,
									"end": 3042,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2923,
									"end": 3052,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3091,
									"end": 3094,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3118,
									"end": 3182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 3174,
									"end": 3181,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3165,
									"end": 3171,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3154,
									"end": 3163,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 3150,
									"end": 3172,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3118,
									"end": 3182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 3118,
									"end": 3182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3118,
									"end": 3182,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 3118,
									"end": 3182,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3108,
									"end": 3182,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3108,
									"end": 3182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3062,
									"end": 3192,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 3199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28007,
									"end": 38495,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220065401f608dd177bdc09ce884f4616e27d8b8922b18df9f1fcc7cdba1205120664736f6c634300080f0033",
									".code": [
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "64482F79"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "CB3CBA55"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB158"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB158"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "E4D09896"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "F395DB2C"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "CB3CBA55"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "D0D41FE1"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "D49E77CD"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "D5545992"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "8AA28550"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "8AA28550"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "8DBB1E3A"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "93F1A40B"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "64482F79"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "7CD07E47"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "23CF3118"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "51EB05A6"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "51EB05A6"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "5FFE6146"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "612EEE43"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "630B5BA1"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "23CF3118"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "441A3E70"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "48CD4CB1"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "1526FE27"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "1526FE27"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "17CAF6F1"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "1EAAA045"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "2080BAAB"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "81E3EDA"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "1395D8C9"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 38495,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31225,
											"end": 31320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 31225,
											"end": 31320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 37323,
											"end": 37893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 37323,
											"end": 37893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 30922,
											"end": 31086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 30922,
											"end": 31086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 30922,
											"end": 31086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 29839,
											"end": 29865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 29839,
											"end": 29865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 29839,
											"end": 29865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 30080,
											"end": 30114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30080,
											"end": 30114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 31489,
											"end": 32051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 31489,
											"end": 32051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 33108,
											"end": 33861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 33108,
											"end": 33861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 33108,
											"end": 33861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 32527,
											"end": 32629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 32527,
											"end": 32629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 35790,
											"end": 37315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 35790,
											"end": 37315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 30170,
											"end": 30195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30170,
											"end": 30195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 34200,
											"end": 34929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 34200,
											"end": 34929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 31094,
											"end": 31217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 31094,
											"end": 31217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 38387,
											"end": 38492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 38387,
											"end": 38492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 33944,
											"end": 34124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 32146,
											"end": 32451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 32146,
											"end": 32451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 20826,
											"end": 20929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 29776,
											"end": 29805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 29776,
											"end": 29805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 29638,
											"end": 29673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 29638,
											"end": 29673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20175,
											"end": 20262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 20175,
											"end": 20262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 32705,
											"end": 32849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 32705,
											"end": 32849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 32705,
											"end": 32849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 29921,
											"end": 29985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29921,
											"end": 29985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 29921,
											"end": 29985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 29447,
											"end": 29464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 29447,
											"end": 29464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 38284,
											"end": 38379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 38284,
											"end": 38379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 29492,
											"end": 29514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 29492,
											"end": 29514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 32857,
											"end": 33045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 32857,
											"end": 33045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32857,
											"end": 33045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 34998,
											"end": 35737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 34998,
											"end": 35737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 29380,
											"end": 29415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 29380,
											"end": 29415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 21084,
											"end": 21285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 21084,
											"end": 21285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 29559,
											"end": 29585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 29559,
											"end": 29585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31270,
											"end": 31277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31297,
											"end": 31305,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31297,
											"end": 31312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31297,
											"end": 31312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31297,
											"end": 31312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31297,
											"end": 31312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31290,
											"end": 31312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31225,
											"end": 31320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37375,
											"end": 37396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37399,
											"end": 37407,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37408,
											"end": 37412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 37399,
											"end": 37413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 37399,
											"end": 37413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37375,
											"end": 37413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37375,
											"end": 37413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37424,
											"end": 37445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37448,
											"end": 37456,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37457,
											"end": 37461,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37448,
											"end": 37462,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37463,
											"end": 37473,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37448,
											"end": 37474,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37424,
											"end": 37474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37424,
											"end": 37474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37485,
											"end": 37501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 37496,
											"end": 37500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37485,
											"end": 37495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 37485,
											"end": 37501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37485,
											"end": 37501,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 37485,
											"end": 37501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37512,
											"end": 37527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37530,
											"end": 37597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 37581,
											"end": 37585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37581,
											"end": 37596,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37581,
											"end": 37596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37581,
											"end": 37596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 37571,
											"end": 37575,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 37530,
											"end": 37566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 37546,
											"end": 37550,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37546,
											"end": 37565,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37546,
											"end": 37565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37546,
											"end": 37565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37534,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37541,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37530,
											"end": 37541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37541,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 37530,
											"end": 37545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37566,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37530,
											"end": 37566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37566,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 37530,
											"end": 37566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 37530,
											"end": 37570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37530,
											"end": 37576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37576,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 37530,
											"end": 37576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 37530,
											"end": 37580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37597,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37530,
											"end": 37597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37530,
											"end": 37597,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 37530,
											"end": 37597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37512,
											"end": 37597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37512,
											"end": 37597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37626,
											"end": 37627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37616,
											"end": 37623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37616,
											"end": 37627,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 37608,
											"end": 37646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 37608,
											"end": 37646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37657,
											"end": 37660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37668,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37657,
											"end": 37668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37668,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37677,
											"end": 37690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 37657,
											"end": 37701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 37657,
											"end": 37701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37657,
											"end": 37701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37712,
											"end": 37725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37738,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37712,
											"end": 37738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37738,
											"name": "PUSH",
											"source": 0,
											"value": "849DF12C"
										},
										{
											"begin": 37739,
											"end": 37746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37748,
											"end": 37758,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 37712,
											"end": 37759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 37829,
											"end": 37833,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 37788,
											"end": 37824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 37804,
											"end": 37808,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37823,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37804,
											"end": 37823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37792,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37799,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37788,
											"end": 37799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37799,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 37788,
											"end": 37803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37824,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37788,
											"end": 37824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37824,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 37788,
											"end": 37824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 37788,
											"end": 37828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37788,
											"end": 37834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37788,
											"end": 37834,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 37788,
											"end": 37834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37770,
											"end": 37774,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37770,
											"end": 37785,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37770,
											"end": 37785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37770,
											"end": 37834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37770,
											"end": 37834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37770,
											"end": 37834,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37770,
											"end": 37834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37871,
											"end": 37875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37859,
											"end": 37869,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 37877,
											"end": 37884,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37850,
											"end": 37885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37885,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 37364,
											"end": 37893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37364,
											"end": 37893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37364,
											"end": 37893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31022,
											"end": 31028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31048,
											"end": 31078,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 31048,
											"end": 31078,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31048,
											"end": 31078,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 31041,
											"end": 31078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31041,
											"end": 31078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30922,
											"end": 31086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29839,
											"end": 29865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30080,
											"end": 30114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20406,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20395,
											"end": 20402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20387,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31594,
											"end": 31605,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31651,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 31590,
											"end": 31651,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31622,
											"end": 31639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 31622,
											"end": 31637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 31622,
											"end": 31639,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31622,
											"end": 31639,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 31622,
											"end": 31639,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 31590,
											"end": 31651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31661,
											"end": 31684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31702,
											"end": 31712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31702,
											"end": 31712,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31699,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31712,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 31687,
											"end": 31740,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31730,
											"end": 31740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31730,
											"end": 31740,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 31687,
											"end": 31740,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 31687,
											"end": 31740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31727,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31687,
											"end": 31740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 31687,
											"end": 31740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31661,
											"end": 31740,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31661,
											"end": 31740,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 31789,
											"end": 31800,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31769,
											"end": 31784,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 31769,
											"end": 31788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31801,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31769,
											"end": 31801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31801,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31801,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 31769,
											"end": 31801,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31751,
											"end": 31766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31751,
											"end": 31801,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31751,
											"end": 31801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31751,
											"end": 31801,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31751,
											"end": 31801,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 31820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31878,
											"end": 31887,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31918,
											"end": 31929,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31965,
											"end": 31980,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32015,
											"end": 32016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31840,
											"end": 32032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31812,
											"end": 32043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 32051,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31489,
											"end": 32051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33180,
											"end": 33187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33199,
											"end": 33220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33231,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33232,
											"end": 33236,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 33223,
											"end": 33237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33199,
											"end": 33237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33199,
											"end": 33237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33248,
											"end": 33269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33272,
											"end": 33280,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33281,
											"end": 33285,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33287,
											"end": 33292,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33272,
											"end": 33293,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33248,
											"end": 33293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33248,
											"end": 33293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33329,
											"end": 33333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33329,
											"end": 33348,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33329,
											"end": 33348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33329,
											"end": 33348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33359,
											"end": 33376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33379,
											"end": 33383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33379,
											"end": 33392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33379,
											"end": 33402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33402,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 33411,
											"end": 33415,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 33379,
											"end": 33417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 33379,
											"end": 33417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 33379,
											"end": 33417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33359,
											"end": 33417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33359,
											"end": 33417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33447,
											"end": 33451,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33447,
											"end": 33467,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33447,
											"end": 33467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33447,
											"end": 33467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33432,
											"end": 33444,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 33432,
											"end": 33467,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33432,
											"end": 33485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33432,
											"end": 33485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33432,
											"end": 33485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 33432,
											"end": 33485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33432,
											"end": 33485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33484,
											"end": 33485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33471,
											"end": 33480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33471,
											"end": 33485,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33471,
											"end": 33485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33432,
											"end": 33485,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 33432,
											"end": 33485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33428,
											"end": 33774,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33428,
											"end": 33774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 33428,
											"end": 33774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33502,
											"end": 33520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33523,
											"end": 33572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 33537,
											"end": 33541,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33557,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33537,
											"end": 33557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33537,
											"end": 33557,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33559,
											"end": 33571,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 33523,
											"end": 33572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33572,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 33523,
											"end": 33572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33502,
											"end": 33572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33502,
											"end": 33572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33587,
											"end": 33604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33607,
											"end": 33676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 33660,
											"end": 33675,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33660,
											"end": 33675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 33639,
											"end": 33643,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 33639,
											"end": 33654,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33639,
											"end": 33654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33639,
											"end": 33654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 33622,
											"end": 33633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33622,
											"end": 33633,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33617,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 33607,
											"end": 33621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33634,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33607,
											"end": 33634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33634,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 33607,
											"end": 33634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 33607,
											"end": 33638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33655,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33607,
											"end": 33655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33655,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 33607,
											"end": 33655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 33607,
											"end": 33659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33607,
											"end": 33676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33607,
											"end": 33676,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 33607,
											"end": 33676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33587,
											"end": 33676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33587,
											"end": 33676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33708,
											"end": 33762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 33727,
											"end": 33761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 33751,
											"end": 33760,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 33741,
											"end": 33745,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33727,
											"end": 33736,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 33727,
											"end": 33740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 33727,
											"end": 33746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 33727,
											"end": 33750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33727,
											"end": 33761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33727,
											"end": 33761,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 33727,
											"end": 33761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33708,
											"end": 33722,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33708,
											"end": 33726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 33708,
											"end": 33726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33708,
											"end": 33762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33708,
											"end": 33762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33708,
											"end": 33762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33708,
											"end": 33762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33708,
											"end": 33762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33708,
											"end": 33762,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 33708,
											"end": 33762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33691,
											"end": 33762,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33691,
											"end": 33762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33487,
											"end": 33774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33487,
											"end": 33774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33428,
											"end": 33774,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 33428,
											"end": 33774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 33837,
											"end": 33841,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33837,
											"end": 33852,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33837,
											"end": 33852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33837,
											"end": 33852,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 33827,
											"end": 33831,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33791,
											"end": 33822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 33807,
											"end": 33821,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33795,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33802,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33791,
											"end": 33802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 33791,
											"end": 33806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33791,
											"end": 33822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33822,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 33791,
											"end": 33822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 33791,
											"end": 33826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33832,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33791,
											"end": 33832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33832,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 33791,
											"end": 33832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 33791,
											"end": 33836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33791,
											"end": 33853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33791,
											"end": 33853,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 33791,
											"end": 33853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33853,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20406,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20395,
											"end": 20402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20387,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32612,
											"end": 32621,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32601,
											"end": 32609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32601,
											"end": 32621,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35858,
											"end": 35879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35882,
											"end": 35890,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 35891,
											"end": 35895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 35882,
											"end": 35896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35882,
											"end": 35896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35858,
											"end": 35896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35858,
											"end": 35896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35907,
											"end": 35928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35931,
											"end": 35939,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35940,
											"end": 35944,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35931,
											"end": 35945,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35946,
											"end": 35956,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35931,
											"end": 35957,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35907,
											"end": 35957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35907,
											"end": 35957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35968,
											"end": 35983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36009,
											"end": 36010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35997,
											"end": 36005,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35997,
											"end": 36010,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 37256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 35994,
											"end": 37256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36026,
											"end": 36042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 36037,
											"end": 36041,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36026,
											"end": 36036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 36026,
											"end": 36042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36026,
											"end": 36042,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 36026,
											"end": 36042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 36118,
											"end": 36122,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36118,
											"end": 36133,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36118,
											"end": 36133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36118,
											"end": 36133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 36108,
											"end": 36112,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 36067,
											"end": 36103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 36083,
											"end": 36087,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36083,
											"end": 36102,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36083,
											"end": 36102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36083,
											"end": 36102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36071,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36078,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36067,
											"end": 36078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36078,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 36067,
											"end": 36082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36103,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36067,
											"end": 36103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36103,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 36067,
											"end": 36103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 36067,
											"end": 36107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36067,
											"end": 36113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36113,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 36067,
											"end": 36113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 36067,
											"end": 36117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36134,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36067,
											"end": 36134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36067,
											"end": 36134,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 36067,
											"end": 36134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36057,
											"end": 36134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36162,
											"end": 36163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36152,
											"end": 36159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36152,
											"end": 36163,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36149,
											"end": 36235,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36149,
											"end": 36235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 36149,
											"end": 36235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36183,
											"end": 36219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 36199,
											"end": 36209,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36211,
											"end": 36218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36183,
											"end": 36198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 36183,
											"end": 36219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36183,
											"end": 36219,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 36183,
											"end": 36219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36149,
											"end": 36235,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 36149,
											"end": 36235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 36308,
											"end": 36312,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 36267,
											"end": 36303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 36283,
											"end": 36287,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36283,
											"end": 36302,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36283,
											"end": 36302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36283,
											"end": 36302,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36271,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36278,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36267,
											"end": 36278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 36267,
											"end": 36282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36267,
											"end": 36303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36303,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 36267,
											"end": 36303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 36267,
											"end": 36307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36267,
											"end": 36313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36267,
											"end": 36313,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 36267,
											"end": 36313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36249,
											"end": 36253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36249,
											"end": 36264,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36249,
											"end": 36264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36249,
											"end": 36313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36249,
											"end": 36313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36249,
											"end": 36313,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36249,
											"end": 36313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 37256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 35994,
											"end": 37256,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 37256,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 35994,
											"end": 37256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36345,
											"end": 36363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36382,
											"end": 36402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36421,
											"end": 36430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36434,
											"end": 36438,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36434,
											"end": 36447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36434,
											"end": 36447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36434,
											"end": 36454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36434,
											"end": 36454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36434,
											"end": 36454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36434,
											"end": 36454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36454,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36502,
											"end": 36510,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36486,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36482,
											"end": 36495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36496,
											"end": 36497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 36482,
											"end": 36498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36498,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36510,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36479,
											"end": 36607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 36479,
											"end": 36607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36547,
											"end": 36548,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36534,
											"end": 36548,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36534,
											"end": 36548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36586,
											"end": 36587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36571,
											"end": 36587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36571,
											"end": 36587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36479,
											"end": 36607,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 36479,
											"end": 36607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 36456,
											"end": 36459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36417,
											"end": 36622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36658,
											"end": 36659,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36644,
											"end": 36654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36644,
											"end": 36659,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 36636,
											"end": 36693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 36636,
											"end": 36693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36731,
											"end": 36732,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36716,
											"end": 36720,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36716,
											"end": 36727,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36716,
											"end": 36727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36716,
											"end": 36727,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36716,
											"end": 36732,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36716,
											"end": 36732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 36708,
											"end": 36755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 36708,
											"end": 36755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36770,
											"end": 36786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 36781,
											"end": 36785,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36770,
											"end": 36780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 36770,
											"end": 36786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36770,
											"end": 36786,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 36770,
											"end": 36786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 36862,
											"end": 36866,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36877,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 36852,
											"end": 36856,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 36811,
											"end": 36847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 36827,
											"end": 36831,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 36827,
											"end": 36846,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36827,
											"end": 36846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36827,
											"end": 36846,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36815,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36822,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36811,
											"end": 36822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 36811,
											"end": 36826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36847,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36811,
											"end": 36847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36847,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 36811,
											"end": 36847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 36811,
											"end": 36851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36811,
											"end": 36857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36857,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 36811,
											"end": 36857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 36811,
											"end": 36861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36811,
											"end": 36878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36811,
											"end": 36878,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 36811,
											"end": 36878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36801,
											"end": 36878,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36801,
											"end": 36878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36906,
											"end": 36907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36896,
											"end": 36903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36907,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36893,
											"end": 36979,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36893,
											"end": 36979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 36893,
											"end": 36979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36927,
											"end": 36963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 36943,
											"end": 36953,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36955,
											"end": 36962,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36927,
											"end": 36942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 36927,
											"end": 36963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36927,
											"end": 36963,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 36927,
											"end": 36963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36893,
											"end": 36979,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 36893,
											"end": 36979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 37023,
											"end": 37024,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37007,
											"end": 37011,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37018,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37007,
											"end": 37018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37018,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 37007,
											"end": 37022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37025,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37007,
											"end": 37025,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37007,
											"end": 37025,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 37007,
											"end": 37025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 36997,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37004,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36993,
											"end": 37004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37025,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36993,
											"end": 37025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 37099,
											"end": 37103,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 37058,
											"end": 37094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 37074,
											"end": 37078,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37074,
											"end": 37093,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37074,
											"end": 37093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37074,
											"end": 37093,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37062,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37069,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37058,
											"end": 37069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37069,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 37058,
											"end": 37073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37058,
											"end": 37094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37094,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 37058,
											"end": 37094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 37058,
											"end": 37098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37104,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37058,
											"end": 37104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37104,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 37058,
											"end": 37104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37040,
											"end": 37044,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37040,
											"end": 37055,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37040,
											"end": 37055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37040,
											"end": 37104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37040,
											"end": 37104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37040,
											"end": 37104,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37040,
											"end": 37104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37130,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37126,
											"end": 37139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37140,
											"end": 37152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 37126,
											"end": 37153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37126,
											"end": 37153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37119,
											"end": 37153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37119,
											"end": 37153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37119,
											"end": 37153,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37172,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37168,
											"end": 37181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37198,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37168,
											"end": 37198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37198,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 37207,
											"end": 37211,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 37222,
											"end": 37232,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37235,
											"end": 37243,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 37168,
											"end": 37244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37168,
											"end": 37244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36330,
											"end": 37256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36330,
											"end": 37256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35994,
											"end": 37256,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 35994,
											"end": 37256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37292,
											"end": 37296,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37280,
											"end": 37290,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 37298,
											"end": 37306,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37271,
											"end": 37307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37271,
											"end": 37307,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 35847,
											"end": 37315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35847,
											"end": 37315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35847,
											"end": 37315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35790,
											"end": 37315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34252,
											"end": 34273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34276,
											"end": 34284,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34285,
											"end": 34289,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 34276,
											"end": 34290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34276,
											"end": 34290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34252,
											"end": 34290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34252,
											"end": 34290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34321,
											"end": 34325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34321,
											"end": 34341,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34321,
											"end": 34341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34321,
											"end": 34341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34305,
											"end": 34317,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 34305,
											"end": 34341,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34301,
											"end": 34376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 34301,
											"end": 34376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34358,
											"end": 34365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34358,
											"end": 34365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 34358,
											"end": 34365,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34301,
											"end": 34376,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 34301,
											"end": 34376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34406,
											"end": 34410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34406,
											"end": 34419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34429,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34406,
											"end": 34429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34429,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 34438,
											"end": 34442,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 34406,
											"end": 34444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 34406,
											"end": 34444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 34406,
											"end": 34444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34472,
											"end": 34473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34459,
											"end": 34468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34459,
											"end": 34473,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34455,
											"end": 34558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 34455,
											"end": 34558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34513,
											"end": 34525,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 34490,
											"end": 34494,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34490,
											"end": 34510,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34490,
											"end": 34510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34490,
											"end": 34525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34490,
											"end": 34525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34490,
											"end": 34525,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34490,
											"end": 34525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34540,
											"end": 34547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34540,
											"end": 34547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34540,
											"end": 34547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 34540,
											"end": 34547,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34455,
											"end": 34558,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 34455,
											"end": 34558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34589,
											"end": 34638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 34603,
											"end": 34607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34603,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34603,
											"end": 34623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34603,
											"end": 34623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34625,
											"end": 34637,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 34589,
											"end": 34602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 34589,
											"end": 34638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34589,
											"end": 34638,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 34589,
											"end": 34638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34669,
											"end": 34738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 34722,
											"end": 34737,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34722,
											"end": 34737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 34701,
											"end": 34705,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34701,
											"end": 34716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 34684,
											"end": 34695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34684,
											"end": 34695,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34679,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 34669,
											"end": 34683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34669,
											"end": 34696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34696,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 34669,
											"end": 34696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 34669,
											"end": 34700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34717,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34669,
											"end": 34717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34717,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 34669,
											"end": 34717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 34669,
											"end": 34721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34738,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34669,
											"end": 34738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34669,
											"end": 34738,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 34669,
											"end": 34738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34749,
											"end": 34752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34757,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34749,
											"end": 34757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34757,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 34766,
											"end": 34770,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34773,
											"end": 34782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 34749,
											"end": 34783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 34749,
											"end": 34783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 34840,
											"end": 34874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 34864,
											"end": 34873,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 34854,
											"end": 34858,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 34840,
											"end": 34849,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 34840,
											"end": 34853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34859,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34840,
											"end": 34859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34859,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 34840,
											"end": 34859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 34840,
											"end": 34863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34874,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34840,
											"end": 34874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34840,
											"end": 34874,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 34840,
											"end": 34874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34820,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34835,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34816,
											"end": 34835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 34816,
											"end": 34839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34875,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34816,
											"end": 34875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34816,
											"end": 34875,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 34816,
											"end": 34875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34794,
											"end": 34798,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34794,
											"end": 34813,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34794,
											"end": 34813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34794,
											"end": 34875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34794,
											"end": 34875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34794,
											"end": 34875,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34794,
											"end": 34875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34909,
											"end": 34921,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 34886,
											"end": 34890,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34886,
											"end": 34906,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34886,
											"end": 34906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34886,
											"end": 34921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34886,
											"end": 34921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34886,
											"end": 34921,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34886,
											"end": 34921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34241,
											"end": 34929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34241,
											"end": 34929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34241,
											"end": 34929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34241,
											"end": 34929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20406,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20395,
											"end": 20402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20387,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31193,
											"end": 31209,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31174,
											"end": 31190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31174,
											"end": 31209,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31174,
											"end": 31209,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31174,
											"end": 31209,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31174,
											"end": 31209,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31094,
											"end": 31217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20406,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20395,
											"end": 20402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20387,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38475,
											"end": 38484,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38461,
											"end": 38472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38461,
											"end": 38484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38461,
											"end": 38484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38461,
											"end": 38484,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38461,
											"end": 38484,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38387,
											"end": 38492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 33944,
											"end": 34124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34006,
											"end": 34014,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34006,
											"end": 34021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34006,
											"end": 34021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34006,
											"end": 34021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34006,
											"end": 34021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 34021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34060,
											"end": 34066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34054,
											"end": 34057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34054,
											"end": 34066,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34090,
											"end": 34105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 34101,
											"end": 34104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34090,
											"end": 34100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 34090,
											"end": 34105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34090,
											"end": 34105,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 34090,
											"end": 34105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 34068,
											"end": 34073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34032,
											"end": 34117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33944,
											"end": 34124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20406,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20395,
											"end": 20402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20387,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32245,
											"end": 32256,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32241,
											"end": 32302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32241,
											"end": 32302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 32241,
											"end": 32302,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32273,
											"end": 32290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 32273,
											"end": 32288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32273,
											"end": 32290,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32273,
											"end": 32290,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 32273,
											"end": 32290,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32241,
											"end": 32302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 32241,
											"end": 32302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 32381,
											"end": 32392,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32376,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 32350,
											"end": 32358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32359,
											"end": 32363,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 32350,
											"end": 32364,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32364,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32350,
											"end": 32375,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32350,
											"end": 32375,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32330,
											"end": 32345,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 32330,
											"end": 32349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32376,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32376,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32330,
											"end": 32376,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32376,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32376,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 32330,
											"end": 32376,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 32330,
											"end": 32380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32393,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32330,
											"end": 32393,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32393,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 32330,
											"end": 32393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32312,
											"end": 32327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32312,
											"end": 32393,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32312,
											"end": 32393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32312,
											"end": 32393,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32312,
											"end": 32393,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32432,
											"end": 32443,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32413,
											"end": 32417,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 32404,
											"end": 32418,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32418,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32404,
											"end": 32429,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32443,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32443,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32443,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32404,
											"end": 32443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 20826,
											"end": 20929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20406,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20395,
											"end": 20402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20387,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 20918,
											"end": 20919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20891,
											"end": 20909,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 20891,
											"end": 20921,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 20891,
											"end": 20921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20826,
											"end": 20929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29776,
											"end": 29805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29638,
											"end": 29673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20221,
											"end": 20228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20248,
											"end": 20254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20241,
											"end": 20254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20241,
											"end": 20254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20175,
											"end": 20262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32777,
											"end": 32784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32805,
											"end": 32841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 32824,
											"end": 32840,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32824,
											"end": 32840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 32813,
											"end": 32818,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32808,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 32805,
											"end": 32812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32819,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32805,
											"end": 32819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32819,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 32805,
											"end": 32819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 32805,
											"end": 32823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32805,
											"end": 32841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32841,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 32805,
											"end": 32841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32798,
											"end": 32841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32798,
											"end": 32841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 32849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20406,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20395,
											"end": 20402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20387,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38363,
											"end": 38371,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 38353,
											"end": 38360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38371,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38284,
											"end": 38379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 29514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32932,
											"end": 32948,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 32961,
											"end": 32982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32985,
											"end": 32993,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32994,
											"end": 32998,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32985,
											"end": 32999,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33000,
											"end": 33005,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32985,
											"end": 33006,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32961,
											"end": 33006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32961,
											"end": 33006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33024,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33024,
											"end": 33037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35065,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35089,
											"end": 35097,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 35098,
											"end": 35102,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 35089,
											"end": 35103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35065,
											"end": 35103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35065,
											"end": 35103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35114,
											"end": 35135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35138,
											"end": 35146,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35147,
											"end": 35151,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35138,
											"end": 35152,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35153,
											"end": 35163,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35138,
											"end": 35164,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35114,
											"end": 35164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35114,
											"end": 35164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35175,
											"end": 35191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 35186,
											"end": 35190,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35175,
											"end": 35185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 35175,
											"end": 35191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35175,
											"end": 35191,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 35175,
											"end": 35191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35220,
											"end": 35221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35206,
											"end": 35210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35217,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35206,
											"end": 35217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35206,
											"end": 35221,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35435,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 35202,
											"end": 35435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35238,
											"end": 35253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35256,
											"end": 35323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 35307,
											"end": 35311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35307,
											"end": 35322,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35307,
											"end": 35322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35307,
											"end": 35322,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 35297,
											"end": 35301,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 35256,
											"end": 35292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 35272,
											"end": 35276,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35272,
											"end": 35291,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35272,
											"end": 35291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35272,
											"end": 35291,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35260,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35267,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35256,
											"end": 35267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 35256,
											"end": 35271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35292,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35256,
											"end": 35292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35292,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 35256,
											"end": 35292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 35256,
											"end": 35296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35302,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35256,
											"end": 35302,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35302,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 35256,
											"end": 35302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 35256,
											"end": 35306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35256,
											"end": 35323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35256,
											"end": 35323,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 35256,
											"end": 35323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35238,
											"end": 35323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35238,
											"end": 35323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35351,
											"end": 35352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35341,
											"end": 35348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35341,
											"end": 35352,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35338,
											"end": 35424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35338,
											"end": 35424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 35338,
											"end": 35424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35372,
											"end": 35408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 35388,
											"end": 35398,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35400,
											"end": 35407,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35372,
											"end": 35387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 35372,
											"end": 35408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35372,
											"end": 35408,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 35372,
											"end": 35408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35338,
											"end": 35424,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 35338,
											"end": 35424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35223,
											"end": 35435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35202,
											"end": 35435,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 35202,
											"end": 35435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35445,
											"end": 35458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35445,
											"end": 35475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 35484,
											"end": 35494,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35505,
											"end": 35509,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 35512,
											"end": 35520,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 35445,
											"end": 35521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35445,
											"end": 35521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 35562,
											"end": 35563,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35546,
											"end": 35550,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35557,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35546,
											"end": 35557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35557,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35546,
											"end": 35561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35546,
											"end": 35564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35546,
											"end": 35564,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 35546,
											"end": 35564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35532,
											"end": 35536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35532,
											"end": 35543,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35532,
											"end": 35543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35532,
											"end": 35564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35532,
											"end": 35564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35532,
											"end": 35564,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35532,
											"end": 35564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 35634,
											"end": 35638,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 35593,
											"end": 35629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 35609,
											"end": 35613,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35609,
											"end": 35628,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35609,
											"end": 35628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35609,
											"end": 35628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35597,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35604,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35593,
											"end": 35604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 35593,
											"end": 35608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35629,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35593,
											"end": 35629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35629,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 35593,
											"end": 35629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 35593,
											"end": 35633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35593,
											"end": 35639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35593,
											"end": 35639,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 35593,
											"end": 35639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35590,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35575,
											"end": 35590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35639,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35650,
											"end": 35663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35669,
											"end": 35677,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35650,
											"end": 35678,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35714,
											"end": 35718,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35702,
											"end": 35712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 35720,
											"end": 35728,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 35694,
											"end": 35729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35694,
											"end": 35729,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 35054,
											"end": 35737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35054,
											"end": 35737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34998,
											"end": 35737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29380,
											"end": 29415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 20406,
											"end": 20416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 20406,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 20406,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 20395,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20395,
											"end": 20402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 20395,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20395,
											"end": 20418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20387,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 20387,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21173,
											"end": 21195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21173,
											"end": 21195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21173,
											"end": 21181,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21173,
											"end": 21195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21173,
											"end": 21195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21173,
											"end": 21195,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 21165,
											"end": 21238,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 21165,
											"end": 21238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21249,
											"end": 21277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 21268,
											"end": 21276,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21249,
											"end": 21267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 21249,
											"end": 21277,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21249,
											"end": 21277,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 21249,
											"end": 21277,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21084,
											"end": 21285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29559,
											"end": 29585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 1892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2136,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 2126,
											"end": 2173,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2173,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 2126,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2198,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 2197,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2226,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 2221,
											"end": 2226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2231,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 2213,
											"end": 2269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 2213,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 2298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 2855,
											"end": 2856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2859,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 2851,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 969,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 1000,
											"end": 1001,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1004,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 996,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 996,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 996,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 1047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19549,
											"end": 19647,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 19549,
											"end": 19647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19602,
											"end": 19609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19629,
											"end": 19639,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 19639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19549,
											"end": 19647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19549,
											"end": 19647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 455,
											"end": 636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 513,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 550,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 545,
											"end": 546,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 545,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 545,
											"end": 550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 550,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 574,
											"end": 575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 569,
											"end": 570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 569,
											"end": 575,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 569,
											"end": 575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 561,
											"end": 607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 561,
											"end": 607,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 561,
											"end": 607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 627,
											"end": 628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 620,
											"end": 628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38005,
											"end": 38276,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 38005,
											"end": 38276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38080,
											"end": 38094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38097,
											"end": 38100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38097,
											"end": 38110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38110,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 38119,
											"end": 38123,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 38097,
											"end": 38125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 38097,
											"end": 38125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 38097,
											"end": 38125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38080,
											"end": 38125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38080,
											"end": 38125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38150,
											"end": 38156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38140,
											"end": 38147,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38140,
											"end": 38156,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38173,
											"end": 38176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38173,
											"end": 38185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38185,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 38186,
											"end": 38189,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38191,
											"end": 38197,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 38173,
											"end": 38198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 38173,
											"end": 38198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38173,
											"end": 38198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38231,
											"end": 38234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38231,
											"end": 38243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38243,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 38244,
											"end": 38247,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38249,
											"end": 38256,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 38231,
											"end": 38257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 38231,
											"end": 38257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38231,
											"end": 38257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 38136,
											"end": 38269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38069,
											"end": 38276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38005,
											"end": 38276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38005,
											"end": 38276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38005,
											"end": 38276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21445,
											"end": 21636,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 21445,
											"end": 21636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21519,
											"end": 21535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21519,
											"end": 21544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21519,
											"end": 21544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21564,
											"end": 21572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21555,
											"end": 21561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21619,
											"end": 21627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21609,
											"end": 21617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21588,
											"end": 21628,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21508,
											"end": 21636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21445,
											"end": 21636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21445,
											"end": 21636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3610,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 3601,
											"end": 3629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3653,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 3652,
											"end": 3657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1504,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 1490,
											"end": 1519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1543,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 1542,
											"end": 1547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1567,
											"end": 1568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1560,
											"end": 1568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 517,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 442,
											"end": 517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 475,
											"end": 481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 511,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 492,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 492,
											"end": 511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 442,
											"end": 517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 646,
											"end": 763,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 646,
											"end": 763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 755,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 757,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2001,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 1884,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 1994,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1995,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2124,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 2007,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 2130,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2224,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2218,
											"end": 2225,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2206,
											"end": 2211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2418,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 2238,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2283,
											"end": 2284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2364,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2387,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2373,
											"end": 2388,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2411,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2412,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2705,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 2424,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 2529,
											"end": 2533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 2507,
											"end": 2534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2534,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 2507,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2637,
											"end": 2643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2625,
											"end": 2635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2644,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2619,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2589,
											"end": 2599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2620,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2645,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2668,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 2580,
											"end": 2668,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 2648,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2668,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 2580,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2684,
											"end": 2686,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2840,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 2711,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2772,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 2772,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 2772,
											"end": 2792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2792,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 2772,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 2829,
											"end": 2833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 2801,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2834,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 2801,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 3153,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 2846,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2989,
											"end": 2995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 3016,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3039,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 2983,
											"end": 3039,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 3019,
											"end": 3037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3039,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 2983,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 3079,
											"end": 3085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 3057,
											"end": 3086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3086,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 3057,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 3153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 3153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 3153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 3153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3159,
											"end": 3313,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 3159,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3236,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 3305,
											"end": 3306,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3302,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3159,
											"end": 3313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3159,
											"end": 3313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3159,
											"end": 3313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3159,
											"end": 3313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3729,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 3319,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 3437,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 3478,
											"end": 3484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 3437,
											"end": 3485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3485,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 3437,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 3421,
											"end": 3486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3486,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 3421,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3515,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3502,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3547,
											"end": 3551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3540,
											"end": 3545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3588,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3582,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3574,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3589,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3673,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 3561,
											"end": 3673,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 3592,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 3592,
											"end": 3671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3671,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 3592,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3673,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 3561,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 3716,
											"end": 3722,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 3709,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 3682,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3723,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 3682,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3729,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3729,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 4086,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 3748,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3849,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3837,
											"end": 3843,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3856,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 3819,
											"end": 3941,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 3860,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 3860,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 3860,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3941,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 3819,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 3983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 4076,
											"end": 4079,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4065,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4053,
											"end": 4059,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 4002,
											"end": 4080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4080,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 4002,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 4086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 4086,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 4086,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 4086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 4086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 4086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5035,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4092,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4211,
											"end": 4217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4260,
											"end": 4263,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4248,
											"end": 4257,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4246,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4235,
											"end": 4258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4231,
											"end": 4264,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4228,
											"end": 4348,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4228,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 4228,
											"end": 4348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 4267,
											"end": 4346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 4267,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4228,
											"end": 4348,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 4228,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 4457,
											"end": 4464,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4454,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4446,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 4412,
											"end": 4465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4465,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 4412,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 4465,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 4465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4540,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 4585,
											"end": 4592,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4576,
											"end": 4582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4574,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4540,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 4540,
											"end": 4593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4540,
											"end": 4593,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 4540,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4593,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4485,
											"end": 4603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4644,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4668,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 4713,
											"end": 4720,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4702,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4689,
											"end": 4711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 4668,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 4668,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4721,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4800,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4802,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 4847,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4821,
											"end": 4827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4818,
											"end": 4848,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4815,
											"end": 4932,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4815,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 4815,
											"end": 4932,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 4851,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 4851,
											"end": 4930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4930,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 4851,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4815,
											"end": 4932,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 4815,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 5010,
											"end": 5017,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 5008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 4956,
											"end": 5018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 5018,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 4956,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 5028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5035,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5035,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5035,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5035,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5035,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5190,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 5041,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5117,
											"end": 5183,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5110,
											"end": 5115,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5184,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5311,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 5196,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 5298,
											"end": 5303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 5281,
											"end": 5304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5304,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 5281,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5535,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5317,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5446,
											"end": 5448,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5459,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5523,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5510,
											"end": 5527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5459,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 5459,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5459,
											"end": 5528,
											"name": "tag",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 5459,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5535,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5535,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5541,
											"end": 5601,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 5541,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5569,
											"end": 5572,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5541,
											"end": 5601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5541,
											"end": 5601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5541,
											"end": 5601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5541,
											"end": 5601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5607,
											"end": 5749,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 5607,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 5708,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 5717,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 5735,
											"end": 5740,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 5717,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5741,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 5717,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 5708,
											"end": 5742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5742,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 5708,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 5690,
											"end": 5743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5743,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 5690,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5607,
											"end": 5749,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5607,
											"end": 5749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5607,
											"end": 5749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5607,
											"end": 5749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5881,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 5755,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5805,
											"end": 5814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5838,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 5838,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5875,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 5838,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5825,
											"end": 5875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5825,
											"end": 5875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5881,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 6029,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 5887,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5986,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 6017,
											"end": 6022,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 5986,
											"end": 6023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6023,
											"name": "tag",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 5986,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5973,
											"end": 6023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5973,
											"end": 6023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 6029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 6029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 6029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 6029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6198,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 6035,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 6185,
											"end": 6190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 6138,
											"end": 6191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6191,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 6138,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6789,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 6204,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6435,
											"end": 6438,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6424,
											"end": 6433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6531,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6509,
											"end": 6515,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 6449,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6536,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 6449,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 6614,
											"end": 6616,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6603,
											"end": 6612,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6596,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 6546,
											"end": 6618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6618,
											"name": "tag",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 6546,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 6696,
											"end": 6698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6685,
											"end": 6694,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6681,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6678,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 6628,
											"end": 6700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6700,
											"name": "tag",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 6628,
											"end": 6700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 6778,
											"end": 6780,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6767,
											"end": 6776,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6763,
											"end": 6781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6760,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 6710,
											"end": 6782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6782,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 6710,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6789,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6789,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6848,
											"end": 6855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6877,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 6895,
											"end": 6900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6877,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 6877,
											"end": 6901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6877,
											"end": 6901,
											"name": "tag",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 6877,
											"end": 6901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6795,
											"end": 6907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6913,
											"end": 7067,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 6913,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 7036,
											"end": 7041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 7002,
											"end": 7042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7042,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 7002,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6995,
											"end": 7000,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6992,
											"end": 7043,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6982,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 6982,
											"end": 7061,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7057,
											"end": 7058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7054,
											"end": 7055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7059,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6982,
											"end": 7061,
											"name": "tag",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 6982,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6913,
											"end": 7067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6913,
											"end": 7067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7244,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 7073,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7135,
											"end": 7140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7173,
											"end": 7179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7180,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 7232,
											"end": 7237,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 7189,
											"end": 7238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7238,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 7189,
											"end": 7238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7244,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7244,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7340,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 7250,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7320,
											"end": 7333,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7334,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7462,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 7346,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 7431,
											"end": 7436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 7416,
											"end": 7437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7437,
											"name": "tag",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 7416,
											"end": 7437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 7396,
											"end": 7456,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7442,
											"end": 7454,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 7456,
											"name": "tag",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 7396,
											"end": 7456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7468,
											"end": 7601,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 7468,
											"end": 7601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7511,
											"end": 7516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7556,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7527,
											"end": 7556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7527,
											"end": 7556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7565,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 7589,
											"end": 7594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7565,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 7565,
											"end": 7595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7565,
											"end": 7595,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 7565,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7468,
											"end": 7601,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7468,
											"end": 7601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7468,
											"end": 7601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7468,
											"end": 7601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7468,
											"end": 7601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7607,
											"end": 8252,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 7607,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7705,
											"end": 7711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7713,
											"end": 7719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7762,
											"end": 7764,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7750,
											"end": 7759,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7748,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7737,
											"end": 7760,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7733,
											"end": 7765,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 7849,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 7730,
											"end": 7849,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 7768,
											"end": 7847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 7768,
											"end": 7847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7847,
											"name": "tag",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 7768,
											"end": 7847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 7849,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 7730,
											"end": 7849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 7889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7913,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 7955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7938,
											"end": 7947,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7934,
											"end": 7956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 7913,
											"end": 7966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 7966,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 7913,
											"end": 7966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7903,
											"end": 7966,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7903,
											"end": 7966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8041,
											"end": 8110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 8102,
											"end": 8109,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8093,
											"end": 8099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8082,
											"end": 8091,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8078,
											"end": 8100,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8041,
											"end": 8110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 8041,
											"end": 8110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8041,
											"end": 8110,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 8041,
											"end": 8110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8110,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8185,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 8227,
											"end": 8234,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8218,
											"end": 8224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8207,
											"end": 8216,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8203,
											"end": 8225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 8185,
											"end": 8235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8235,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 8185,
											"end": 8235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7607,
											"end": 8252,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7607,
											"end": 8252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7607,
											"end": 8252,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7607,
											"end": 8252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7607,
											"end": 8252,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7607,
											"end": 8252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8732,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 8258,
											"end": 8732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8326,
											"end": 8332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8334,
											"end": 8340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8371,
											"end": 8380,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8362,
											"end": 8369,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8358,
											"end": 8381,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8354,
											"end": 8386,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8470,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 8351,
											"end": 8470,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 8389,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 8389,
											"end": 8468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8468,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 8389,
											"end": 8468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8470,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 8351,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8509,
											"end": 8510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8534,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 8579,
											"end": 8586,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8559,
											"end": 8568,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8555,
											"end": 8577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8534,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 8534,
											"end": 8587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8534,
											"end": 8587,
											"name": "tag",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 8534,
											"end": 8587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8524,
											"end": 8587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8524,
											"end": 8587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8480,
											"end": 8597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8636,
											"end": 8638,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8662,
											"end": 8715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 8707,
											"end": 8714,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8687,
											"end": 8696,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 8662,
											"end": 8715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8715,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 8662,
											"end": 8715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8652,
											"end": 8715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8652,
											"end": 8715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8607,
											"end": 8725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8732,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8732,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8738,
											"end": 8855,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 8738,
											"end": 8855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8796,
											"end": 8803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8825,
											"end": 8849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 8843,
											"end": 8848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8825,
											"end": 8849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 8825,
											"end": 8849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8825,
											"end": 8849,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 8825,
											"end": 8849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8814,
											"end": 8849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8814,
											"end": 8849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8738,
											"end": 8855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8738,
											"end": 8855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8738,
											"end": 8855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8738,
											"end": 8855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 9025,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 8861,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8955,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 8994,
											"end": 8999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8955,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 8955,
											"end": 9000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8955,
											"end": 9000,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 8955,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8948,
											"end": 8953,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8945,
											"end": 9001,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8935,
											"end": 9019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 8935,
											"end": 9019,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9012,
											"end": 9013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9005,
											"end": 9017,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8935,
											"end": 9019,
											"name": "tag",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 8935,
											"end": 9019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 9025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 9025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9212,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 9031,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9136,
											"end": 9142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9143,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9114,
											"end": 9143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9114,
											"end": 9143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9152,
											"end": 9206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 9200,
											"end": 9205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9152,
											"end": 9206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 9152,
											"end": 9206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9152,
											"end": 9206,
											"name": "tag",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 9152,
											"end": 9206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9212,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9212,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9218,
											"end": 9589,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 9218,
											"end": 9589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9298,
											"end": 9304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9347,
											"end": 9349,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9335,
											"end": 9344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9326,
											"end": 9333,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9322,
											"end": 9345,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9350,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 9315,
											"end": 9434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9353,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 9353,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 9353,
											"end": 9432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9353,
											"end": 9432,
											"name": "tag",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 9353,
											"end": 9432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9434,
											"name": "tag",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 9315,
											"end": 9434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9473,
											"end": 9474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9498,
											"end": 9572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 9564,
											"end": 9571,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9555,
											"end": 9561,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9544,
											"end": 9553,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9498,
											"end": 9572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 9498,
											"end": 9572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9498,
											"end": 9572,
											"name": "tag",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 9498,
											"end": 9572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9488,
											"end": 9572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9488,
											"end": 9572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9218,
											"end": 9589,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9218,
											"end": 9589,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9218,
											"end": 9589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9218,
											"end": 9589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9218,
											"end": 9589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9595,
											"end": 10069,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 9595,
											"end": 10069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9663,
											"end": 9669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9671,
											"end": 9677,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9720,
											"end": 9722,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9708,
											"end": 9717,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9699,
											"end": 9706,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9695,
											"end": 9718,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9723,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9807,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 9688,
											"end": 9807,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9726,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 9726,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 9726,
											"end": 9805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9726,
											"end": 9805,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 9726,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9807,
											"name": "tag",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 9688,
											"end": 9807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 9847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9871,
											"end": 9924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 9916,
											"end": 9923,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9913,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9905,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9871,
											"end": 9924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 9871,
											"end": 9924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9871,
											"end": 9924,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 9871,
											"end": 9924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9861,
											"end": 9924,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9861,
											"end": 9924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9817,
											"end": 9934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9973,
											"end": 9975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9999,
											"end": 10052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 10044,
											"end": 10051,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10035,
											"end": 10041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10024,
											"end": 10033,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10020,
											"end": 10042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9999,
											"end": 10052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 9999,
											"end": 10052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9999,
											"end": 10052,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 9999,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10052,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9595,
											"end": 10069,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9595,
											"end": 10069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9595,
											"end": 10069,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9595,
											"end": 10069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9595,
											"end": 10069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9595,
											"end": 10069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10688,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10075,
											"end": 10688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10149,
											"end": 10155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10157,
											"end": 10163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10165,
											"end": 10171,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10214,
											"end": 10216,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10202,
											"end": 10211,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10193,
											"end": 10200,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10189,
											"end": 10212,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10185,
											"end": 10217,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10182,
											"end": 10301,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10182,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 10182,
											"end": 10301,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 10220,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 10220,
											"end": 10299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10299,
											"name": "tag",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 10220,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10182,
											"end": 10301,
											"name": "tag",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 10182,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10340,
											"end": 10341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10365,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 10410,
											"end": 10417,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10401,
											"end": 10407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10399,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10386,
											"end": 10408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10365,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 10365,
											"end": 10418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10365,
											"end": 10418,
											"name": "tag",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 10365,
											"end": 10418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10355,
											"end": 10418,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10355,
											"end": 10418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10311,
											"end": 10428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10467,
											"end": 10469,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10493,
											"end": 10546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 10538,
											"end": 10545,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10529,
											"end": 10535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10518,
											"end": 10527,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 10493,
											"end": 10546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10546,
											"name": "tag",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 10493,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10483,
											"end": 10546,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10483,
											"end": 10546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10595,
											"end": 10597,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10621,
											"end": 10671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 10663,
											"end": 10670,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10654,
											"end": 10660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10643,
											"end": 10652,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10639,
											"end": 10661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10621,
											"end": 10671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 10621,
											"end": 10671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10621,
											"end": 10671,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 10621,
											"end": 10671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10611,
											"end": 10671,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10611,
											"end": 10671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10566,
											"end": 10681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10688,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10688,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10688,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10841,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 10694,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10765,
											"end": 10774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10798,
											"end": 10835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 10829,
											"end": 10834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10798,
											"end": 10835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 10798,
											"end": 10835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10798,
											"end": 10835,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 10798,
											"end": 10835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10785,
											"end": 10835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10785,
											"end": 10835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 11020,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 10847,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10955,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 11007,
											"end": 11012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10955,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 10955,
											"end": 11013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10955,
											"end": 11013,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 10955,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10950,
											"end": 10953,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10943,
											"end": 11014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 11020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 11020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 11020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11290,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 11026,
											"end": 11290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11140,
											"end": 11144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11178,
											"end": 11180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11167,
											"end": 11176,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11163,
											"end": 11181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11191,
											"end": 11283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 11280,
											"end": 11281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11269,
											"end": 11278,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11256,
											"end": 11262,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11191,
											"end": 11283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 11191,
											"end": 11283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11191,
											"end": 11283,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 11191,
											"end": 11283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11290,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11290,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11414,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 11296,
											"end": 11414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 11401,
											"end": 11406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 11383,
											"end": 11407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11407,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 11383,
											"end": 11407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11378,
											"end": 11381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11371,
											"end": 11408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11642,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 11420,
											"end": 11642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11513,
											"end": 11517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11551,
											"end": 11553,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11540,
											"end": 11549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11536,
											"end": 11554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11528,
											"end": 11554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11564,
											"end": 11635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 11632,
											"end": 11633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11621,
											"end": 11630,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11617,
											"end": 11634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11608,
											"end": 11614,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11564,
											"end": 11635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 11564,
											"end": 11635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11564,
											"end": 11635,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 11564,
											"end": 11635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11642,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 11980,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11648,
											"end": 11980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11769,
											"end": 11773,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11807,
											"end": 11809,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11796,
											"end": 11805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 11810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11784,
											"end": 11810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11784,
											"end": 11810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 11888,
											"end": 11889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11877,
											"end": 11886,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11873,
											"end": 11890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11864,
											"end": 11870,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 11820,
											"end": 11891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "tag",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 11820,
											"end": 11891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11901,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 11969,
											"end": 11971,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11958,
											"end": 11967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11954,
											"end": 11972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 11951,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11901,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 11901,
											"end": 11973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11901,
											"end": 11973,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 11901,
											"end": 11973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 11980,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 11980,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 11980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 11980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 11980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 11980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12126,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 11986,
											"end": 12126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12050,
											"end": 12059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12083,
											"end": 12120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 12114,
											"end": 12119,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12083,
											"end": 12120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 12083,
											"end": 12120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12083,
											"end": 12120,
											"name": "tag",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 12083,
											"end": 12120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12070,
											"end": 12120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12070,
											"end": 12120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12132,
											"end": 12291,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 12132,
											"end": 12291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12233,
											"end": 12284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 12278,
											"end": 12283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12233,
											"end": 12284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 12233,
											"end": 12284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12233,
											"end": 12284,
											"name": "tag",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 12233,
											"end": 12284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12221,
											"end": 12285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12132,
											"end": 12291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12132,
											"end": 12291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12132,
											"end": 12291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12297,
											"end": 12547,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 12297,
											"end": 12547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12404,
											"end": 12408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12442,
											"end": 12444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12431,
											"end": 12440,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12427,
											"end": 12445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12419,
											"end": 12445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12419,
											"end": 12445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12455,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 12537,
											"end": 12538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12526,
											"end": 12535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12522,
											"end": 12539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12513,
											"end": 12519,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12455,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 12455,
											"end": 12540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12455,
											"end": 12540,
											"name": "tag",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 12455,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12297,
											"end": 12547,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12297,
											"end": 12547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12297,
											"end": 12547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12297,
											"end": 12547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12297,
											"end": 12547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12553,
											"end": 12882,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 12553,
											"end": 12882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12612,
											"end": 12618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12661,
											"end": 12663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12649,
											"end": 12658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12640,
											"end": 12647,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12636,
											"end": 12659,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12632,
											"end": 12664,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12629,
											"end": 12748,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12629,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 12629,
											"end": 12748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12667,
											"end": 12746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 12667,
											"end": 12746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 12667,
											"end": 12746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12667,
											"end": 12746,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 12667,
											"end": 12746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12629,
											"end": 12748,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 12629,
											"end": 12748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12787,
											"end": 12788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12812,
											"end": 12865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 12857,
											"end": 12864,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12837,
											"end": 12846,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12833,
											"end": 12855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12812,
											"end": 12865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 12812,
											"end": 12865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12812,
											"end": 12865,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 12812,
											"end": 12865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12802,
											"end": 12865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12802,
											"end": 12865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12758,
											"end": 12875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12553,
											"end": 12882,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12553,
											"end": 12882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12553,
											"end": 12882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12553,
											"end": 12882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12553,
											"end": 12882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 13002,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 12888,
											"end": 13002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12955,
											"end": 12961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12989,
											"end": 12994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12983,
											"end": 12995,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12973,
											"end": 12995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12973,
											"end": 12995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 13002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 13002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 13002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 13002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13192,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 13008,
											"end": 13192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13141,
											"end": 13147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13136,
											"end": 13139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13129,
											"end": 13148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13181,
											"end": 13185,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13176,
											"end": 13179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13172,
											"end": 13186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13157,
											"end": 13186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13157,
											"end": 13186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13192,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13198,
											"end": 13330,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 13198,
											"end": 13330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13265,
											"end": 13269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13288,
											"end": 13291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13280,
											"end": 13291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13280,
											"end": 13291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13313,
											"end": 13316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13301,
											"end": 13323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13301,
											"end": 13323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13198,
											"end": 13330,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13198,
											"end": 13330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13198,
											"end": 13330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13198,
											"end": 13330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13336,
											"end": 13444,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 13336,
											"end": 13444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 13431,
											"end": 13436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 13413,
											"end": 13437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13437,
											"name": "tag",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 13413,
											"end": 13437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13408,
											"end": 13411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13401,
											"end": 13438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13336,
											"end": 13444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13336,
											"end": 13444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13336,
											"end": 13444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13450,
											"end": 13629,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 13450,
											"end": 13629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13519,
											"end": 13529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 13582,
											"end": 13585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13574,
											"end": 13580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 13540,
											"end": 13586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13618,
											"end": 13622,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13613,
											"end": 13616,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13609,
											"end": 13623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13595,
											"end": 13623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13595,
											"end": 13623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13450,
											"end": 13629,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13450,
											"end": 13629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13450,
											"end": 13629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13450,
											"end": 13629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13450,
											"end": 13629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13748,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 13635,
											"end": 13748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13705,
											"end": 13709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13737,
											"end": 13741,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13732,
											"end": 13735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13728,
											"end": 13742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13720,
											"end": 13742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13720,
											"end": 13742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13784,
											"end": 14516,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 13784,
											"end": 14516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13903,
											"end": 13906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13932,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 13980,
											"end": 13985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13932,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 13932,
											"end": 13986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13932,
											"end": 13986,
											"name": "tag",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 13932,
											"end": 13986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14002,
											"end": 14088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 14081,
											"end": 14087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14076,
											"end": 14079,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14002,
											"end": 14088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 14002,
											"end": 14088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14002,
											"end": 14088,
											"name": "tag",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 14002,
											"end": 14088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13995,
											"end": 14088,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13995,
											"end": 14088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14112,
											"end": 14168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 14162,
											"end": 14167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14112,
											"end": 14168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 14112,
											"end": 14168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14112,
											"end": 14168,
											"name": "tag",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 14112,
											"end": 14168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14191,
											"end": 14198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14222,
											"end": 14223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "tag",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14238,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14229,
											"end": 14230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14226,
											"end": 14239,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14308,
											"end": 14314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14302,
											"end": 14315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14335,
											"end": 14398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 14394,
											"end": 14397,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14379,
											"end": 14392,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14335,
											"end": 14398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 14335,
											"end": 14398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14335,
											"end": 14398,
											"name": "tag",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 14335,
											"end": 14398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14328,
											"end": 14398,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 14328,
											"end": 14398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 14474,
											"end": 14480,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 14421,
											"end": 14481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "tag",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 14421,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14411,
											"end": 14481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14411,
											"end": 14481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14267,
											"end": 14491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14254,
											"end": 14255,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14251,
											"end": 14252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14247,
											"end": 14256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14242,
											"end": 14256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14242,
											"end": 14256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "tag",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 14207,
											"end": 14491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14211,
											"end": 14225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14507,
											"end": 14510,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14500,
											"end": 14510,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14500,
											"end": 14510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 14516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 14516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 14516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13784,
											"end": 14516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13784,
											"end": 14516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13784,
											"end": 14516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13784,
											"end": 14516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13784,
											"end": 14516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14895,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 14522,
											"end": 14895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14665,
											"end": 14669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14703,
											"end": 14705,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14692,
											"end": 14701,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14688,
											"end": 14706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 14761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14746,
											"end": 14750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14742,
											"end": 14762,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14738,
											"end": 14739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14727,
											"end": 14736,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14723,
											"end": 14740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14716,
											"end": 14763,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14780,
											"end": 14888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 14883,
											"end": 14887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14874,
											"end": 14880,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14780,
											"end": 14888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 14780,
											"end": 14888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14780,
											"end": 14888,
											"name": "tag",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 14780,
											"end": 14888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14772,
											"end": 14888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14895,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14901,
											"end": 15050,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 14901,
											"end": 15050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14974,
											"end": 14983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15007,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 15038,
											"end": 15043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15007,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 15007,
											"end": 15044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15007,
											"end": 15044,
											"name": "tag",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 15007,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14994,
											"end": 15044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14994,
											"end": 15044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14901,
											"end": 15050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14901,
											"end": 15050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14901,
											"end": 15050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14901,
											"end": 15050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15056,
											"end": 15233,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 15056,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15166,
											"end": 15226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 15220,
											"end": 15225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15166,
											"end": 15226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 15166,
											"end": 15226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15166,
											"end": 15226,
											"name": "tag",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 15166,
											"end": 15226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15161,
											"end": 15164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15056,
											"end": 15233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15056,
											"end": 15233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15056,
											"end": 15233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15239,
											"end": 15507,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 15239,
											"end": 15507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15355,
											"end": 15359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15393,
											"end": 15395,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15382,
											"end": 15391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15378,
											"end": 15396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15370,
											"end": 15396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15370,
											"end": 15396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15406,
											"end": 15500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 15497,
											"end": 15498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15486,
											"end": 15495,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15482,
											"end": 15499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15473,
											"end": 15479,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15406,
											"end": 15500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 15406,
											"end": 15500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15406,
											"end": 15500,
											"name": "tag",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 15406,
											"end": 15500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15239,
											"end": 15507,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15239,
											"end": 15507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15239,
											"end": 15507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15239,
											"end": 15507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15239,
											"end": 15507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15513,
											"end": 15693,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 15513,
											"end": 15693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15561,
											"end": 15638,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15558,
											"end": 15559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15551,
											"end": 15639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15658,
											"end": 15662,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 15655,
											"end": 15656,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15648,
											"end": 15663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15682,
											"end": 15686,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15679,
											"end": 15680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15672,
											"end": 15687,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15699,
											"end": 15868,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 15699,
											"end": 15868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15783,
											"end": 15794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15817,
											"end": 15823,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 15815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15805,
											"end": 15824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15857,
											"end": 15861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15852,
											"end": 15855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15848,
											"end": 15862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15833,
											"end": 15862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15833,
											"end": 15862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15699,
											"end": 15868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15699,
											"end": 15868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15699,
											"end": 15868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15699,
											"end": 15868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15699,
											"end": 15868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15874,
											"end": 16038,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 15874,
											"end": 16038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16014,
											"end": 16030,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206973207A65726F000000000000000000000000000000000000"
										},
										{
											"begin": 16010,
											"end": 16011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16002,
											"end": 16008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15998,
											"end": 16012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15991,
											"end": 16031,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15874,
											"end": 16038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15874,
											"end": 16038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16044,
											"end": 16410,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 16044,
											"end": 16410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16186,
											"end": 16189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16207,
											"end": 16274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 16271,
											"end": 16273,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 16266,
											"end": 16269,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16207,
											"end": 16274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 16207,
											"end": 16274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16207,
											"end": 16274,
											"name": "tag",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 16207,
											"end": 16274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16200,
											"end": 16274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16200,
											"end": 16274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16283,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 16372,
											"end": 16375,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16283,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 16283,
											"end": 16376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16283,
											"end": 16376,
											"name": "tag",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 16283,
											"end": 16376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16401,
											"end": 16403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16396,
											"end": 16399,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16392,
											"end": 16404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16385,
											"end": 16404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16385,
											"end": 16404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16044,
											"end": 16410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16044,
											"end": 16410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16044,
											"end": 16410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16044,
											"end": 16410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16416,
											"end": 16835,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 16416,
											"end": 16835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16582,
											"end": 16586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16620,
											"end": 16622,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16609,
											"end": 16618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16605,
											"end": 16623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16597,
											"end": 16623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16669,
											"end": 16678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16663,
											"end": 16667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16659,
											"end": 16679,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16655,
											"end": 16656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16644,
											"end": 16653,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16640,
											"end": 16657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16633,
											"end": 16680,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16697,
											"end": 16828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 16823,
											"end": 16827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16697,
											"end": 16828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 16697,
											"end": 16828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16697,
											"end": 16828,
											"name": "tag",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 16697,
											"end": 16828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16689,
											"end": 16828,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16689,
											"end": 16828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16416,
											"end": 16835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16416,
											"end": 16835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16416,
											"end": 16835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16416,
											"end": 16835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16841,
											"end": 17173,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 16841,
											"end": 17173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16962,
											"end": 16966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17000,
											"end": 17002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16989,
											"end": 16998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16985,
											"end": 17003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16977,
											"end": 17003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16977,
											"end": 17003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17013,
											"end": 17084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "682"
										},
										{
											"begin": 17081,
											"end": 17082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17070,
											"end": 17079,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17066,
											"end": 17083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17057,
											"end": 17063,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17013,
											"end": 17084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 17013,
											"end": 17084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17013,
											"end": 17084,
											"name": "tag",
											"source": 1,
											"value": "682"
										},
										{
											"begin": 17013,
											"end": 17084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17094,
											"end": 17166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 17162,
											"end": 17164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17151,
											"end": 17160,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17147,
											"end": 17165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17138,
											"end": 17144,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17094,
											"end": 17166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 17094,
											"end": 17166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17094,
											"end": 17166,
											"name": "tag",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 17094,
											"end": 17166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16841,
											"end": 17173,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16841,
											"end": 17173,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16841,
											"end": 17173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16841,
											"end": 17173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16841,
											"end": 17173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16841,
											"end": 17173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17179,
											"end": 17316,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 17179,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17233,
											"end": 17238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17264,
											"end": 17270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17258,
											"end": 17271,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17249,
											"end": 17271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17249,
											"end": 17271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17280,
											"end": 17310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 17304,
											"end": 17309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17280,
											"end": 17310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 17280,
											"end": 17310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17280,
											"end": 17310,
											"name": "tag",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 17280,
											"end": 17310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17179,
											"end": 17316,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17179,
											"end": 17316,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17179,
											"end": 17316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17179,
											"end": 17316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17179,
											"end": 17316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17322,
											"end": 17667,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 17322,
											"end": 17667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17389,
											"end": 17395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17438,
											"end": 17440,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17426,
											"end": 17435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17417,
											"end": 17424,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17413,
											"end": 17436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17409,
											"end": 17441,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 17406,
											"end": 17525,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17406,
											"end": 17525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "687"
										},
										{
											"begin": 17406,
											"end": 17525,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17444,
											"end": 17523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 17444,
											"end": 17523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 17444,
											"end": 17523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17444,
											"end": 17523,
											"name": "tag",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 17444,
											"end": 17523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17406,
											"end": 17525,
											"name": "tag",
											"source": 1,
											"value": "687"
										},
										{
											"begin": 17406,
											"end": 17525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17564,
											"end": 17565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17589,
											"end": 17650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 17642,
											"end": 17649,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17633,
											"end": 17639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17622,
											"end": 17631,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17618,
											"end": 17640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17589,
											"end": 17650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 17589,
											"end": 17650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17589,
											"end": 17650,
											"name": "tag",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 17589,
											"end": 17650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17579,
											"end": 17650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17579,
											"end": 17650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17535,
											"end": 17660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17322,
											"end": 17667,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17322,
											"end": 17667,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17322,
											"end": 17667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17322,
											"end": 17667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17322,
											"end": 17667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17673,
											"end": 18005,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 17673,
											"end": 18005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17794,
											"end": 17798,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17832,
											"end": 17834,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17821,
											"end": 17830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17817,
											"end": 17835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17809,
											"end": 17835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17809,
											"end": 17835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17845,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 17913,
											"end": 17914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17902,
											"end": 17911,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17898,
											"end": 17915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17889,
											"end": 17895,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17845,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 17845,
											"end": 17916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17845,
											"end": 17916,
											"name": "tag",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 17845,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17926,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "692"
										},
										{
											"begin": 17994,
											"end": 17996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17983,
											"end": 17992,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17979,
											"end": 17997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17970,
											"end": 17976,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17926,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 17926,
											"end": 17998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17926,
											"end": 17998,
											"name": "tag",
											"source": 1,
											"value": "692"
										},
										{
											"begin": 17926,
											"end": 17998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17673,
											"end": 18005,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17673,
											"end": 18005,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17673,
											"end": 18005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17673,
											"end": 18005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17673,
											"end": 18005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17673,
											"end": 18005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18011,
											"end": 18193,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 18011,
											"end": 18193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18151,
											"end": 18185,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 18147,
											"end": 18148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18139,
											"end": 18145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18135,
											"end": 18149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18128,
											"end": 18186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18011,
											"end": 18193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18011,
											"end": 18193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18199,
											"end": 18565,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 18199,
											"end": 18565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18341,
											"end": 18344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18362,
											"end": 18429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 18426,
											"end": 18428,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18421,
											"end": 18424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18362,
											"end": 18429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 18362,
											"end": 18429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18362,
											"end": 18429,
											"name": "tag",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 18362,
											"end": 18429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18355,
											"end": 18429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18355,
											"end": 18429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18438,
											"end": 18531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "696"
										},
										{
											"begin": 18527,
											"end": 18530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18438,
											"end": 18531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 18438,
											"end": 18531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18438,
											"end": 18531,
											"name": "tag",
											"source": 1,
											"value": "696"
										},
										{
											"begin": 18438,
											"end": 18531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18556,
											"end": 18558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18551,
											"end": 18554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18547,
											"end": 18559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18540,
											"end": 18559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18540,
											"end": 18559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18199,
											"end": 18565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18199,
											"end": 18565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18199,
											"end": 18565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18199,
											"end": 18565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18571,
											"end": 18990,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 18571,
											"end": 18990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18737,
											"end": 18741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18775,
											"end": 18777,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18764,
											"end": 18773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18760,
											"end": 18778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18752,
											"end": 18778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18752,
											"end": 18778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18824,
											"end": 18833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18818,
											"end": 18822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18814,
											"end": 18834,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18810,
											"end": 18811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18799,
											"end": 18808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18795,
											"end": 18812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18788,
											"end": 18835,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18852,
											"end": 18983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 18978,
											"end": 18982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18852,
											"end": 18983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 18852,
											"end": 18983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18852,
											"end": 18983,
											"name": "tag",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 18852,
											"end": 18983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18844,
											"end": 18983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18844,
											"end": 18983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18571,
											"end": 18990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18571,
											"end": 18990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18571,
											"end": 18990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18571,
											"end": 18990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18996,
											"end": 19139,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 18996,
											"end": 19139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19053,
											"end": 19058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19084,
											"end": 19090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19078,
											"end": 19091,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19069,
											"end": 19091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19069,
											"end": 19091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19100,
											"end": 19133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 19127,
											"end": 19132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19100,
											"end": 19133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 19100,
											"end": 19133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19100,
											"end": 19133,
											"name": "tag",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 19100,
											"end": 19133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18996,
											"end": 19139,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18996,
											"end": 19139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18996,
											"end": 19139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18996,
											"end": 19139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18996,
											"end": 19139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19145,
											"end": 19496,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 19145,
											"end": 19496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19215,
											"end": 19221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19264,
											"end": 19266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19252,
											"end": 19261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19243,
											"end": 19250,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19239,
											"end": 19262,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19235,
											"end": 19267,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 19232,
											"end": 19351,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19232,
											"end": 19351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 19232,
											"end": 19351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19270,
											"end": 19349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 19270,
											"end": 19349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 19270,
											"end": 19349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19270,
											"end": 19349,
											"name": "tag",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 19270,
											"end": 19349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19232,
											"end": 19351,
											"name": "tag",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 19232,
											"end": 19351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19390,
											"end": 19391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19415,
											"end": 19479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 19471,
											"end": 19478,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19462,
											"end": 19468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19451,
											"end": 19460,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19447,
											"end": 19469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19415,
											"end": 19479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 19415,
											"end": 19479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19415,
											"end": 19479,
											"name": "tag",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 19415,
											"end": 19479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19405,
											"end": 19479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19405,
											"end": 19479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19361,
											"end": 19489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19145,
											"end": 19496,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19145,
											"end": 19496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19145,
											"end": 19496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19145,
											"end": 19496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19145,
											"end": 19496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19502,
											"end": 19682,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 19502,
											"end": 19682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19550,
											"end": 19627,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19547,
											"end": 19548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19540,
											"end": 19628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19647,
											"end": 19651,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 19644,
											"end": 19645,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19637,
											"end": 19652,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19671,
											"end": 19675,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 19668,
											"end": 19669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19661,
											"end": 19676,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19688,
											"end": 19921,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 19688,
											"end": 19921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19727,
											"end": 19730,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19750,
											"end": 19774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 19768,
											"end": 19773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19750,
											"end": 19774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 19750,
											"end": 19774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19750,
											"end": 19774,
											"name": "tag",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 19750,
											"end": 19774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19741,
											"end": 19774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19741,
											"end": 19774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19796,
											"end": 19862,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19789,
											"end": 19794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19786,
											"end": 19863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19783,
											"end": 19886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 19783,
											"end": 19886,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19866,
											"end": 19884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 19866,
											"end": 19884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 19866,
											"end": 19884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19866,
											"end": 19884,
											"name": "tag",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 19866,
											"end": 19884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19783,
											"end": 19886,
											"name": "tag",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 19783,
											"end": 19886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19913,
											"end": 19914,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19906,
											"end": 19911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19902,
											"end": 19915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19895,
											"end": 19915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19895,
											"end": 19915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19688,
											"end": 19921,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19688,
											"end": 19921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19688,
											"end": 19921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19688,
											"end": 19921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19927,
											"end": 20106,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 19927,
											"end": 20106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20067,
											"end": 20098,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520617265206E6F74204F776E6572206F6620746F6B656E206964000000"
										},
										{
											"begin": 20063,
											"end": 20064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20055,
											"end": 20061,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20051,
											"end": 20065,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20044,
											"end": 20099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19927,
											"end": 20106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19927,
											"end": 20106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20112,
											"end": 20478,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 20112,
											"end": 20478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20254,
											"end": 20257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20275,
											"end": 20342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 20339,
											"end": 20341,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 20334,
											"end": 20337,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20275,
											"end": 20342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 20275,
											"end": 20342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20275,
											"end": 20342,
											"name": "tag",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 20275,
											"end": 20342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20268,
											"end": 20342,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20268,
											"end": 20342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20351,
											"end": 20444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 20440,
											"end": 20443,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20351,
											"end": 20444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 20351,
											"end": 20444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20351,
											"end": 20444,
											"name": "tag",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 20351,
											"end": 20444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20469,
											"end": 20471,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20464,
											"end": 20467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20460,
											"end": 20472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 20472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 20472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20112,
											"end": 20478,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20112,
											"end": 20478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20112,
											"end": 20478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20112,
											"end": 20478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20484,
											"end": 20903,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 20484,
											"end": 20903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20650,
											"end": 20654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20688,
											"end": 20690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20677,
											"end": 20686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20673,
											"end": 20691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20665,
											"end": 20691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20665,
											"end": 20691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20737,
											"end": 20746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20731,
											"end": 20735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20727,
											"end": 20747,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20723,
											"end": 20724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20712,
											"end": 20721,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20708,
											"end": 20725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20701,
											"end": 20748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20765,
											"end": 20896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 20891,
											"end": 20895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20765,
											"end": 20896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 20765,
											"end": 20896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20765,
											"end": 20896,
											"name": "tag",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 20765,
											"end": 20896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20757,
											"end": 20896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20757,
											"end": 20896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20484,
											"end": 20903,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20484,
											"end": 20903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20484,
											"end": 20903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20484,
											"end": 20903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20909,
											"end": 21077,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 20909,
											"end": 21077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21049,
											"end": 21069,
											"name": "PUSH",
											"source": 1,
											"value": "77697468647261773A206E6F7420676F6F640000000000000000000000000000"
										},
										{
											"begin": 21045,
											"end": 21046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21037,
											"end": 21043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21033,
											"end": 21047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21026,
											"end": 21070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20909,
											"end": 21077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20909,
											"end": 21077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21083,
											"end": 21449,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 21083,
											"end": 21449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21225,
											"end": 21228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21246,
											"end": 21313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 21310,
											"end": 21312,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 21305,
											"end": 21308,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21246,
											"end": 21313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 21246,
											"end": 21313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21246,
											"end": 21313,
											"name": "tag",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 21246,
											"end": 21313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21239,
											"end": 21313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21239,
											"end": 21313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21322,
											"end": 21415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 21411,
											"end": 21414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21322,
											"end": 21415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 21322,
											"end": 21415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21322,
											"end": 21415,
											"name": "tag",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 21322,
											"end": 21415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21440,
											"end": 21442,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21435,
											"end": 21438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21431,
											"end": 21443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21424,
											"end": 21443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21424,
											"end": 21443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21083,
											"end": 21449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21083,
											"end": 21449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21083,
											"end": 21449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21083,
											"end": 21449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21455,
											"end": 21874,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 21455,
											"end": 21874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21621,
											"end": 21625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21659,
											"end": 21661,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21648,
											"end": 21657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21644,
											"end": 21662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21636,
											"end": 21662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21636,
											"end": 21662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21708,
											"end": 21717,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21702,
											"end": 21706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21698,
											"end": 21718,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21694,
											"end": 21695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21683,
											"end": 21692,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21679,
											"end": 21696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21672,
											"end": 21719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21736,
											"end": 21867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 21862,
											"end": 21866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21736,
											"end": 21867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 21736,
											"end": 21867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21736,
											"end": 21867,
											"name": "tag",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 21736,
											"end": 21867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21728,
											"end": 21867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21728,
											"end": 21867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21455,
											"end": 21874,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21455,
											"end": 21874,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21455,
											"end": 21874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21455,
											"end": 21874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 22322,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 21880,
											"end": 22322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22029,
											"end": 22033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22067,
											"end": 22069,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 22056,
											"end": 22065,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22052,
											"end": 22070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22044,
											"end": 22070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22044,
											"end": 22070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22080,
											"end": 22151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 22148,
											"end": 22149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22137,
											"end": 22146,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22133,
											"end": 22150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22124,
											"end": 22130,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22080,
											"end": 22151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 22080,
											"end": 22151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22080,
											"end": 22151,
											"name": "tag",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 22080,
											"end": 22151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22161,
											"end": 22233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 22229,
											"end": 22231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22218,
											"end": 22227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22214,
											"end": 22232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22205,
											"end": 22211,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22161,
											"end": 22233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 22161,
											"end": 22233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22161,
											"end": 22233,
											"name": "tag",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 22161,
											"end": 22233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22243,
											"end": 22315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "725"
										},
										{
											"begin": 22311,
											"end": 22313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22300,
											"end": 22309,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22296,
											"end": 22314,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22287,
											"end": 22293,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22243,
											"end": 22315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 22243,
											"end": 22315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22243,
											"end": 22315,
											"name": "tag",
											"source": 1,
											"value": "725"
										},
										{
											"begin": 22243,
											"end": 22315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 22322,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 22322,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 22322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 22322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 22322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 22322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21880,
											"end": 22322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22328,
											"end": 22553,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 22328,
											"end": 22553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22468,
											"end": 22502,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 22464,
											"end": 22465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22456,
											"end": 22462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22452,
											"end": 22466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22445,
											"end": 22503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22537,
											"end": 22545,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22532,
											"end": 22534,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22524,
											"end": 22530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22520,
											"end": 22535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22513,
											"end": 22546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22328,
											"end": 22553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22328,
											"end": 22553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22559,
											"end": 22925,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 22559,
											"end": 22925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22701,
											"end": 22704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22722,
											"end": 22789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "728"
										},
										{
											"begin": 22786,
											"end": 22788,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 22781,
											"end": 22784,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22722,
											"end": 22789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 22722,
											"end": 22789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22722,
											"end": 22789,
											"name": "tag",
											"source": 1,
											"value": "728"
										},
										{
											"begin": 22722,
											"end": 22789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22715,
											"end": 22789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22715,
											"end": 22789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22798,
											"end": 22891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 22887,
											"end": 22890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22798,
											"end": 22891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 22798,
											"end": 22891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22798,
											"end": 22891,
											"name": "tag",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 22798,
											"end": 22891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22916,
											"end": 22918,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22911,
											"end": 22914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22907,
											"end": 22919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22900,
											"end": 22919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22900,
											"end": 22919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22559,
											"end": 22925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22559,
											"end": 22925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22559,
											"end": 22925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22559,
											"end": 22925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22931,
											"end": 23350,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 22931,
											"end": 23350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23097,
											"end": 23101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23135,
											"end": 23137,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23124,
											"end": 23133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23120,
											"end": 23138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23112,
											"end": 23138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23112,
											"end": 23138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23184,
											"end": 23193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23178,
											"end": 23182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23174,
											"end": 23194,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23170,
											"end": 23171,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23159,
											"end": 23168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23155,
											"end": 23172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23148,
											"end": 23195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23212,
											"end": 23343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 23338,
											"end": 23342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23212,
											"end": 23343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 23212,
											"end": 23343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23212,
											"end": 23343,
											"name": "tag",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 23212,
											"end": 23343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23204,
											"end": 23343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23204,
											"end": 23343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22931,
											"end": 23350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22931,
											"end": 23350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22931,
											"end": 23350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22931,
											"end": 23350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23356,
											"end": 23704,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 23356,
											"end": 23704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23396,
											"end": 23403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23419,
											"end": 23439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 23437,
											"end": 23438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23419,
											"end": 23439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 23419,
											"end": 23439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23419,
											"end": 23439,
											"name": "tag",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 23419,
											"end": 23439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23414,
											"end": 23439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23414,
											"end": 23439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23453,
											"end": 23473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 23471,
											"end": 23472,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23453,
											"end": 23473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 23453,
											"end": 23473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23453,
											"end": 23473,
											"name": "tag",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 23453,
											"end": 23473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23448,
											"end": 23473,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23448,
											"end": 23473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23641,
											"end": 23642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23573,
											"end": 23639,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23569,
											"end": 23643,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 23566,
											"end": 23567,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23563,
											"end": 23644,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 23558,
											"end": 23559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23551,
											"end": 23560,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 23544,
											"end": 23561,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 23540,
											"end": 23645,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23537,
											"end": 23668,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 23537,
											"end": 23668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 23537,
											"end": 23668,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23648,
											"end": 23666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 23648,
											"end": 23666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 23648,
											"end": 23666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23648,
											"end": 23666,
											"name": "tag",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 23648,
											"end": 23666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23537,
											"end": 23668,
											"name": "tag",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 23537,
											"end": 23668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23696,
											"end": 23697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23693,
											"end": 23694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23689,
											"end": 23698,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 23678,
											"end": 23698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23678,
											"end": 23698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23356,
											"end": 23704,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23356,
											"end": 23704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23356,
											"end": 23704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23356,
											"end": 23704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23356,
											"end": 23704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23710,
											"end": 23890,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 23710,
											"end": 23890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23758,
											"end": 23835,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23755,
											"end": 23756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23748,
											"end": 23836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23855,
											"end": 23859,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 23852,
											"end": 23853,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23845,
											"end": 23860,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23879,
											"end": 23883,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 23876,
											"end": 23877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23869,
											"end": 23884,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23896,
											"end": 24081,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 23896,
											"end": 24081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23936,
											"end": 23937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23953,
											"end": 23973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 23971,
											"end": 23972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23953,
											"end": 23973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 23953,
											"end": 23973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23953,
											"end": 23973,
											"name": "tag",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 23953,
											"end": 23973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23987,
											"end": 24007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 24005,
											"end": 24006,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23987,
											"end": 24007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 23987,
											"end": 24007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23987,
											"end": 24007,
											"name": "tag",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 23987,
											"end": 24007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23982,
											"end": 24007,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23982,
											"end": 24007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24026,
											"end": 24027,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24016,
											"end": 24051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "741"
										},
										{
											"begin": 24016,
											"end": 24051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24031,
											"end": 24049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 24031,
											"end": 24049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 24031,
											"end": 24049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24031,
											"end": 24049,
											"name": "tag",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 24031,
											"end": 24049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24016,
											"end": 24051,
											"name": "tag",
											"source": 1,
											"value": "741"
										},
										{
											"begin": 24016,
											"end": 24051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24073,
											"end": 24074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24070,
											"end": 24071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24066,
											"end": 24075,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 24061,
											"end": 24075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24061,
											"end": 24075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23896,
											"end": 24081,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23896,
											"end": 24081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23896,
											"end": 24081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23896,
											"end": 24081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23896,
											"end": 24081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24087,
											"end": 24307,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 24087,
											"end": 24307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24227,
											"end": 24261,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 24223,
											"end": 24224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24215,
											"end": 24221,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24211,
											"end": 24225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24204,
											"end": 24262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24296,
											"end": 24299,
											"name": "PUSH",
											"source": 1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24291,
											"end": 24293,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24283,
											"end": 24289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24279,
											"end": 24294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24272,
											"end": 24300,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24087,
											"end": 24307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24087,
											"end": 24307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24313,
											"end": 24679,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 24313,
											"end": 24679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24455,
											"end": 24458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24476,
											"end": 24543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 24540,
											"end": 24542,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 24535,
											"end": 24538,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24476,
											"end": 24543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 24476,
											"end": 24543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24476,
											"end": 24543,
											"name": "tag",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 24476,
											"end": 24543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24469,
											"end": 24543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24469,
											"end": 24543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24552,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 24641,
											"end": 24644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24552,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 24552,
											"end": 24645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24552,
											"end": 24645,
											"name": "tag",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 24552,
											"end": 24645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24670,
											"end": 24672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24665,
											"end": 24668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24661,
											"end": 24673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24654,
											"end": 24673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24654,
											"end": 24673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24313,
											"end": 24679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24313,
											"end": 24679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24313,
											"end": 24679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24313,
											"end": 24679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24685,
											"end": 25104,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 24685,
											"end": 25104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24851,
											"end": 24855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24889,
											"end": 24891,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24878,
											"end": 24887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24874,
											"end": 24892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24866,
											"end": 24892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24866,
											"end": 24892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24938,
											"end": 24947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24932,
											"end": 24936,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24928,
											"end": 24948,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24924,
											"end": 24925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24913,
											"end": 24922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24909,
											"end": 24926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24902,
											"end": 24949,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24966,
											"end": 25097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "748"
										},
										{
											"begin": 25092,
											"end": 25096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24966,
											"end": 25097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 24966,
											"end": 25097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24966,
											"end": 25097,
											"name": "tag",
											"source": 1,
											"value": "748"
										},
										{
											"begin": 24966,
											"end": 25097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24958,
											"end": 25097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24958,
											"end": 25097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24685,
											"end": 25104,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24685,
											"end": 25104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24685,
											"end": 25104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24685,
											"end": 25104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25110,
											"end": 25415,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 25110,
											"end": 25415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25150,
											"end": 25153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25169,
											"end": 25189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 25187,
											"end": 25188,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25169,
											"end": 25189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 25169,
											"end": 25189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25169,
											"end": 25189,
											"name": "tag",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 25169,
											"end": 25189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25164,
											"end": 25189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25164,
											"end": 25189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25203,
											"end": 25223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 25221,
											"end": 25222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25203,
											"end": 25223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 25203,
											"end": 25223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25203,
											"end": 25223,
											"name": "tag",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 25203,
											"end": 25223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25198,
											"end": 25223,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25198,
											"end": 25223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25357,
											"end": 25358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25289,
											"end": 25355,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25285,
											"end": 25359,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25282,
											"end": 25283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25279,
											"end": 25360,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 25276,
											"end": 25383,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25276,
											"end": 25383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 25276,
											"end": 25383,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25363,
											"end": 25381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 25363,
											"end": 25381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 25363,
											"end": 25381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25363,
											"end": 25381,
											"name": "tag",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 25363,
											"end": 25381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25276,
											"end": 25383,
											"name": "tag",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 25276,
											"end": 25383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25407,
											"end": 25408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25404,
											"end": 25405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25400,
											"end": 25409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25393,
											"end": 25409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25393,
											"end": 25409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25110,
											"end": 25415,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25110,
											"end": 25415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25110,
											"end": 25415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25110,
											"end": 25415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25110,
											"end": 25415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25421,
											"end": 25598,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 25421,
											"end": 25598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25561,
											"end": 25590,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 25557,
											"end": 25558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25549,
											"end": 25555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25545,
											"end": 25559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25538,
											"end": 25591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25421,
											"end": 25598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25421,
											"end": 25598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25604,
											"end": 25970,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 25604,
											"end": 25970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25746,
											"end": 25749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25767,
											"end": 25834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 25831,
											"end": 25833,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 25826,
											"end": 25829,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25767,
											"end": 25834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 25767,
											"end": 25834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25767,
											"end": 25834,
											"name": "tag",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 25767,
											"end": 25834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25760,
											"end": 25834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25760,
											"end": 25834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25843,
											"end": 25936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "757"
										},
										{
											"begin": 25932,
											"end": 25935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25843,
											"end": 25936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 25843,
											"end": 25936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25843,
											"end": 25936,
											"name": "tag",
											"source": 1,
											"value": "757"
										},
										{
											"begin": 25843,
											"end": 25936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25961,
											"end": 25963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25956,
											"end": 25959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25952,
											"end": 25964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25945,
											"end": 25964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25945,
											"end": 25964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25604,
											"end": 25970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25604,
											"end": 25970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25604,
											"end": 25970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25604,
											"end": 25970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25976,
											"end": 26395,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 25976,
											"end": 26395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26142,
											"end": 26146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26180,
											"end": 26182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26169,
											"end": 26178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26165,
											"end": 26183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26157,
											"end": 26183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26157,
											"end": 26183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26229,
											"end": 26238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26223,
											"end": 26227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26219,
											"end": 26239,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26215,
											"end": 26216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26204,
											"end": 26213,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26200,
											"end": 26217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26193,
											"end": 26240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26257,
											"end": 26388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 26383,
											"end": 26387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26257,
											"end": 26388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 26257,
											"end": 26388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26257,
											"end": 26388,
											"name": "tag",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 26257,
											"end": 26388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26249,
											"end": 26388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26249,
											"end": 26388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25976,
											"end": 26395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25976,
											"end": 26395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25976,
											"end": 26395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25976,
											"end": 26395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26401,
											"end": 26500,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 26401,
											"end": 26500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26453,
											"end": 26459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26487,
											"end": 26492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26481,
											"end": 26493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26471,
											"end": 26493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26471,
											"end": 26493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26401,
											"end": 26500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26401,
											"end": 26500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26401,
											"end": 26500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26401,
											"end": 26500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26506,
											"end": 26813,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 26506,
											"end": 26813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26574,
											"end": 26575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "tag",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26598,
											"end": 26604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26595,
											"end": 26596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26592,
											"end": 26605,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26683,
											"end": 26684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26678,
											"end": 26681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26674,
											"end": 26685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26668,
											"end": 26686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26664,
											"end": 26665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26659,
											"end": 26662,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26655,
											"end": 26666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26620,
											"end": 26622,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26617,
											"end": 26618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26613,
											"end": 26623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26608,
											"end": 26623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26608,
											"end": 26623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "tag",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 26584,
											"end": 26697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26715,
											"end": 26721,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26712,
											"end": 26713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26709,
											"end": 26722,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 26706,
											"end": 26807,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26706,
											"end": 26807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 26706,
											"end": 26807,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26795,
											"end": 26796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26786,
											"end": 26792,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26781,
											"end": 26784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26777,
											"end": 26793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26770,
											"end": 26797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26706,
											"end": 26807,
											"name": "tag",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 26706,
											"end": 26807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26555,
											"end": 26813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26506,
											"end": 26813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26506,
											"end": 26813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26506,
											"end": 26813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26506,
											"end": 26813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26819,
											"end": 27183,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 26819,
											"end": 27183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26907,
											"end": 26910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26935,
											"end": 26974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 26968,
											"end": 26973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26935,
											"end": 26974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 26935,
											"end": 26974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26935,
											"end": 26974,
											"name": "tag",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 26935,
											"end": 26974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26990,
											"end": 27061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 27054,
											"end": 27060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27049,
											"end": 27052,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26990,
											"end": 27061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 26990,
											"end": 27061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26990,
											"end": 27061,
											"name": "tag",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 26990,
											"end": 27061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26983,
											"end": 27061,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 26983,
											"end": 27061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27070,
											"end": 27122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 27115,
											"end": 27121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27110,
											"end": 27113,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 27103,
											"end": 27107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27096,
											"end": 27101,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 27092,
											"end": 27108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27070,
											"end": 27122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 27070,
											"end": 27122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27070,
											"end": 27122,
											"name": "tag",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 27070,
											"end": 27122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27147,
											"end": 27176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 27169,
											"end": 27175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27147,
											"end": 27176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 27147,
											"end": 27176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27147,
											"end": 27176,
											"name": "tag",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 27147,
											"end": 27176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27142,
											"end": 27145,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27138,
											"end": 27177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27131,
											"end": 27177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27131,
											"end": 27177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26911,
											"end": 27183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26819,
											"end": 27183,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26819,
											"end": 27183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26819,
											"end": 27183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26819,
											"end": 27183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26819,
											"end": 27183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27189,
											"end": 27502,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 27189,
											"end": 27502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27302,
											"end": 27306,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27340,
											"end": 27342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27329,
											"end": 27338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27325,
											"end": 27343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27317,
											"end": 27343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27317,
											"end": 27343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27389,
											"end": 27398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27383,
											"end": 27387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27379,
											"end": 27399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27375,
											"end": 27376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27364,
											"end": 27373,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27360,
											"end": 27377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27353,
											"end": 27400,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27417,
											"end": 27495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 27490,
											"end": 27494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27481,
											"end": 27487,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27417,
											"end": 27495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 27417,
											"end": 27495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27417,
											"end": 27495,
											"name": "tag",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 27417,
											"end": 27495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27409,
											"end": 27495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27409,
											"end": 27495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27189,
											"end": 27502,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 27189,
											"end": 27502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27189,
											"end": 27502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27189,
											"end": 27502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27189,
											"end": 27502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27508,
											"end": 27699,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 27508,
											"end": 27699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27548,
											"end": 27552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27568,
											"end": 27588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 27586,
											"end": 27587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27568,
											"end": 27588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 27568,
											"end": 27588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27568,
											"end": 27588,
											"name": "tag",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 27568,
											"end": 27588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27563,
											"end": 27588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27563,
											"end": 27588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27602,
											"end": 27622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "775"
										},
										{
											"begin": 27620,
											"end": 27621,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27602,
											"end": 27622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 27602,
											"end": 27622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27602,
											"end": 27622,
											"name": "tag",
											"source": 1,
											"value": "775"
										},
										{
											"begin": 27602,
											"end": 27622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27597,
											"end": 27622,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 27597,
											"end": 27622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27641,
											"end": 27642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27638,
											"end": 27639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27635,
											"end": 27643,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 27632,
											"end": 27666,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27632,
											"end": 27666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 27632,
											"end": 27666,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27646,
											"end": 27664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "777"
										},
										{
											"begin": 27646,
											"end": 27664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 27646,
											"end": 27664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27646,
											"end": 27664,
											"name": "tag",
											"source": 1,
											"value": "777"
										},
										{
											"begin": 27646,
											"end": 27664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27632,
											"end": 27666,
											"name": "tag",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 27632,
											"end": 27666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27691,
											"end": 27692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27688,
											"end": 27689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27684,
											"end": 27693,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27676,
											"end": 27693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27676,
											"end": 27693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27508,
											"end": 27699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 27508,
											"end": 27699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27508,
											"end": 27699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27508,
											"end": 27699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27508,
											"end": 27699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/NFTStake.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BONUS_MULTIPLIER()": "8aa28550",
							"DDT()": "cb3cba55",
							"DDTPerBlock()": "f395db2c",
							"NFTMasterChef()": "e4d09896",
							"add(uint256,address,bool)": "1eaaa045",
							"compundDDT(uint256)": "1395d8c9",
							"deposit(uint256,uint256)": "e2bbb158",
							"devaddr()": "d49e77cd",
							"getMultiplier(uint256,uint256)": "8dbb1e3a",
							"getUserTokenIds(uint256,address)": "d5545992",
							"massUpdatePools()": "630b5ba1",
							"migrator()": "7cd07e47",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"pendingDDT(uint256,address)": "2080baab",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"renounceOwnership()": "715018a6",
							"set(uint256,uint256,bool)": "64482f79",
							"setDevAddress(address)": "d0d41fe1",
							"setMigrator(address)": "23cf3118",
							"startBlock()": "48cd4cb1",
							"totalAllocPoint()": "17caf6f1",
							"transferOwnership(address)": "f2fde38b",
							"updateDDTPerBlock(uint256)": "612eee43",
							"updateMultiplier(uint256)": "5ffe6146",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_DDT\",\"type\":\"address\"},{\"internalType\":\"contract INFTMasterChef\",\"name\":\"_NFTMasterChef\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_DDTPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DDT\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DDTPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFTMasterChef\",\"outputs\":[{\"internalType\":\"contract INFTMasterChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC721\",\"name\":\"_NFTToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"compundDDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserTokenIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingDDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"NFTToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accDDTPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"setDevAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"updateDDTPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"NFTStake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x4e6d78b399a91204caad075df19c13d42ff62c5de0ec3ee9ab6f79cd1bc8bcec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://586f5366527735d1be2884b96a86411c64bb06f418c3e9ddb5380a058e159a2c\",\"dweb:/ipfs/QmbEg3w8VaWsiEkMYZFhrPLwNY1kK8xMKW2J5S5kgad1VN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1103,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "NFTMasterChef",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(INFTMasterChef)1071"
							},
							{
								"astId": 1106,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "DDT",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)286"
							},
							{
								"astId": 1108,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "devaddr",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1110,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "DDTPerBlock",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1113,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "BONUS_MULTIPLIER",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1116,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "migrator",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IMigratorChef)927"
							},
							{
								"astId": 1120,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "poolInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_struct(PoolInfo)1100_storage)dyn_storage"
							},
							{
								"astId": 1127,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "userInfo",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1090_storage))"
							},
							{
								"astId": 1130,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1132,
								"contract": "contracts/NFTStake.sol:NFTStake",
								"label": "startBlock",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)1100_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1100_storage",
								"encoding": "dynamic_array",
								"label": "struct NFTStake.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)286": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)1048": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_contract(IMigratorChef)927": {
								"encoding": "inplace",
								"label": "contract IMigratorChef",
								"numberOfBytes": "20"
							},
							"t_contract(INFTMasterChef)1071": {
								"encoding": "inplace",
								"label": "contract INFTMasterChef",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)1090_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct NFTStake.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1090_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1090_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1090_storage)"
							},
							"t_struct(PoolInfo)1100_storage": {
								"encoding": "inplace",
								"label": "struct NFTStake.PoolInfo",
								"members": [
									{
										"astId": 1093,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "NFTToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC721)1048"
									},
									{
										"astId": 1095,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1097,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1099,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "accDDTPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(UserInfo)1090_storage": {
								"encoding": "inplace",
								"label": "struct NFTStake.UserInfo",
								"members": [
									{
										"astId": 1085,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "tokenIds",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_uint256)dyn_storage"
									},
									{
										"astId": 1087,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1089,
										"contract": "contracts/NFTStake.sol:NFTStake",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"notice": "Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x4e6d78b399a91204caad075df19c13d42ff62c5de0ec3ee9ab6f79cd1bc8bcec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://586f5366527735d1be2884b96a86411c64bb06f418c3e9ddb5380a058e159a2c\",\"dweb:/ipfs/QmbEg3w8VaWsiEkMYZFhrPLwNY1kK8xMKW2J5S5kgad1VN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "contracts/NFTStake.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStake.sol\":16161:19512  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStake.sol\":16161:19512  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206f0895310404d6f02f063547f2332365d1d7bfc76cf2c6cd12cfc0c99c1de82864736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f0895310404d6f02f063547f2332365d1d7bfc76cf2c6cd12cfc0c99c1de82864736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x895310404D6F02F063547F2332365D1 0xD7 0xBF 0xC7 PUSH13 0xF2C6CD12CFC0C99C1DE8286473 PUSH16 0x6C634300080F00330000000000000000 ",
							"sourceMap": "16161:3351:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f0895310404d6f02f063547f2332365d1d7bfc76cf2c6cd12cfc0c99c1de82864736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x895310404D6F02F063547F2332365D1 0xD7 0xBF 0xC7 PUSH13 0xF2C6CD12CFC0C99C1DE8286473 PUSH16 0x6C634300080F00330000000000000000 ",
							"sourceMap": "16161:3351:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16161,
									"end": 19512,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206f0895310404d6f02f063547f2332365d1d7bfc76cf2c6cd12cfc0c99c1de82864736f6c634300080f0033",
									".code": [
										{
											"begin": 16161,
											"end": 19512,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16161,
											"end": 19512,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/NFTStake.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x4e6d78b399a91204caad075df19c13d42ff62c5de0ec3ee9ab6f79cd1bc8bcec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://586f5366527735d1be2884b96a86411c64bb06f418c3e9ddb5380a058e159a2c\",\"dweb:/ipfs/QmbEg3w8VaWsiEkMYZFhrPLwNY1kK8xMKW2J5S5kgad1VN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStake.sol\":200:5048  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStake.sol\":200:5048  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a6ffecaab96fa63d27973d7e88a8202132002dd31f755945d5371edff8cb1bd664736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6ffecaab96fa63d27973d7e88a8202132002dd31f755945d5371edff8cb1bd664736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 SELFDESTRUCT 0xEC 0xAA 0xB9 PUSH16 0xA63D27973D7E88A8202132002DD31F75 MSIZE GASLIMIT 0xD5 CALLDATACOPY 0x1E 0xDF 0xF8 0xCB SHL 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "200:4848:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6ffecaab96fa63d27973d7e88a8202132002dd31f755945d5371edff8cb1bd664736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 SELFDESTRUCT 0xEC 0xAA 0xB9 PUSH16 0xA63D27973D7E88A8202132002DD31F75 MSIZE GASLIMIT 0xD5 CALLDATACOPY 0x1E 0xDF 0xF8 0xCB SHL 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "200:4848:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 5048,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6ffecaab96fa63d27973d7e88a8202132002dd31f755945d5371edff8cb1bd664736f6c634300080f0033",
									".code": [
										{
											"begin": 200,
											"end": 5048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 5048,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/NFTStake.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStake.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTStake.sol\":{\"keccak256\":\"0x4e6d78b399a91204caad075df19c13d42ff62c5de0ec3ee9ab6f79cd1bc8bcec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://586f5366527735d1be2884b96a86411c64bb06f418c3e9ddb5380a058e159a2c\",\"dweb:/ipfs/QmbEg3w8VaWsiEkMYZFhrPLwNY1kK8xMKW2J5S5kgad1VN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/NFTStake.sol": {
				"ast": {
					"absolutePath": "contracts/NFTStake.sol",
					"exportedSymbols": {
						"Address": [
							578
						],
						"Context": [
							816
						],
						"IERC165": [
							936
						],
						"IERC20": [
							286
						],
						"IERC721": [
							1048
						],
						"IERC721Receiver": [
							1063
						],
						"IMigratorChef": [
							927
						],
						"INFTMasterChef": [
							1071
						],
						"NFTStake": [
							2086
						],
						"Ownable": [
							917
						],
						"SafeERC20": [
							797
						],
						"SafeMath": [
							194
						]
					},
					"id": 2087,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "173:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "SafeMath",
							"nameLocation": "208:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "522:114:0",
										"statements": [
											{
												"assignments": [
													12
												],
												"declarations": [
													{
														"constant": false,
														"id": 12,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "541:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 26,
														"src": "533:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 11,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "533:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 16,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 13,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "545:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 14,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "545:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "533:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 18,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "569:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 19,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "574:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "569:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "577:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "561:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "561:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "561:46:0"
											},
											{
												"expression": {
													"id": 24,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "627:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 10,
												"id": 25,
												"nodeType": "Return",
												"src": "620:8:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "224:225:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "464:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "476:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "468:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "487:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "479:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "467:22:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "513:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:9:0"
									},
									"scope": 194,
									"src": "455:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "978:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1000:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 39,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "1003:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1006:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 37,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															44,
															72
														],
														"referencedDeclaration": 72,
														"src": "996:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 36,
												"id": 42,
												"nodeType": "Return",
												"src": "989:50:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "644:261:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "920:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "924:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "935:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "969:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:9:0"
									},
									"scope": 194,
									"src": "911:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1479:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 57,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "1498:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 58,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1503:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1498:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 60,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "1506:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1490:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1490:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1490:29:0"
											},
											{
												"assignments": [
													64
												],
												"declarations": [
													{
														"constant": false,
														"id": 64,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1538:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "1530:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 63,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1530:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 65,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1542:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 66,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1546:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1542:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1530:17:0"
											},
											{
												"expression": {
													"id": 69,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 64,
													"src": "1567:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 55,
												"id": 70,
												"nodeType": "Return",
												"src": "1560:8:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1055:323:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1393:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1405:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1397:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1416:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1408:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1433:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1419:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 50,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1419:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:50:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1470:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1469:9:0"
									},
									"scope": 194,
									"src": "1384:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1894:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 82,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2130:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2135:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2130:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 88,
												"nodeType": "IfStatement",
												"src": "2126:47:0",
												"trueBody": {
													"id": 87,
													"nodeType": "Block",
													"src": "2138:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2160:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 81,
															"id": 86,
															"nodeType": "Return",
															"src": "2153:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2193:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "2185:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 89,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2185:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 94,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 91,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2197:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 92,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "2201:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2197:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2185:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 96,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "2221:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 97,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "2225:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2221:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 99,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2230:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2221:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2233:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2213:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2213:56:0"
											},
											{
												"expression": {
													"id": 104,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 90,
													"src": "2289:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 81,
												"id": 105,
												"nodeType": "Return",
												"src": "2282:8:0"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "1584:237:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1836:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1848:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1840:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1859:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1851:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1839:22:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1885:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1884:9:0"
									},
									"scope": 194,
									"src": "1827:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "2833:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 118,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "2855:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 119,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2858:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 117,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															124,
															152
														],
														"referencedDeclaration": 152,
														"src": "2851:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2851:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 116,
												"id": 122,
												"nodeType": "Return",
												"src": "2844:46:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "2306:454:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2775:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2798:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2790:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2778:22:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2823:9:0"
									},
									"scope": 194,
									"src": "2766:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "3523:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "3609:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3613:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3609:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 140,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "3616:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3601:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "3601:28:0"
											},
											{
												"assignments": [
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3648:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 151,
														"src": "3640:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3640:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 145,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "3652:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 146,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3656:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3652:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3640:17:0"
											},
											{
												"expression": {
													"id": 149,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 144,
													"src": "3764:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 135,
												"id": 150,
												"nodeType": "Return",
												"src": "3757:8:0"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "2906:516:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3437:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3449:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3441:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3460:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3452:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3477:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3463:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3463:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3440:50:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3514:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3513:9:0"
									},
									"scope": 194,
									"src": "3428:345:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "4297:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 163,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4319:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 164,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "4322:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4325:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 162,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															169,
															193
														],
														"referencedDeclaration": 193,
														"src": "4315:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4315:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 161,
												"id": 167,
												"nodeType": "Return",
												"src": "4308:44:0"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "3781:443:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4239:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4251:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4243:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4243:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4262:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4254:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4242:22:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4288:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4287:9:0"
									},
									"scope": 194,
									"src": "4230:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "4974:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "4993:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4998:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4993:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 185,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5001:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4985:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4985:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "4985:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 188,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5032:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 189,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "5036:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5032:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 180,
												"id": 191,
												"nodeType": "Return",
												"src": "5025:12:0"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "4368:505:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4888:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4900:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4892:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4911:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4903:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4928:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4914:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4914:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4891:50:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4965:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4964:9:0"
									},
									"scope": 194,
									"src": "4879:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2087,
							"src": "200:4848:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC20",
							"nameLocation": "5062:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "5076:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5159:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5170:2:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "5196:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:9:0"
									},
									"scope": 286,
									"src": "5150:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "5213:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5302:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5320:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5312:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5311:17:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5352:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5351:9:0"
									},
									"scope": 286,
									"src": "5293:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "5369:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5599:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5616:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5608:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5635:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5627:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5607:35:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5661:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5661:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5660:6:0"
									},
									"scope": 286,
									"src": "5590:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5675:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5960:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5978:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5970:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5993:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5985:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5969:32:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6025:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:9:0"
									},
									"scope": 286,
									"src": "5951:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6042:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6712:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6728:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6720:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6745:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6737:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6719:33:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6770:6:0"
									},
									"scope": 286,
									"src": "6703:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "6794:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6807:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6799:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6824:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6816:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6798:33:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6850:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6849:6:0"
									},
									"scope": 286,
									"src": "6785:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "6864:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7183:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7214:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7206:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7239:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7231:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7267:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7259:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7195:85:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7299:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7299:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7298:6:0"
									},
									"scope": 286,
									"src": "7174:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "7313:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 268,
									"name": "Transfer",
									"nameLocation": "7488:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7513:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7497:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7535:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7519:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7519:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7547:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7539:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7496:57:0"
									},
									"src": "7482:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7562:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 277,
									"name": "Approval",
									"nameLocation": "7725:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7750:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7734:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7734:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7757:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7790:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7782:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7733:63:0"
									},
									"src": "7719:78:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8",
									"id": 285,
									"name": "Mint",
									"nameLocation": "7811:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"indexed": true,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "7832:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7816:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7856:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7840:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7815:60:0"
									},
									"src": "7805:71:0"
								}
							],
							"scope": 2087,
							"src": "5052:2827:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "Address",
							"nameLocation": "7891:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "8957:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 294,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "9186:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "9186:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9186:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9208:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9186:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 293,
												"id": 299,
												"nodeType": "Return",
												"src": "9179:30:0"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "7906:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "8900:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8919:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8911:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8910:17:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8951:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8951:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:6:0"
									},
									"scope": 578,
									"src": "8891:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "10223:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 312,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10250:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		],
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10242:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 310,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10242:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10242:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "10242:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 315,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10267:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10242:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10275:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10234:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10234:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "10234:73:0"
											},
											{
												"assignments": [
													321,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10326:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "10321:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 320,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10321:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 328,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10369:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 322,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "10339:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "10339:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 324,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10361:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10339:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10339:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10320:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "10391:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10400:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10383:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10383:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "10383:78:0"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "9225:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "10161:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10187:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10171:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10171:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10206:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10198:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10170:43:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10223:0:0"
									},
									"scope": 578,
									"src": "10152:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "11320:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "11351:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "11359:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11365:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 345,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															352,
															372
														],
														"referencedDeclaration": 372,
														"src": "11338:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11338:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 344,
												"id": 350,
												"nodeType": "Return",
												"src": "11331:67:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "10477:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11240:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11261:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11253:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11269:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11269:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11252:35:0"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11306:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11305:14:0"
									},
									"scope": 578,
									"src": "11231:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "11787:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "11827:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "11835:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11841:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 368,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "11844:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 364,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															442
														],
														"referencedDeclaration": 442,
														"src": "11805:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11805:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 363,
												"id": 370,
												"nodeType": "Return",
												"src": "11798:59:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "11414:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11645:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11676:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11668:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11706:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11693:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11693:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11735:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11721:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11721:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11657:97:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11773:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11773:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11772:14:0"
									},
									"scope": 578,
									"src": "11636:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "12387:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "12427:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "12435:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 387,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "12441:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12448:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 384,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															442
														],
														"referencedDeclaration": 442,
														"src": "12405:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12405:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 383,
												"id": 390,
												"nodeType": "Return",
												"src": "12398:94:0"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "11873:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12249:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12289:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12281:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12319:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12306:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12342:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12334:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12270:84:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12373:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12373:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12372:14:0"
									},
									"scope": 578,
									"src": "12240:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "12940:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 409,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12967:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		],
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12959:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 407,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12959:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12959:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "12959:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 412,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "12984:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12959:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12991:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12951:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "12951:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 419,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "13062:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 418,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "13051:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13051:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13071:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13043:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13043:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "13043:60:0"
											},
											{
												"assignments": [
													425,
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13122:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "13117:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 424,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13117:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "13144:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "13131:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 426,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13131:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [
														{
															"id": 432,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "13184:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 428,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "13158:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "13158:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 430,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "13177:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13158:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13158:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13116:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "13224:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 437,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "13233:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 438,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "13245:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 435,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "13207:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13207:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 405,
												"id": 440,
												"nodeType": "Return",
												"src": "13200:58:0"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "12508:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12765:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12805:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12797:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12835:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12822:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 396,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12822:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12858:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12850:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12888:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12874:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12874:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12786:121:0"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12926:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12926:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12925:14:0"
									},
									"scope": 578,
									"src": "12756:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "13551:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "13588:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "13596:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13602:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 452,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															459,
															494
														],
														"referencedDeclaration": 494,
														"src": "13569:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13569:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 457,
												"nodeType": "Return",
												"src": "13562:80:0"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "13274:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13460:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13487:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13479:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13508:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13495:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13495:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13478:35:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13537:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13537:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13536:14:0"
									},
									"scope": 578,
									"src": "13451:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "14004:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 473,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "14034:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 472,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "14023:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14023:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14043:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14015:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14015:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "14015:67:0"
											},
											{
												"assignments": [
													479,
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 479,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14101:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "14096:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 478,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14096:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "14123:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "14110:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 480,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14110:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "14155:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 482,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "14137:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "14137:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14137:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14095:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "14195:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 489,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "14204:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 490,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "14216:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 487,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "14178:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14178:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 470,
												"id": 492,
												"nodeType": "Return",
												"src": "14171:58:0"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "13658:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13851:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13888:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13880:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13918:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13905:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13905:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13947:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13933:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13933:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13869:97:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13990:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13990:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13989:14:0"
									},
									"scope": 578,
									"src": "13842:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "14521:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "14560:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "14568:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14574:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 504,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															546
														],
														"referencedDeclaration": 546,
														"src": "14539:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14539:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 503,
												"id": 509,
												"nodeType": "Return",
												"src": "14532:84:0"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "14245:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14433:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14462:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14454:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14483:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14470:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14453:35:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14507:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 501,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14507:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14506:14:0"
									},
									"scope": 578,
									"src": "14424:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "14977:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 525,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "15007:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 524,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "14996:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14996:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15016:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14988:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "14988:69:0"
											},
											{
												"assignments": [
													531,
													533
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15076:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "15071:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 530,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15071:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 533,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "15098:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "15085:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 532,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15085:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"arguments": [
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "15132:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 534,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "15112:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "15112:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15112:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15070:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "15172:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 541,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "15181:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 542,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "15193:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 539,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "15155:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15155:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 522,
												"id": 544,
												"nodeType": "Return",
												"src": "15148:58:0"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "14632:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14827:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14866:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14858:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14896:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14883:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14883:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14925:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14911:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14911:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14847:97:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14963:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14963:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14962:14:0"
									},
									"scope": 578,
									"src": "14818:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "15606:548:0",
										"statements": [
											{
												"condition": {
													"id": 558,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 549,
													"src": "15621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "15680:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 562,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "15766:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "15766:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15786:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "15766:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 572,
																"nodeType": "Block",
																"src": "16081:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 569,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 553,
																					"src": "16107:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 568,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "16100:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16100:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 571,
																		"nodeType": "ExpressionStatement",
																		"src": "16100:20:0"
																	}
																]
															},
															"id": 573,
															"nodeType": "IfStatement",
															"src": "15762:374:0",
															"trueBody": {
																"id": 567,
																"nodeType": "Block",
																"src": "15789:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "15912:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "15935:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "15964:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "15958:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15958:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "15939:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "16008:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "16012:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "16004:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16004:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "16025:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "15997:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15997:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "15997:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 551,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15964:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 551,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "16012:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 566,
																		"nodeType": "InlineAssembly",
																		"src": "15903:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 575,
												"nodeType": "IfStatement",
												"src": "15617:530:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "15630:44:0",
													"statements": [
														{
															"expression": {
																"id": 559,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "15652:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 557,
															"id": 560,
															"nodeType": "Return",
															"src": "15645:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "15222:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "15451:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "15483:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15478:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15478:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "15514:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15501:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15501:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "15549:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15535:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15535:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15467:101:0"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15592:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15592:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15591:14:0"
									},
									"scope": 578,
									"src": "15442:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2087,
							"src": "7883:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 797,
							"linearizedBaseContracts": [
								797
							],
							"name": "SafeERC20",
							"nameLocation": "16169:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 581,
									"libraryName": {
										"id": 579,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "16192:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "16186:26:0",
									"typeName": {
										"id": 580,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16204:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "16326:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 592,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "16357:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 595,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "16387:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 218,
																		"src": "16387:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16387:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 598,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "16412:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "16416:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 593,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16364:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16364:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16364:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 591,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16337:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16337:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "16337:86:0"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "16229:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16259:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16252:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 583,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 582,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16252:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16252:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16283:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16275:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16304:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16296:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16241:75:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16326:0:0"
									},
									"scope": 797,
									"src": "16220:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "16572:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 617,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "16603:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 620,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 607,
																			"src": "16633:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 259,
																		"src": "16633:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16633:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 623,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "16662:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 624,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "16668:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 625,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "16672:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 618,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16610:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16610:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16610:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 616,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16583:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16583:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "16583:96:0"
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "16448:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16482:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16475:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 605,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16475:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16475:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16506:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16498:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16498:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16529:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16521:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16521:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16550:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16542:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16464:98:0"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16572:0:0"
									},
									"scope": 797,
									"src": "16439:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "17066:506:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "17320:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17329:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17320:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 645,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17319:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 650,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "17360:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$797",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$797",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 649,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17352:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 648,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "17352:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17352:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 652,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 636,
																					"src": "17367:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 646,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "17336:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$286",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 228,
																				"src": "17336:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17336:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17379:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17336:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 656,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17335:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17319:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17396:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17297:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17297:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "17297:166:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "17494:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 665,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 634,
																			"src": "17524:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "17524:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17524:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 668,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "17548:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 669,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "17557:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 663,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17501:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17501:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17501:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 661,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "17474:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17474:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "17474:90:0"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "16695:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "16965:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16994:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16987:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 633,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 632,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16987:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16987:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17018:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "17010:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17044:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "17036:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16976:80:0"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17066:0:0"
									},
									"scope": 797,
									"src": "16956:616:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "17700:197:0",
										"statements": [
											{
												"assignments": [
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "17719:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "17711:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17711:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 690,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "17758:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$797",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$797",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17750:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 688,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17750:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17750:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 692,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "17765:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 686,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "17734:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$286",
																	"typeString": "contract IERC20"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 228,
															"src": "17734:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17734:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 694,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "17776:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17734:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17711:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "17812:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 701,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 677,
																			"src": "17842:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "17842:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17842:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 704,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "17866:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 705,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "17875:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17819:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17819:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17819:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 697,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "17792:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17792:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "17792:97:0"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "17589:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17628:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17621:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 676,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 675,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "17621:6:0"
													},
													"referencedDeclaration": 286,
													"src": "17621:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17652:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17644:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17678:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17670:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17610:80:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17700:0:0"
									},
									"scope": 797,
									"src": "17580:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "18025:377:0",
										"statements": [
											{
												"id": 756,
												"nodeType": "UncheckedBlock",
												"src": "18036:359:0",
												"statements": [
													{
														"assignments": [
															721
														],
														"declarations": [
															{
																"constant": false,
																"id": 721,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "18069:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "18061:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18061:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 730,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 726,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "18108:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$797",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$797",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18100:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18100:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18100:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 728,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "18115:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 722,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "18084:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "18084:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18084:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18061:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 732,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "18146:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 733,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "18162:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18146:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18169:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 731,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "18138:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18138:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 737,
														"nodeType": "ExpressionStatement",
														"src": "18138:75:0"
													},
													{
														"assignments": [
															739
														],
														"declarations": [
															{
																"constant": false,
																"id": 739,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "18236:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "18228:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 738,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18228:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 743,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 740,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "18251:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 741,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "18266:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18251:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18228:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "18306:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 748,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "18336:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$286",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 238,
																				"src": "18336:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "18336:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 751,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "18360:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 752,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 739,
																			"src": "18369:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 746,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "18313:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "18313:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18313:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 744,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "18286:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18286:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 755,
														"nodeType": "ExpressionStatement",
														"src": "18286:97:0"
													}
												]
											}
										]
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "17914:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17953:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17946:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 712,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 711,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "17946:6:0"
													},
													"referencedDeclaration": 286,
													"src": "17946:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17977:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17969:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18003:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17995:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17935:80:0"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18025:0:0"
									},
									"scope": 797,
									"src": "17905:497:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "18863:646:0",
										"statements": [
											{
												"assignments": [
													768
												],
												"declarations": [
													{
														"constant": false,
														"id": 768,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "19230:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "19217:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 767,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "19217:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 774,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "19271:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19277:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 771,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "19251:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19243:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 769,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19243:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19243:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "19243:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19243:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19217:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 778,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "19327:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "19327:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19347:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19327:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "19323:179:0",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "19350:152:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 785,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 768,
																				"src": "19424:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 787,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19437:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 786,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "19437:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 788,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19436:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 783,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "19413:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "19413:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19413:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19445:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 782,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "19405:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19405:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 792,
															"nodeType": "ExpressionStatement",
															"src": "19405:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "18410:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "18802:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18829:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18822:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 761,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 760,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "18822:6:0"
													},
													"referencedDeclaration": 286,
													"src": "18822:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18849:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18836:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18836:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18821:33:0"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18863:0:0"
									},
									"scope": 797,
									"src": "18793:716:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2087,
							"src": "16161:3351:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 816,
							"linearizedBaseContracts": [
								816
							],
							"name": "Context",
							"nameLocation": "19534:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "19611:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 802,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "19629:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "19629:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 801,
												"id": 804,
												"nodeType": "Return",
												"src": "19622:17:0"
											}
										]
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "19558:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19568:2:0"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "19602:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19601:9:0"
									},
									"scope": 816,
									"src": "19549:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "19722:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 811,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "19740:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "19740:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 810,
												"id": 813,
												"nodeType": "Return",
												"src": "19733:15:0"
											}
										]
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "19664:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19672:2:0"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "19706:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19706:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19705:16:0"
									},
									"scope": 816,
									"src": "19655:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2087,
							"src": "19516:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 817,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 816,
										"src": "19792:7:0"
									},
									"id": 818,
									"nodeType": "InheritanceSpecifier",
									"src": "19792:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 917,
							"linearizedBaseContracts": [
								917,
								816
							],
							"name": "Ownable",
							"nameLocation": "19781:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "19823:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "19807:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 819,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "19807:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 826,
									"name": "OwnershipTransferred",
									"nameLocation": "19844:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "19881:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19865:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19912:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19896:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19864:57:0"
									},
									"src": "19838:84:0"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "20043:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 831,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "20073:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20073:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 830,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "20054:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20054:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "20054:32:0"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "19930:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 836,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20040:2:0"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20043:0:0"
									},
									"scope": 917,
									"src": "20029:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "20230:32:0",
										"statements": [
											{
												"expression": {
													"id": 842,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "20248:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 841,
												"id": 843,
												"nodeType": "Return",
												"src": "20241:13:0"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "20102:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "20184:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20189:2:0"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "20221:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20220:9:0"
									},
									"scope": 917,
									"src": "20175:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "20376:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 849,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "20395:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20395:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 851,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "20406:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20406:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20395:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20420:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20387:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20387:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "20387:68:0"
											},
											{
												"id": 857,
												"nodeType": "PlaceholderStatement",
												"src": "20466:1:0"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "20270:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 859,
									"name": "onlyOwner",
									"nameLocation": "20364:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20373:2:0"
									},
									"src": "20355:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "20880:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20918:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20910:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 866,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20910:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20910:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 865,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "20891:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20891:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "20891:30:0"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "20483:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 863,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 862,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "20870:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20870:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "20835:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20852:2:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20880:0:0"
									},
									"scope": 917,
									"src": "20826:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "21154:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 882,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "21173:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21193:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21185:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 883,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21185:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21185:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21173:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21197:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21165:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "21165:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "21268:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 891,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "21249:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21249:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "21249:28:0"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "20937:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 879,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 878,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "21144:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21144:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "21093:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21119:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "21111:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21110:18:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21154:0:0"
									},
									"scope": 917,
									"src": "21084:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "21508:128:0",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "21527:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "21519:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 902,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "21519:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"id": 904,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "21538:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21519:25:0"
											},
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 906,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "21555:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 907,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "21564:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21555:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "21555:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 911,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "21609:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "21619:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 910,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "21588:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21588:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "EmitStatement",
												"src": "21583:45:0"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "21293:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "21454:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21481:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "21473:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21472:18:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21508:0:0"
									},
									"scope": 917,
									"src": "21445:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2087,
							"src": "19763:1876:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMigratorChef",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 927,
							"linearizedBaseContracts": [
								927
							],
							"name": "IMigratorChef",
							"nameLocation": "21653:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ce5494bb",
									"id": 926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nameLocation": "21683:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21698:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "21691:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 918,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "21691:6:0"
													},
													"referencedDeclaration": 286,
													"src": "21691:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21690:14:0"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "21723:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 923,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 922,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "21723:6:0"
													},
													"referencedDeclaration": 286,
													"src": "21723:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21722:8:0"
									},
									"scope": 927,
									"src": "21674:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2087,
							"src": "21643:91:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 936,
							"linearizedBaseContracts": [
								936
							],
							"name": "IERC165",
							"nameLocation": "21748:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "21763:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "22125:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "22150:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "22143:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 929,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "22143:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22142:20:0"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "22186:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 932,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22186:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22185:6:0"
									},
									"scope": 936,
									"src": "22116:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2087,
							"src": "21738:457:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 937,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 936,
										"src": "22220:7:0"
									},
									"id": 938,
									"nodeType": "InheritanceSpecifier",
									"src": "22220:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1048,
							"linearizedBaseContracts": [
								1048,
								936
							],
							"name": "IERC721",
							"nameLocation": "22209:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "22235:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 947,
									"name": "Transfer",
									"nameLocation": "22337:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "22346:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22346:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22384:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "22368:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22368:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22404:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "22388:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22345:67:0"
									},
									"src": "22331:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "22421:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 956,
									"name": "Approval",
									"nameLocation": "22529:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22554:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "22538:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "22577:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "22561:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22603:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "22587:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22537:74:0"
									},
									"src": "22523:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "22620:119:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 965,
									"name": "ApprovalForAll",
									"nameLocation": "22751:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22782:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "22766:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22766:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "22805:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "22789:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "22820:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "22815:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 962,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22815:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22765:64:0"
									},
									"src": "22745:85:0"
								},
								{
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "22838:78:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "22931:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22949:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "22941:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22940:15:0"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "22987:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "22979:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22978:17:0"
									},
									"scope": 1048,
									"src": "22922:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "23004:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "23156:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23172:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "23164:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23163:17:0"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23212:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "23204:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23203:15:0"
									},
									"scope": 1048,
									"src": "23147:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "23227:703:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 991,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23945:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23980:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "23972:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24003:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "23995:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "24016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23961:77:0"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24047:0:0"
									},
									"scope": 1048,
									"src": "23936:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "24056:517:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "24588:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24619:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "24611:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24642:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "24634:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24663:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "24655:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24600:77:0"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24686:0:0"
									},
									"scope": 1048,
									"src": "24579:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "24695:464:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "25174:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25190:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "25182:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25202:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "25194:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25181:29:0"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25219:0:0"
									},
									"scope": 1048,
									"src": "25165:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "25228:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "25388:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25408:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "25400:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:17:0"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "25448:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "25440:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25439:18:0"
									},
									"scope": 1048,
									"src": "25379:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "25466:318:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "25799:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "25825:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "25817:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25817:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "25840:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "25835:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25835:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25816:34:0"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25859:0:0"
									},
									"scope": 1048,
									"src": "25790:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "25868:142:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1035,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "26025:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "26050:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "26042:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "26065:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "26057:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26041:33:0"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "26098:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26098:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26097:6:0"
									},
									"scope": 1048,
									"src": "26016:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "26112:568:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "26695:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26730:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "26722:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26753:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "26745:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26774:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "26766:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "26807:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "26792:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1043,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26792:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26711:107:0"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26827:0:0"
									},
									"scope": 1048,
									"src": "26686:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2087,
							"src": "22199:4632:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1063,
							"linearizedBaseContracts": [
								1063
							],
							"name": "IERC721Receiver",
							"nameLocation": "26845:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "26868:493:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1062,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "27376:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "27411:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27403:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27438:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27430:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27461:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27453:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "27494:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27479:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1056,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27479:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27392:113:0"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "27524:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1059,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "27524:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27523:8:0"
									},
									"scope": 1063,
									"src": "27367:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2087,
							"src": "26835:700:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "INFTMasterChef",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1071,
							"linearizedBaseContracts": [
								1071
							],
							"name": "INFTMasterChef",
							"nameLocation": "27549:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "849df12c",
									"id": 1070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enterStaking",
									"nameLocation": "27580:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "27601:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "27593:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "27618:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "27610:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27592:35:0"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27636:0:0"
									},
									"scope": 1071,
									"src": "27571:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2087,
							"src": "27539:101:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1072,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 917,
										"src": "28028:7:0"
									},
									"id": 1073,
									"nodeType": "InheritanceSpecifier",
									"src": "28028:7:0"
								},
								{
									"baseName": {
										"id": 1074,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1063,
										"src": "28037:15:0"
									},
									"id": 1075,
									"nodeType": "InheritanceSpecifier",
									"src": "28037:15:0"
								}
							],
							"canonicalName": "NFTStake",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2086,
							"linearizedBaseContracts": [
								2086,
								1063,
								917,
								816
							],
							"name": "NFTStake",
							"nameLocation": "28016:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1078,
									"libraryName": {
										"id": 1076,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "28066:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28060:27:0",
									"typeName": {
										"id": 1077,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28079:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1082,
									"libraryName": {
										"id": 1079,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 797,
										"src": "28099:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28093:27:0",
									"typeName": {
										"id": 1081,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1080,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 286,
											"src": "28113:6:0"
										},
										"referencedDeclaration": 286,
										"src": "28113:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$286",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "NFTStake.UserInfo",
									"id": 1090,
									"members": [
										{
											"constant": false,
											"id": 1085,
											"mutability": "mutable",
											"name": "tokenIds",
											"nameLocation": "28190:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 1090,
											"src": "28180:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1084,
												"nodeType": "ArrayTypeName",
												"src": "28180:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1087,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "28217:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1090,
											"src": "28209:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1086,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28209:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1089,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "28287:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 1090,
											"src": "28279:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1088,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "28279:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "28160:8:0",
									"nodeType": "StructDefinition",
									"scope": 2086,
									"src": "28153:817:0",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTStake.PoolInfo",
									"id": 1100,
									"members": [
										{
											"constant": false,
											"id": 1093,
											"mutability": "mutable",
											"name": "NFTToken",
											"nameLocation": "29038:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 1100,
											"src": "29030:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC721_$1048",
												"typeString": "contract IERC721"
											},
											"typeName": {
												"id": 1092,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1091,
													"name": "IERC721",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1048,
													"src": "29030:7:0"
												},
												"referencedDeclaration": 1048,
												"src": "29030:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$1048",
													"typeString": "contract IERC721"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1095,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "29098:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 1100,
											"src": "29090:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1094,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29090:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1097,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nameLocation": "29210:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 1100,
											"src": "29202:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1096,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29202:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1099,
											"mutability": "mutable",
											"name": "accDDTPerShare",
											"nameLocation": "29296:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 1100,
											"src": "29288:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1098,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29288:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "29010:8:0",
									"nodeType": "StructDefinition",
									"scope": 2086,
									"src": "29003:369:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e4d09896",
									"id": 1103,
									"mutability": "mutable",
									"name": "NFTMasterChef",
									"nameLocation": "29402:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "29380:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
										"typeString": "contract INFTMasterChef"
									},
									"typeName": {
										"id": 1102,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1101,
											"name": "INFTMasterChef",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1071,
											"src": "29380:14:0"
										},
										"referencedDeclaration": 1071,
										"src": "29380:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
											"typeString": "contract INFTMasterChef"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb3cba55",
									"id": 1106,
									"mutability": "mutable",
									"name": "DDT",
									"nameLocation": "29461:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "29447:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$286",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1105,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1104,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 286,
											"src": "29447:6:0"
										},
										"referencedDeclaration": 286,
										"src": "29447:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$286",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d49e77cd",
									"id": 1108,
									"mutability": "mutable",
									"name": "devaddr",
									"nameLocation": "29507:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "29492:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1107,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "29492:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f395db2c",
									"id": 1110,
									"mutability": "mutable",
									"name": "DDTPerBlock",
									"nameLocation": "29574:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "29559:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1109,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29559:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8aa28550",
									"id": 1113,
									"mutability": "mutable",
									"name": "BONUS_MULTIPLIER",
									"nameLocation": "29653:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "29638:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29638:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "29672:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cd07e47",
									"id": 1116,
									"mutability": "mutable",
									"name": "migrator",
									"nameLocation": "29797:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "29776:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMigratorChef_$927",
										"typeString": "contract IMigratorChef"
									},
									"typeName": {
										"id": 1115,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1114,
											"name": "IMigratorChef",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 927,
											"src": "29776:13:0"
										},
										"referencedDeclaration": 927,
										"src": "29776:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMigratorChef_$927",
											"typeString": "contract IMigratorChef"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1120,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "29857:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "29839:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
										"typeString": "struct NFTStake.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 1118,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1117,
												"name": "PoolInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1100,
												"src": "29839:8:0"
											},
											"referencedDeclaration": 1100,
											"src": "29839:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
												"typeString": "struct NFTStake.PoolInfo"
											}
										},
										"id": 1119,
										"nodeType": "ArrayTypeName",
										"src": "29839:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage_ptr",
											"typeString": "struct NFTStake.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1127,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "29977:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "29921:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo))"
									},
									"typeName": {
										"id": 1126,
										"keyType": {
											"id": 1121,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "29929:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "29921:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo))"
										},
										"valueType": {
											"id": 1125,
											"keyType": {
												"id": 1122,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "29948:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "29940:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
												"typeString": "mapping(address => struct NFTStake.UserInfo)"
											},
											"valueType": {
												"id": 1124,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1123,
													"name": "UserInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1090,
													"src": "29959:8:0"
												},
												"referencedDeclaration": 1090,
												"src": "29959:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
													"typeString": "struct NFTStake.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 1130,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "30095:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "30080:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1128,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30080:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1129,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "30113:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 1132,
									"mutability": "mutable",
									"name": "startBlock",
									"nameLocation": "30185:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "30170:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1131,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30170:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
									"id": 1140,
									"name": "Deposit",
									"nameLocation": "30210:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "30234:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "30218:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "30256:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "30240:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30269:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "30261:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30217:59:0"
									},
									"src": "30204:73:0"
								},
								{
									"anonymous": false,
									"eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
									"id": 1148,
									"name": "Withdraw",
									"nameLocation": "30289:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "30314:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "30298:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "30336:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "30320:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30349:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "30341:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30297:59:0"
									},
									"src": "30283:74:0"
								},
								{
									"anonymous": false,
									"eventSelector": "bb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595",
									"id": 1156,
									"name": "EmergencyWithdraw",
									"nameLocation": "30369:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "30413:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "30397:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30397:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "30444:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "30428:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "30458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30386:93:0"
									},
									"src": "30363:117:0"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "30657:171:0",
										"statements": [
											{
												"expression": {
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1171,
														"name": "DDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "30668:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1172,
														"name": "_DDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "30674:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"src": "30668:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "30668:10:0"
											},
											{
												"expression": {
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1175,
														"name": "NFTMasterChef",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "30689:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
															"typeString": "contract INFTMasterChef"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1176,
														"name": "_NFTMasterChef",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "30705:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
															"typeString": "contract INFTMasterChef"
														}
													},
													"src": "30689:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
														"typeString": "contract INFTMasterChef"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "30689:30:0"
											},
											{
												"expression": {
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1179,
														"name": "devaddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "30730:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1180,
														"name": "_devaddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "30740:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30730:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "30730:18:0"
											},
											{
												"expression": {
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1183,
														"name": "DDTPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "30759:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1184,
														"name": "_DDTPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "30773:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30759:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "30759:26:0"
											},
											{
												"expression": {
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1187,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "30796:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1188,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "30809:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30796:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "30796:24:0"
											}
										]
									},
									"id": 1192,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "_DDT",
												"nameLocation": "30517:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "30510:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1158,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1157,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "30510:6:0"
													},
													"referencedDeclaration": 286,
													"src": "30510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "_NFTMasterChef",
												"nameLocation": "30547:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "30532:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
													"typeString": "contract INFTMasterChef"
												},
												"typeName": {
													"id": 1161,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1160,
														"name": "INFTMasterChef",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1071,
														"src": "30532:14:0"
													},
													"referencedDeclaration": 1071,
													"src": "30532:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
														"typeString": "contract INFTMasterChef"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "_devaddr",
												"nameLocation": "30580:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "30572:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "_DDTPerBlock",
												"nameLocation": "30607:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "30599:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "_startBlock",
												"nameLocation": "30638:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "30630:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30499:157:0"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30657:0:0"
									},
									"scope": 2086,
									"src": "30488:340:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1062
									],
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "31030:56:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1207,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "31048:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NFTStake_$2086",
																"typeString": "contract NFTStake"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1212,
														"src": "31048:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "31048:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1210,
												"nodeType": "Return",
												"src": "31041:37:0"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "30836:80:0",
										"text": " Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "30931:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "31004:8:0"
									},
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "30948:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "30957:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "30966:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "30975:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30975:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30947:41:0"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "31022:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "31022:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31021:8:0"
									},
									"scope": 2086,
									"src": "30922:164:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "31163:54:0",
										"statements": [
											{
												"expression": {
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1219,
														"name": "BONUS_MULTIPLIER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "31174:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1220,
														"name": "multiplierNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "31193:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31174:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "31174:35:0"
											}
										]
									},
									"functionSelector": "5ffe6146",
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1217,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1216,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "31153:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31153:9:0"
										}
									],
									"name": "updateMultiplier",
									"nameLocation": "31103:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "multiplierNumber",
												"nameLocation": "31128:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "31120:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31119:26:0"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31163:0:0"
									},
									"scope": 2086,
									"src": "31094:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "31279:41:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1229,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "31297:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "31297:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1231,
												"nodeType": "Return",
												"src": "31290:22:0"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "31234:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31244:2:0"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "31270:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31269:9:0"
									},
									"scope": 2086,
									"src": "31225:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "31579:472:0",
										"statements": [
											{
												"condition": {
													"id": 1245,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "31594:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1250,
												"nodeType": "IfStatement",
												"src": "31590:61:0",
												"trueBody": {
													"id": 1249,
													"nodeType": "Block",
													"src": "31607:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1246,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "31622:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31622:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1248,
															"nodeType": "ExpressionStatement",
															"src": "31622:17:0"
														}
													]
												}
											},
											{
												"assignments": [
													1252
												],
												"declarations": [
													{
														"constant": false,
														"id": 1252,
														"mutability": "mutable",
														"name": "lastRewardBlock",
														"nameLocation": "31669:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1280,
														"src": "31661:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31661:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1261,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1253,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "31687:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "31687:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1255,
															"name": "startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "31702:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "31687:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1259,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "31730:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "31687:53:0",
													"trueExpression": {
														"expression": {
															"id": 1257,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31715:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "31715:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31661:79:0"
											},
											{
												"expression": {
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1262,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "31751:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1265,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "31789:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1263,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "31769:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "31769:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31769:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31751:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "31751:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1273,
																	"name": "_NFTToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "31878:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$1048",
																		"typeString": "contract IERC721"
																	}
																},
																{
																	"id": 1274,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "31918:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1275,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "31965:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32015:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC721_$1048",
																		"typeString": "contract IERC721"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1272,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "31840:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1100_storage_ptr_$",
																	"typeString": "type(struct NFTStake.PoolInfo storage pointer)"
																}
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"NFTToken",
																"allocPoint",
																"lastRewardBlock",
																"accDDTPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "31840:192:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_memory_ptr",
																"typeString": "struct NFTStake.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1100_memory_ptr",
																"typeString": "struct NFTStake.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1269,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "31812:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
																"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "31812:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$1100_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTStake.PoolInfo storage ref[] storage pointer,struct NFTStake.PoolInfo storage ref)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31812:231:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "31812:231:0"
											}
										]
									},
									"functionSelector": "1eaaa045",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1243,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1242,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "31569:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31569:9:0"
										}
									],
									"name": "add",
									"nameLocation": "31498:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "31511:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "31503:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "_NFTToken",
												"nameLocation": "31532:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "31524:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$1048",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 1237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1236,
														"name": "IERC721",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1048,
														"src": "31524:7:0"
													},
													"referencedDeclaration": 1048,
													"src": "31524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$1048",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "31548:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "31543:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31543:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31501:60:0"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31579:0:0"
									},
									"scope": 2086,
									"src": "31489:562:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "32230:221:0",
										"statements": [
											{
												"condition": {
													"id": 1292,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1287,
													"src": "32245:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1297,
												"nodeType": "IfStatement",
												"src": "32241:61:0",
												"trueBody": {
													"id": 1296,
													"nodeType": "Block",
													"src": "32258:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1293,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "32273:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32273:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1295,
															"nodeType": "ExpressionStatement",
															"src": "32273:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1298,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "32312:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1307,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "32381:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1301,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1120,
																				"src": "32350:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
																					"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1303,
																			"indexExpression": {
																				"id": 1302,
																				"name": "_pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1283,
																				"src": "32359:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "32350:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
																				"typeString": "struct NFTStake.PoolInfo storage ref"
																			}
																		},
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "allocPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1095,
																		"src": "32350:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1299,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "32330:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "32330:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32330:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "32330:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32330:63:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32312:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "32312:81:0"
											},
											{
												"expression": {
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1311,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "32404:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
																	"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1313,
															"indexExpression": {
																"id": 1312,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "32413:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32404:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
																"typeString": "struct NFTStake.PoolInfo storage ref"
															}
														},
														"id": 1314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1095,
														"src": "32404:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1315,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "32432:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32404:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "32404:39:0"
											}
										]
									},
									"functionSelector": "64482f79",
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1290,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1289,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "32220:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32220:9:0"
										}
									],
									"name": "set",
									"nameLocation": "32155:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "32168:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "32160:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "32182:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "32174:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "32200:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "32195:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32195:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32158:54:0"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32230:0:0"
									},
									"scope": 2086,
									"src": "32146:305:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "32590:39:0",
										"statements": [
											{
												"expression": {
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1327,
														"name": "migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "32601:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$927",
															"typeString": "contract IMigratorChef"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1328,
														"name": "_migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "32612:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$927",
															"typeString": "contract IMigratorChef"
														}
													},
													"src": "32601:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$927",
														"typeString": "contract IMigratorChef"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "32601:20:0"
											}
										]
									},
									"functionSelector": "23cf3118",
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1325,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1324,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "32580:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32580:9:0"
										}
									],
									"name": "setMigrator",
									"nameLocation": "32536:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "_migrator",
												"nameLocation": "32562:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "32548:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMigratorChef_$927",
													"typeString": "contract IMigratorChef"
												},
												"typeName": {
													"id": 1321,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1320,
														"name": "IMigratorChef",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 927,
														"src": "32548:13:0"
													},
													"referencedDeclaration": 927,
													"src": "32548:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$927",
														"typeString": "contract IMigratorChef"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32547:25:0"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32590:0:0"
									},
									"scope": 2086,
									"src": "32527:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "32786:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1346,
															"name": "BONUS_MULTIPLIER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "32824:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1343,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "32813:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1341,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "32805:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "32805:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32805:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 107,
														"src": "32805:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32805:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1340,
												"id": 1348,
												"nodeType": "Return",
												"src": "32798:43:0"
											}
										]
									},
									"functionSelector": "8dbb1e3a",
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nameLocation": "32714:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "32736:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "32728:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32728:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "32751:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "32743:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32727:28:0"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "32777:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32776:9:0"
									},
									"scope": 2086,
									"src": "32705:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1372,
										"nodeType": "Block",
										"src": "32950:95:0",
										"statements": [
											{
												"assignments": [
													1362
												],
												"declarations": [
													{
														"constant": false,
														"id": 1362,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "32978:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1372,
														"src": "32961:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo"
														},
														"typeName": {
															"id": 1361,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1360,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1090,
																"src": "32961:8:0"
															},
															"referencedDeclaration": 1090,
															"src": "32961:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1368,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1363,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "32985:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo storage ref))"
															}
														},
														"id": 1365,
														"indexExpression": {
															"id": 1364,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "32994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32985:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
															"typeString": "mapping(address => struct NFTStake.UserInfo storage ref)"
														}
													},
													"id": 1367,
													"indexExpression": {
														"id": 1366,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "33000:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32985:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1090_storage",
														"typeString": "struct NFTStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32961:45:0"
											},
											{
												"expression": {
													"expression": {
														"id": 1369,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "33024:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo storage pointer"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "tokenIds",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1085,
													"src": "33024:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 1359,
												"id": 1371,
												"nodeType": "Return",
												"src": "33017:20:0"
											}
										]
									},
									"functionSelector": "d5545992",
									"id": 1373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserTokenIds",
									"nameLocation": "32866:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "32890:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "32882:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "32904:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "32896:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32881:29:0"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "32932:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1356,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "32932:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1357,
													"nodeType": "ArrayTypeName",
													"src": "32932:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32931:18:0"
									},
									"scope": 2086,
									"src": "32857:188:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "33188:673:0",
										"statements": [
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "33216:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "33199:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo"
														},
														"typeName": {
															"id": 1383,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1382,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1100,
																"src": "33199:8:0"
															},
															"referencedDeclaration": 1100,
															"src": "33199:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1388,
												"initialValue": {
													"baseExpression": {
														"id": 1385,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "33223:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1387,
													"indexExpression": {
														"id": 1386,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "33232:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33223:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
														"typeString": "struct NFTStake.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33199:38:0"
											},
											{
												"assignments": [
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "33265:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "33248:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo"
														},
														"typeName": {
															"id": 1390,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1389,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1090,
																"src": "33248:8:0"
															},
															"referencedDeclaration": 1090,
															"src": "33248:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1392,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "33272:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo storage ref))"
															}
														},
														"id": 1394,
														"indexExpression": {
															"id": 1393,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "33281:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "33272:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
															"typeString": "mapping(address => struct NFTStake.UserInfo storage ref)"
														}
													},
													"id": 1396,
													"indexExpression": {
														"id": 1395,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "33287:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33272:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1090_storage",
														"typeString": "struct NFTStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33248:45:0"
											},
											{
												"assignments": [
													1399
												],
												"declarations": [
													{
														"constant": false,
														"id": 1399,
														"mutability": "mutable",
														"name": "accDDTPerShare",
														"nameLocation": "33312:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "33304:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33304:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1402,
												"initialValue": {
													"expression": {
														"id": 1400,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "33329:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo storage pointer"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accDDTPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1099,
													"src": "33329:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33304:44:0"
											},
											{
												"assignments": [
													1404
												],
												"declarations": [
													{
														"constant": false,
														"id": 1404,
														"mutability": "mutable",
														"name": "NFTSupply",
														"nameLocation": "33367:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "33359:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1403,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33359:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1413,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1410,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "33411:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																],
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33403:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1408,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33403:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33403:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1405,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "33379:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																	"typeString": "struct NFTStake.PoolInfo storage pointer"
																}
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NFTToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1093,
															"src": "33379:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1048",
																"typeString": "contract IERC721"
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 973,
														"src": "33379:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33379:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33359:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1414,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "33432:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "33432:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1416,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "33447:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																	"typeString": "struct NFTStake.PoolInfo storage pointer"
																}
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1097,
															"src": "33447:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "33432:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1419,
															"name": "NFTSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "33471:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33484:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "33471:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "33432:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1460,
												"nodeType": "IfStatement",
												"src": "33428:346:0",
												"trueBody": {
													"id": 1459,
													"nodeType": "Block",
													"src": "33487:287:0",
													"statements": [
														{
															"assignments": [
																1424
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1424,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "33510:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1459,
																	"src": "33502:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1423,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33502:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1431,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1426,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "33537:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																				"typeString": "struct NFTStake.PoolInfo storage pointer"
																			}
																		},
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1097,
																		"src": "33537:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1428,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "33559:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "33559:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1425,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "33523:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33523:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33502:70:0"
														},
														{
															"assignments": [
																1433
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1433,
																	"mutability": "mutable",
																	"name": "DDTReward",
																	"nameLocation": "33595:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1459,
																	"src": "33587:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1432,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33587:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1445,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1443,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "33660:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1439,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1384,
																					"src": "33639:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																						"typeString": "struct NFTStake.PoolInfo storage pointer"
																					}
																				},
																				"id": 1440,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1095,
																				"src": "33639:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1436,
																						"name": "DDTPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1110,
																						"src": "33622:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1434,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1424,
																						"src": "33607:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1435,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "33607:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "33607:27:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "33607:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33607:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "33607:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33607:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33587:89:0"
														},
														{
															"expression": {
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1446,
																	"name": "accDDTPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "33691:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1454,
																					"name": "NFTSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1404,
																					"src": "33751:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1451,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "33741:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1449,
																							"name": "DDTReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1433,
																							"src": "33727:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1450,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "33727:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1452,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "33727:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "33727:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33727:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1447,
																			"name": "accDDTPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1399,
																			"src": "33708:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "33708:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33708:54:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33691:71:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1458,
															"nodeType": "ExpressionStatement",
															"src": "33691:71:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1470,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "33837:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																	"typeString": "struct NFTStake.UserInfo storage pointer"
																}
															},
															"id": 1471,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1089,
															"src": "33837:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33827:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1464,
																			"name": "accDDTPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1399,
																			"src": "33807:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1461,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1391,
																				"src": "33791:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1462,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1087,
																			"src": "33791:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "33791:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33791:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "33791:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33791:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "33791:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33791:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1381,
												"id": 1473,
												"nodeType": "Return",
												"src": "33784:69:0"
											}
										]
									},
									"functionSelector": "2080baab",
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingDDT",
									"nameLocation": "33117:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "33136:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "33128:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "33150:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "33142:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33127:29:0"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "33180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33179:9:0"
									},
									"scope": 2086,
									"src": "33108:753:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "33978:146:0",
										"statements": [
											{
												"assignments": [
													1479
												],
												"declarations": [
													{
														"constant": false,
														"id": 1479,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "33997:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "33989:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1478,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33989:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1482,
												"initialValue": {
													"expression": {
														"id": 1480,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "34006:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "34006:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33989:32:0"
											},
											{
												"body": {
													"id": 1497,
													"nodeType": "Block",
													"src": "34075:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1494,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1484,
																		"src": "34101:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1493,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "34090:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34090:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1496,
															"nodeType": "ExpressionStatement",
															"src": "34090:15:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1487,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1484,
														"src": "34054:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1488,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "34060:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34054:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1498,
												"initializationExpression": {
													"assignments": [
														1484
													],
													"declarations": [
														{
															"constant": false,
															"id": 1484,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "34045:3:0",
															"nodeType": "VariableDeclaration",
															"scope": 1498,
															"src": "34037:11:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1483,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34037:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1486,
													"initialValue": {
														"hexValue": "30",
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34051:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "34037:15:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "34068:5:0",
														"subExpression": {
															"id": 1490,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "34070:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1492,
													"nodeType": "ExpressionStatement",
													"src": "34068:5:0"
												},
												"nodeType": "ForStatement",
												"src": "34032:85:0"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "33953:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33968:2:0"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33978:0:0"
									},
									"scope": 2086,
									"src": "33944:180:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "34241:688:0",
										"statements": [
											{
												"assignments": [
													1507
												],
												"declarations": [
													{
														"constant": false,
														"id": 1507,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "34269:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1600,
														"src": "34252:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo"
														},
														"typeName": {
															"id": 1506,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1505,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1100,
																"src": "34252:8:0"
															},
															"referencedDeclaration": 1100,
															"src": "34252:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1511,
												"initialValue": {
													"baseExpression": {
														"id": 1508,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "34276:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1510,
													"indexExpression": {
														"id": 1509,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "34285:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34276:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
														"typeString": "struct NFTStake.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34252:38:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1512,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "34305:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "34305:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1514,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "34321:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo storage pointer"
															}
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1097,
														"src": "34321:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34305:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1519,
												"nodeType": "IfStatement",
												"src": "34301:75:0",
												"trueBody": {
													"id": 1518,
													"nodeType": "Block",
													"src": "34343:33:0",
													"statements": [
														{
															"functionReturnParameters": 1504,
															"id": 1517,
															"nodeType": "Return",
															"src": "34358:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1521
												],
												"declarations": [
													{
														"constant": false,
														"id": 1521,
														"mutability": "mutable",
														"name": "NFTSupply",
														"nameLocation": "34394:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1600,
														"src": "34386:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1520,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34386:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1530,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1527,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "34438:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																],
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34430:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1525,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34430:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34430:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1522,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "34406:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																	"typeString": "struct NFTStake.PoolInfo storage pointer"
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NFTToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1093,
															"src": "34406:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1048",
																"typeString": "contract IERC721"
															}
														},
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 973,
														"src": "34406:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34406:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34386:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1531,
														"name": "NFTSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "34459:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34472:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34459:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "34455:103:0",
												"trueBody": {
													"id": 1542,
													"nodeType": "Block",
													"src": "34475:83:0",
													"statements": [
														{
															"expression": {
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1534,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1507,
																		"src": "34490:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																			"typeString": "struct NFTStake.PoolInfo storage pointer"
																		}
																	},
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1097,
																	"src": "34490:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1537,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "34513:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "34513:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34490:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1540,
															"nodeType": "ExpressionStatement",
															"src": "34490:35:0"
														},
														{
															"functionReturnParameters": 1504,
															"id": 1541,
															"nodeType": "Return",
															"src": "34540:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1545
												],
												"declarations": [
													{
														"constant": false,
														"id": 1545,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "34576:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1600,
														"src": "34568:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1544,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1552,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1547,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "34603:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																	"typeString": "struct NFTStake.PoolInfo storage pointer"
																}
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1097,
															"src": "34603:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1549,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "34625:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "34625:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1546,
														"name": "getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "34589:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34589:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34568:70:0"
											},
											{
												"assignments": [
													1554
												],
												"declarations": [
													{
														"constant": false,
														"id": 1554,
														"mutability": "mutable",
														"name": "DDTReward",
														"nameLocation": "34657:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1600,
														"src": "34649:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1553,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34649:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1566,
												"initialValue": {
													"arguments": [
														{
															"id": 1564,
															"name": "totalAllocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "34722:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1560,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1507,
																		"src": "34701:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																			"typeString": "struct NFTStake.PoolInfo storage pointer"
																		}
																	},
																	"id": 1561,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1095,
																	"src": "34701:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1557,
																			"name": "DDTPerBlock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "34684:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1555,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1545,
																			"src": "34669:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "34669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34669:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 107,
																"src": "34669:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34669:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "34669:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34669:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34649:89:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1572,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "34766:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																],
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34758:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1570,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34758:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34758:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1574,
															"name": "DDTReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "34773:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1567,
															"name": "DDT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "34749:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "34749:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34749:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "34749:34:0"
											},
											{
												"expression": {
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1577,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "34794:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo storage pointer"
															}
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "accDDTPerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1099,
														"src": "34794:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1588,
																		"name": "NFTSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1521,
																		"src": "34864:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "34854:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"id": 1583,
																				"name": "DDTReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1554,
																				"src": "34840:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "34840:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34840:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "34840:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34840:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1580,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1507,
																	"src": "34816:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																		"typeString": "struct NFTStake.PoolInfo storage pointer"
																	}
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "accDDTPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1099,
																"src": "34816:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "34816:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34816:59:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34794:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "34794:81:0"
											},
											{
												"expression": {
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1593,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "34886:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo storage pointer"
															}
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1097,
														"src": "34886:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1596,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "34909:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "34909:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34886:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "34886:35:0"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "34209:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "34228:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "34220:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34219:14:0"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34241:0:0"
									},
									"scope": 2086,
									"src": "34200:729:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1718,
										"nodeType": "Block",
										"src": "35054:683:0",
										"statements": [
											{
												"assignments": [
													1610
												],
												"declarations": [
													{
														"constant": false,
														"id": 1610,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "35082:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1718,
														"src": "35065:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo"
														},
														"typeName": {
															"id": 1609,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1608,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1100,
																"src": "35065:8:0"
															},
															"referencedDeclaration": 1100,
															"src": "35065:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1614,
												"initialValue": {
													"baseExpression": {
														"id": 1611,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "35089:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1613,
													"indexExpression": {
														"id": 1612,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "35098:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35089:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
														"typeString": "struct NFTStake.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35065:38:0"
											},
											{
												"assignments": [
													1617
												],
												"declarations": [
													{
														"constant": false,
														"id": 1617,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "35131:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1718,
														"src": "35114:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo"
														},
														"typeName": {
															"id": 1616,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1615,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1090,
																"src": "35114:8:0"
															},
															"referencedDeclaration": 1090,
															"src": "35114:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1624,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1618,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "35138:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo storage ref))"
															}
														},
														"id": 1620,
														"indexExpression": {
															"id": 1619,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "35147:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "35138:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
															"typeString": "mapping(address => struct NFTStake.UserInfo storage ref)"
														}
													},
													"id": 1623,
													"indexExpression": {
														"expression": {
															"id": 1621,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "35153:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "35153:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35138:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1090_storage",
														"typeString": "struct NFTStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35114:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1626,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "35186:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1625,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "35175:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35175:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1628,
												"nodeType": "ExpressionStatement",
												"src": "35175:16:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1629,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "35206:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo storage pointer"
															}
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1087,
														"src": "35206:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35220:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35206:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1661,
												"nodeType": "IfStatement",
												"src": "35202:233:0",
												"trueBody": {
													"id": 1660,
													"nodeType": "Block",
													"src": "35223:212:0",
													"statements": [
														{
															"assignments": [
																1634
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1634,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "35246:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1660,
																	"src": "35238:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1633,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "35238:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1648,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1645,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1617,
																			"src": "35307:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																				"typeString": "struct NFTStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1646,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1089,
																		"src": "35307:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35297:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1638,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1610,
																							"src": "35272:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																								"typeString": "struct NFTStake.PoolInfo storage pointer"
																							}
																						},
																						"id": 1639,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accDDTPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1099,
																						"src": "35272:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1635,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1617,
																							"src": "35256:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																								"typeString": "struct NFTStake.UserInfo storage pointer"
																							}
																						},
																						"id": 1636,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1087,
																						"src": "35256:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1637,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "35256:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1640,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "35256:36:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "35256:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35256:46:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "35256:50:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35256:67:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "35238:85:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1649,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1634,
																	"src": "35341:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35351:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "35341:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1659,
															"nodeType": "IfStatement",
															"src": "35338:86:0",
															"trueBody": {
																"id": 1658,
																"nodeType": "Block",
																"src": "35353:71:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1653,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "35388:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1654,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "35388:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1655,
																					"name": "pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1634,
																					"src": "35400:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1652,
																				"name": "safeDDTTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2061,
																				"src": "35372:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35372:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1657,
																		"nodeType": "ExpressionStatement",
																		"src": "35372:36:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1669,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "35484:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "35484:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35476:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1667,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35476:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35476:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1674,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "35505:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																],
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35497:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1672,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35497:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35497:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1676,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "35512:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1662,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1610,
																"src": "35445:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																	"typeString": "struct NFTStake.PoolInfo storage pointer"
																}
															},
															"id": 1665,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NFTToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1093,
															"src": "35445:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1048",
																"typeString": "contract IERC721"
															}
														},
														"id": 1666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "35445:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35445:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "35445:76:0"
											},
											{
												"expression": {
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1679,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "35532:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo storage pointer"
															}
														},
														"id": 1681,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1087,
														"src": "35532:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35562:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"expression": {
																	"id": 1682,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "35546:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																		"typeString": "struct NFTStake.UserInfo storage pointer"
																	}
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1087,
																"src": "35546:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "35546:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35546:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35532:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1688,
												"nodeType": "ExpressionStatement",
												"src": "35532:32:0"
											},
											{
												"expression": {
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1689,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "35575:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo storage pointer"
															}
														},
														"id": 1691,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1089,
														"src": "35575:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35634:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1695,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1610,
																			"src": "35609:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																				"typeString": "struct NFTStake.PoolInfo storage pointer"
																			}
																		},
																		"id": 1696,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accDDTPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1099,
																		"src": "35609:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1692,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1617,
																			"src": "35593:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																				"typeString": "struct NFTStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1693,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1087,
																		"src": "35593:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "35593:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35593:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "35593:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35593:46:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35575:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "35575:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1708,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "35669:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1703,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1617,
																"src": "35650:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																	"typeString": "struct NFTStake.UserInfo storage pointer"
																}
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenIds",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1085,
															"src": "35650:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "35650:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35650:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "35650:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1712,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "35702:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "35702:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1714,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "35714:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1715,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "35720:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1711,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "35694:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35694:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1717,
												"nodeType": "EmitStatement",
												"src": "35689:40:0"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "35007:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "35023:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "35015:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "35037:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "35029:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35014:32:0"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35054:0:0"
									},
									"scope": 2086,
									"src": "34998:739:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1933,
										"nodeType": "Block",
										"src": "35847:1468:0",
										"statements": [
											{
												"assignments": [
													1728
												],
												"declarations": [
													{
														"constant": false,
														"id": 1728,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "35875:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1933,
														"src": "35858:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo"
														},
														"typeName": {
															"id": 1727,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1726,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1100,
																"src": "35858:8:0"
															},
															"referencedDeclaration": 1100,
															"src": "35858:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1732,
												"initialValue": {
													"baseExpression": {
														"id": 1729,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "35882:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1731,
													"indexExpression": {
														"id": 1730,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "35891:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35882:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
														"typeString": "struct NFTStake.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35858:38:0"
											},
											{
												"assignments": [
													1735
												],
												"declarations": [
													{
														"constant": false,
														"id": 1735,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "35924:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1933,
														"src": "35907:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo"
														},
														"typeName": {
															"id": 1734,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1733,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1090,
																"src": "35907:8:0"
															},
															"referencedDeclaration": 1090,
															"src": "35907:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1742,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1736,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "35931:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo storage ref))"
															}
														},
														"id": 1738,
														"indexExpression": {
															"id": 1737,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "35940:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "35931:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
															"typeString": "mapping(address => struct NFTStake.UserInfo storage ref)"
														}
													},
													"id": 1741,
													"indexExpression": {
														"expression": {
															"id": 1739,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "35946:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "35946:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35931:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1090_storage",
														"typeString": "struct NFTStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35907:50:0"
											},
											{
												"assignments": [
													1744
												],
												"declarations": [
													{
														"constant": false,
														"id": 1744,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "35976:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1933,
														"src": "35968:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1743,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35968:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1745,
												"nodeType": "VariableDeclarationStatement",
												"src": "35968:15:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1746,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "35997:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36009:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "35997:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1924,
													"nodeType": "Block",
													"src": "36330:926:0",
													"statements": [
														{
															"assignments": [
																1796
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1796,
																	"mutability": "mutable",
																	"name": "hasTokenId",
																	"nameLocation": "36353:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1924,
																	"src": "36345:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1795,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "36345:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1798,
															"initialValue": {
																"hexValue": "30",
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36366:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "36345:22:0"
														},
														{
															"assignments": [
																1800
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1800,
																	"mutability": "mutable",
																	"name": "tokenIdIndex",
																	"nameLocation": "36390:12:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1924,
																	"src": "36382:20:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1799,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "36382:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1801,
															"nodeType": "VariableDeclarationStatement",
															"src": "36382:20:0"
														},
														{
															"body": {
																"id": 1829,
																"nodeType": "Block",
																"src": "36460:162:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"expression": {
																						"id": 1813,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1735,
																						"src": "36482:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																							"typeString": "struct NFTStake.UserInfo storage pointer"
																						}
																					},
																					"id": 1814,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "tokenIds",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1085,
																					"src": "36482:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 1816,
																				"indexExpression": {
																					"id": 1815,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1803,
																					"src": "36496:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "36482:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1817,
																				"name": "_tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1723,
																				"src": "36502:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "36482:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1828,
																		"nodeType": "IfStatement",
																		"src": "36479:128:0",
																		"trueBody": {
																			"id": 1827,
																			"nodeType": "Block",
																			"src": "36511:96:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 1821,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1819,
																							"name": "hasTokenId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1796,
																							"src": "36534:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "31",
																							"id": 1820,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "36547:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "36534:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1822,
																					"nodeType": "ExpressionStatement",
																					"src": "36534:14:0"
																				},
																				{
																					"expression": {
																						"id": 1825,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1823,
																							"name": "tokenIdIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1800,
																							"src": "36571:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 1824,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1803,
																							"src": "36586:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "36571:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1826,
																					"nodeType": "ExpressionStatement",
																					"src": "36571:16:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1805,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1803,
																	"src": "36432:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1806,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1735,
																			"src": "36434:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																				"typeString": "struct NFTStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1807,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenIds",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1085,
																		"src": "36434:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "36434:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36432:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1830,
															"initializationExpression": {
																"assignments": [
																	1803
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1803,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "36429:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1830,
																		"src": "36421:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1802,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "36421:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1804,
																"nodeType": "VariableDeclarationStatement",
																"src": "36421:9:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "36456:3:0",
																	"subExpression": {
																		"id": 1810,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "36456:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1812,
																"nodeType": "ExpressionStatement",
																"src": "36456:3:0"
															},
															"nodeType": "ForStatement",
															"src": "36417:205:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1832,
																			"name": "hasTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1796,
																			"src": "36644:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36658:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "36644:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "596f7520617265206e6f74204f776e6572206f6620746f6b656e206964",
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36661:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd",
																			"typeString": "literal_string \"You are not Owner of token id\""
																		},
																		"value": "You are not Owner of token id"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_6bd482f4508d6ff87f5e2fd70a2544768e808d8d25d190c4a2ac86648d1a36cd",
																			"typeString": "literal_string \"You are not Owner of token id\""
																		}
																	],
																	"id": 1831,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "36636:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36636:57:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1837,
															"nodeType": "ExpressionStatement",
															"src": "36636:57:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1839,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1735,
																				"src": "36716:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1840,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1087,
																			"src": "36716:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36731:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "36716:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "77697468647261773a206e6f7420676f6f64",
																		"id": 1843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36734:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																			"typeString": "literal_string \"withdraw: not good\""
																		},
																		"value": "withdraw: not good"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																			"typeString": "literal_string \"withdraw: not good\""
																		}
																	],
																	"id": 1838,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "36708:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36708:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1845,
															"nodeType": "ExpressionStatement",
															"src": "36708:47:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1847,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1721,
																		"src": "36781:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1846,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "36770:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36770:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1849,
															"nodeType": "ExpressionStatement",
															"src": "36770:16:0"
														},
														{
															"expression": {
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1850,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "36801:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1861,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1735,
																				"src": "36862:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1862,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "rewardDebt",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1089,
																			"src": "36862:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "31653132",
																					"id": 1858,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "36852:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000_by_1",
																						"typeString": "int_const 1000000000000"
																					},
																					"value": "1e12"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000000000000_by_1",
																						"typeString": "int_const 1000000000000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1854,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1728,
																								"src": "36827:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																									"typeString": "struct NFTStake.PoolInfo storage pointer"
																								}
																							},
																							"id": 1855,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "accDDTPerShare",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1099,
																							"src": "36827:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1851,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1735,
																								"src": "36811:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																									"typeString": "struct NFTStake.UserInfo storage pointer"
																								}
																							},
																							"id": 1852,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "amount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1087,
																							"src": "36811:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1853,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "36811:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1856,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "36811:36:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "36811:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36811:46:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "36811:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36811:67:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36801:77:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1865,
															"nodeType": "ExpressionStatement",
															"src": "36801:77:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1866,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "36896:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36906:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "36896:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1876,
															"nodeType": "IfStatement",
															"src": "36893:86:0",
															"trueBody": {
																"id": 1875,
																"nodeType": "Block",
																"src": "36908:71:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1870,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "36943:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1871,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "36943:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1872,
																					"name": "pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "36955:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1869,
																				"name": "safeDDTTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2061,
																				"src": "36927:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36927:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1874,
																		"nodeType": "ExpressionStatement",
																		"src": "36927:36:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1877,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "36993:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																			"typeString": "struct NFTStake.UserInfo storage pointer"
																		}
																	},
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1087,
																	"src": "36993:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 1883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37023:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1880,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1735,
																				"src": "37007:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1881,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1087,
																			"src": "37007:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "37007:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37007:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36993:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1886,
															"nodeType": "ExpressionStatement",
															"src": "36993:32:0"
														},
														{
															"expression": {
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1887,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "37040:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																			"typeString": "struct NFTStake.UserInfo storage pointer"
																		}
																	},
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1089,
																	"src": "37040:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31653132",
																			"id": 1897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37099:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			},
																			"value": "1e12"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1893,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1728,
																						"src": "37074:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																							"typeString": "struct NFTStake.PoolInfo storage pointer"
																						}
																					},
																					"id": 1894,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "accDDTPerShare",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1099,
																					"src": "37074:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1890,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1735,
																						"src": "37058:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																							"typeString": "struct NFTStake.UserInfo storage pointer"
																						}
																					},
																					"id": 1891,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1087,
																					"src": "37058:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1892,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 107,
																				"src": "37058:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37058:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 124,
																		"src": "37058:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37058:46:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37040:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1900,
															"nodeType": "ExpressionStatement",
															"src": "37040:64:0"
														},
														{
															"expression": {
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "37119:34:0",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1901,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1735,
																			"src": "37126:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																				"typeString": "struct NFTStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1902,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenIds",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1085,
																		"src": "37126:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1904,
																	"indexExpression": {
																		"id": 1903,
																		"name": "tokenIdIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1800,
																		"src": "37140:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "37126:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1906,
															"nodeType": "ExpressionStatement",
															"src": "37119:34:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1914,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "37207:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTStake_$2086",
																					"typeString": "contract NFTStake"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTStake_$2086",
																					"typeString": "contract NFTStake"
																				}
																			],
																			"id": 1913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "37199:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1912,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "37199:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37199:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1918,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "37222:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "37222:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "37214:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1916,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "37214:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37214:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1921,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1723,
																		"src": "37235:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1907,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1728,
																			"src": "37168:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																				"typeString": "struct NFTStake.PoolInfo storage pointer"
																			}
																		},
																		"id": 1910,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "NFTToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1093,
																		"src": "37168:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$1048",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 991,
																	"src": "37168:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37168:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1923,
															"nodeType": "ExpressionStatement",
															"src": "37168:76:0"
														}
													]
												},
												"id": 1925,
												"nodeType": "IfStatement",
												"src": "35994:1262:0",
												"trueBody": {
													"id": 1794,
													"nodeType": "Block",
													"src": "36011:314:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1750,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1721,
																		"src": "36037:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1749,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "36026:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36026:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1752,
															"nodeType": "ExpressionStatement",
															"src": "36026:16:0"
														},
														{
															"expression": {
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1753,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "36057:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1764,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1735,
																				"src": "36118:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1765,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "rewardDebt",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1089,
																			"src": "36118:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "31653132",
																					"id": 1761,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "36108:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000_by_1",
																						"typeString": "int_const 1000000000000"
																					},
																					"value": "1e12"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000000000000_by_1",
																						"typeString": "int_const 1000000000000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1757,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1728,
																								"src": "36083:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																									"typeString": "struct NFTStake.PoolInfo storage pointer"
																								}
																							},
																							"id": 1758,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "accDDTPerShare",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1099,
																							"src": "36083:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1754,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1735,
																								"src": "36067:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																									"typeString": "struct NFTStake.UserInfo storage pointer"
																								}
																							},
																							"id": 1755,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "amount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1087,
																							"src": "36067:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1756,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "36067:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1759,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "36067:36:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "36067:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36067:46:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "36067:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36067:67:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36057:77:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1768,
															"nodeType": "ExpressionStatement",
															"src": "36057:77:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1769,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "36152:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36162:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "36152:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1779,
															"nodeType": "IfStatement",
															"src": "36149:86:0",
															"trueBody": {
																"id": 1778,
																"nodeType": "Block",
																"src": "36164:71:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1773,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "36199:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "36199:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1775,
																					"name": "pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "36211:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1772,
																				"name": "safeDDTTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2061,
																				"src": "36183:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36183:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1777,
																		"nodeType": "ExpressionStatement",
																		"src": "36183:36:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1780,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "36249:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																			"typeString": "struct NFTStake.UserInfo storage pointer"
																		}
																	},
																	"id": 1782,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1089,
																	"src": "36249:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31653132",
																			"id": 1790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36308:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			},
																			"value": "1e12"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1786,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1728,
																						"src": "36283:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																							"typeString": "struct NFTStake.PoolInfo storage pointer"
																						}
																					},
																					"id": 1787,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "accDDTPerShare",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1099,
																					"src": "36283:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1783,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1735,
																						"src": "36267:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																							"typeString": "struct NFTStake.UserInfo storage pointer"
																						}
																					},
																					"id": 1784,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1087,
																					"src": "36267:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 107,
																				"src": "36267:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36267:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 124,
																		"src": "36267:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36267:46:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36249:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1793,
															"nodeType": "ExpressionStatement",
															"src": "36249:64:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1927,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "37280:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "37280:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1929,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "37292:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1930,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "37298:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1926,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "37271:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37271:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1932,
												"nodeType": "EmitStatement",
												"src": "37266:41:0"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 1934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "35799:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "35816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "35808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "35830:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "35822:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35807:32:0"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35847:0:0"
									},
									"scope": 2086,
									"src": "35790:1525:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "37364:529:0",
										"statements": [
											{
												"assignments": [
													1941
												],
												"declarations": [
													{
														"constant": false,
														"id": 1941,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "37392:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2022,
														"src": "37375:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
															"typeString": "struct NFTStake.PoolInfo"
														},
														"typeName": {
															"id": 1940,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1939,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1100,
																"src": "37375:8:0"
															},
															"referencedDeclaration": 1100,
															"src": "37375:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																"typeString": "struct NFTStake.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1945,
												"initialValue": {
													"baseExpression": {
														"id": 1942,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "37399:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1100_storage_$dyn_storage",
															"typeString": "struct NFTStake.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1944,
													"indexExpression": {
														"id": 1943,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "37408:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37399:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1100_storage",
														"typeString": "struct NFTStake.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37375:38:0"
											},
											{
												"assignments": [
													1948
												],
												"declarations": [
													{
														"constant": false,
														"id": 1948,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "37441:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2022,
														"src": "37424:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
															"typeString": "struct NFTStake.UserInfo"
														},
														"typeName": {
															"id": 1947,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1946,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1090,
																"src": "37424:8:0"
															},
															"referencedDeclaration": 1090,
															"src": "37424:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1955,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1949,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "37448:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTStake.UserInfo storage ref))"
															}
														},
														"id": 1951,
														"indexExpression": {
															"id": 1950,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "37457:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "37448:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1090_storage_$",
															"typeString": "mapping(address => struct NFTStake.UserInfo storage ref)"
														}
													},
													"id": 1954,
													"indexExpression": {
														"expression": {
															"id": 1952,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "37463:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "37463:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37448:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1090_storage",
														"typeString": "struct NFTStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37424:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1957,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "37496:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1956,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "37485:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37485:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1959,
												"nodeType": "ExpressionStatement",
												"src": "37485:16:0"
											},
											{
												"assignments": [
													1961
												],
												"declarations": [
													{
														"constant": false,
														"id": 1961,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "37520:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2022,
														"src": "37512:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1960,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37512:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1975,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1972,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1948,
																"src": "37581:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																	"typeString": "struct NFTStake.UserInfo storage pointer"
																}
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1089,
															"src": "37581:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37571:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1965,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1941,
																				"src": "37546:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																					"typeString": "struct NFTStake.PoolInfo storage pointer"
																				}
																			},
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accDDTPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1099,
																			"src": "37546:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1962,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1948,
																				"src": "37530:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																					"typeString": "struct NFTStake.UserInfo storage pointer"
																				}
																			},
																			"id": 1963,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1087,
																			"src": "37530:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "37530:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37530:36:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "37530:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37530:46:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "37530:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37530:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37512:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1977,
																"name": "pending",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1961,
																"src": "37616:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37626:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "37616:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206973207a65726f",
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37629:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															},
															"value": "Amount is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
																"typeString": "literal_string \"Amount is zero\""
															}
														],
														"id": 1976,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37608:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37608:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1982,
												"nodeType": "ExpressionStatement",
												"src": "37608:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1988,
																	"name": "NFTMasterChef",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "37677:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
																		"typeString": "contract INFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
																		"typeString": "contract INFTMasterChef"
																	}
																],
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37669:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1986,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37669:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37669:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1990,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "37693:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1983,
															"name": "DDT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "37657:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 238,
														"src": "37657:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37657:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1992,
												"nodeType": "ExpressionStatement",
												"src": "37657:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1996,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "37739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1997,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "37748:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "37748:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1993,
															"name": "NFTMasterChef",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "37712:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INFTMasterChef_$1071",
																"typeString": "contract INFTMasterChef"
															}
														},
														"id": 1995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "enterStaking",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1070,
														"src": "37712:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address) external"
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37712:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2000,
												"nodeType": "ExpressionStatement",
												"src": "37712:47:0"
											},
											{
												"expression": {
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2001,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "37770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																"typeString": "struct NFTStake.UserInfo storage pointer"
															}
														},
														"id": 2003,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1089,
														"src": "37770:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37829:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2007,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1941,
																			"src": "37804:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1100_storage_ptr",
																				"typeString": "struct NFTStake.PoolInfo storage pointer"
																			}
																		},
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accDDTPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1099,
																		"src": "37804:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2004,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1948,
																			"src": "37788:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1090_storage_ptr",
																				"typeString": "struct NFTStake.UserInfo storage pointer"
																			}
																		},
																		"id": 2005,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1087,
																		"src": "37788:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "37788:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37788:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "37788:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37788:46:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37770:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2014,
												"nodeType": "ExpressionStatement",
												"src": "37770:64:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2016,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "37859:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "37859:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2018,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "37871:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2019,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "37877:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2015,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "37850:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37850:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2021,
												"nodeType": "EmitStatement",
												"src": "37845:40:0"
											}
										]
									},
									"functionSelector": "1395d8c9",
									"id": 2023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compundDDT",
									"nameLocation": "37332:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "37351:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "37343:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37342:14:0"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37364:0:0"
									},
									"scope": 2086,
									"src": "37323:570:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "38069:207:0",
										"statements": [
											{
												"assignments": [
													2031
												],
												"declarations": [
													{
														"constant": false,
														"id": 2031,
														"mutability": "mutable",
														"name": "DDTbal",
														"nameLocation": "38088:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2060,
														"src": "38080:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2030,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38080:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2039,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2036,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "38119:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStake_$2086",
																		"typeString": "contract NFTStake"
																	}
																],
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38111:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2034,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38111:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38111:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2032,
															"name": "DDT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "38097:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "38097:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38097:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38080:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2040,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2027,
														"src": "38140:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2041,
														"name": "DDTbal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2031,
														"src": "38150:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38140:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2058,
													"nodeType": "Block",
													"src": "38216:53:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2054,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "38244:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2055,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2027,
																		"src": "38249:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2051,
																		"name": "DDT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "38231:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 218,
																	"src": "38231:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38231:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2057,
															"nodeType": "ExpressionStatement",
															"src": "38231:26:0"
														}
													]
												},
												"id": 2059,
												"nodeType": "IfStatement",
												"src": "38136:133:0",
												"trueBody": {
													"id": 2050,
													"nodeType": "Block",
													"src": "38158:52:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2046,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "38186:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2047,
																		"name": "DDTbal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2031,
																		"src": "38191:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2043,
																		"name": "DDT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "38173:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 218,
																	"src": "38173:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38173:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2049,
															"nodeType": "ExpressionStatement",
															"src": "38173:25:0"
														}
													]
												}
											}
										]
									},
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDDTTransfer",
									"nameLocation": "38014:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "38038:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "38030:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "38051:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "38043:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38029:30:0"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38069:0:0"
									},
									"scope": 2086,
									"src": "38005:271:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2072,
										"nodeType": "Block",
										"src": "38342:37:0",
										"statements": [
											{
												"expression": {
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2068,
														"name": "devaddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "38353:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2069,
														"name": "_devaddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "38363:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "38353:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2071,
												"nodeType": "ExpressionStatement",
												"src": "38353:18:0"
											}
										]
									},
									"functionSelector": "d0d41fe1",
									"id": 2073,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2066,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2065,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "38332:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "38332:9:0"
										}
									],
									"name": "setDevAddress",
									"nameLocation": "38293:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "_devaddr",
												"nameLocation": "38315:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "38307:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38306:18:0"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38342:0:0"
									},
									"scope": 2086,
									"src": "38284:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "38450:42:0",
										"statements": [
											{
												"expression": {
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2080,
														"name": "DDTPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "38461:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2081,
														"name": "newAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2075,
														"src": "38475:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38461:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2083,
												"nodeType": "ExpressionStatement",
												"src": "38461:23:0"
											}
										]
									},
									"functionSelector": "612eee43",
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2078,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2077,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "38440:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "38440:9:0"
										}
									],
									"name": "updateDDTPerBlock",
									"nameLocation": "38396:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "38422:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "38414:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38413:19:0"
									},
									"returnParameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38450:0:0"
									},
									"scope": 2086,
									"src": "38387:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2087,
							"src": "28007:10488:0",
							"usedErrors": []
						}
					],
					"src": "173:38322:0"
				},
				"id": 0
			}
		}
	}
}
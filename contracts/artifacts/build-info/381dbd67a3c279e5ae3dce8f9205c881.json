{
	"id": "381dbd67a3c279e5ae3dce8f9205c881",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LpPrice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface Router {\r\n    function getAmountsOut(uint amountIn, address[2] memory path) external\r\n        view\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\ncontract LpUtils {\r\n    address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\r\n    address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7;\r\n    uint256 amount = 1000000000000000000;\r\n\r\n    function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r\n        uint256 totalSupply = lpAddress.totalSupply();\r\n\r\n        uint256[] memory price0 = routerAddress.getAmountsOut(amount,[busd, busd]);\r\n\r\n        return totalSupply;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/LpPrice.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":412:8686  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":412:8686  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122087ea29781c8cee3d514f3e86c36595990b9a16ae995d3a0a8e4e832cc90dd3f964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087ea29781c8cee3d514f3e86c36595990b9a16ae995d3a0a8e4e832cc90dd3f964736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xEA 0x29 PUSH25 0x1C8CEE3D514F3E86C36595990B9A16AE995D3A0A8E4E832CC9 0xD 0xD3 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "412:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087ea29781c8cee3d514f3e86c36595990b9a16ae995d3a0a8e4e832cc90dd3f964736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xEA 0x29 PUSH25 0x1C8CEE3D514F3E86C36595990B9A16AE995D3A0A8E4E832CC9 0xD 0xD3 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "412:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122087ea29781c8cee3d514f3e86c36595990b9a16ae995d3a0a8e4e832cc90dd3f964736f6c63430008070033",
									".code": [
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xa6ece2fb13d058639a7ba75f1adde256ec5c3120cc77c1342ea8c00a363fc00c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc4583542d0d52e3c2c74253a05d1ba859a5a6f9a9fb293ca020c81cf0af5c56\",\"dweb:/ipfs/QmPbR5xfMAcYbrHJG6CsUrcWwKHUc3L328pVowZHAWn5td\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xa6ece2fb13d058639a7ba75f1adde256ec5c3120cc77c1342ea8c00a363fc00c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc4583542d0d52e3c2c74253a05d1ba859a5a6f9a9fb293ca020c81cf0af5c56\",\"dweb:/ipfs/QmPbR5xfMAcYbrHJG6CsUrcWwKHUc3L328pVowZHAWn5td\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LpUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "BUSD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								},
								{
									"internalType": "contract Router",
									"name": "routerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "busd",
									"type": "address"
								}
							],
							"name": "CalcLpPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WBNB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":8847:9348  contract LpUtils {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LpPrice.sol\":8893:8935  0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0xae13d989dac2f0debff460ac112a837c89baa7cd\n    /* \"contracts/LpPrice.sol\":8871:8935  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":8964:9006  0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x78867bbeef44f2326bf8ddd1941a4439382ef2a7\n    /* \"contracts/LpPrice.sol\":8942:9006  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":9030:9049  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/LpPrice.sol\":9013:9049  uint256 amount = 1000000000000000000 */\n  0x02\n  sstore\n    /* \"contracts/LpPrice.sol\":8847:9348  contract LpUtils {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":8847:9348  contract LpUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x20ae0b6d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x484f4ea9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8dd95002\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LpPrice.sol\":9058:9345  function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8942:9006  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8871:8935  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9058:9345  function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r... */\n    tag_9:\n        /* \"contracts/LpPrice.sol\":9155:9162  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9174:9193  uint256 totalSupply */\n      dup1\n        /* \"contracts/LpPrice.sol\":9196:9205  lpAddress */\n      dup5\n        /* \"contracts/LpPrice.sol\":9196:9217  lpAddress.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/LpPrice.sol\":9196:9219  lpAddress.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"contracts/LpPrice.sol\":9174:9219  uint256 totalSupply = lpAddress.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9232:9255  uint256[] memory price0 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9258:9271  routerAddress */\n      dup5\n        /* \"contracts/LpPrice.sol\":9258:9285  routerAddress.getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbd5f68b0\n        /* \"contracts/LpPrice.sol\":9286:9292  amount */\n      sload(0x02)\n        /* \"contracts/LpPrice.sol\":9258:9306  routerAddress.getAmountsOut(amount,[busd, busd]) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/LpPrice.sol\":9294:9298  busd */\n      dup9\n        /* \"contracts/LpPrice.sol\":9258:9306  routerAddress.getAmountsOut(amount,[busd, busd]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LpPrice.sol\":9300:9304  busd */\n      dup9\n        /* \"contracts/LpPrice.sol\":9258:9306  routerAddress.getAmountsOut(amount,[busd, busd]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"contracts/LpPrice.sol\":9232:9306  uint256[] memory price0 = routerAddress.getAmountsOut(amount,[busd, busd]) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9326:9337  totalSupply */\n      dup2\n        /* \"contracts/LpPrice.sol\":9319:9337  return totalSupply */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9058:9345  function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8942:9006  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_13:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8871:8935  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_17:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":24:768   */\n    tag_33:\n        /* \"#utility.yul\":131:136   */\n      0x00\n        /* \"#utility.yul\":156:237   */\n      tag_35\n        /* \"#utility.yul\":172:236   */\n      tag_36\n        /* \"#utility.yul\":229:235   */\n      dup5\n        /* \"#utility.yul\":172:236   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":156:237   */\n      tag_38\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":147:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":257:262   */\n      dup1\n        /* \"#utility.yul\":286:292   */\n      dup4\n        /* \"#utility.yul\":279:284   */\n      dup3\n        /* \"#utility.yul\":272:293   */\n      mstore\n        /* \"#utility.yul\":320:324   */\n      0x20\n        /* \"#utility.yul\":313:318   */\n      dup3\n        /* \"#utility.yul\":309:325   */\n      add\n        /* \"#utility.yul\":302:325   */\n      swap1\n      pop\n        /* \"#utility.yul\":346:352   */\n      dup3\n        /* \"#utility.yul\":396:399   */\n      dup6\n        /* \"#utility.yul\":388:392   */\n      0x20\n        /* \"#utility.yul\":380:386   */\n      dup7\n        /* \"#utility.yul\":376:393   */\n      mul\n        /* \"#utility.yul\":371:374   */\n      dup3\n        /* \"#utility.yul\":367:394   */\n      add\n        /* \"#utility.yul\":364:400   */\n      gt\n        /* \"#utility.yul\":361:504   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":415:494   */\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":361:504   */\n    tag_39:\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":513:762   */\n    tag_42:\n        /* \"#utility.yul\":538:544   */\n      dup6\n        /* \"#utility.yul\":535:536   */\n      dup2\n        /* \"#utility.yul\":532:545   */\n      lt\n        /* \"#utility.yul\":513:762   */\n      iszero\n      tag_44\n      jumpi\n        /* \"#utility.yul\":606:609   */\n      dup2\n        /* \"#utility.yul\":635:683   */\n      tag_45\n        /* \"#utility.yul\":679:682   */\n      dup9\n        /* \"#utility.yul\":667:677   */\n      dup3\n        /* \"#utility.yul\":635:683   */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":630:633   */\n      dup5\n        /* \"#utility.yul\":623:684   */\n      mstore\n        /* \"#utility.yul\":713:717   */\n      0x20\n        /* \"#utility.yul\":708:711   */\n      dup5\n        /* \"#utility.yul\":704:718   */\n      add\n        /* \"#utility.yul\":697:718   */\n      swap4\n      pop\n        /* \"#utility.yul\":747:751   */\n      0x20\n        /* \"#utility.yul\":742:745   */\n      dup4\n        /* \"#utility.yul\":738:752   */\n      add\n        /* \"#utility.yul\":731:752   */\n      swap3\n      pop\n        /* \"#utility.yul\":573:762   */\n      pop\n        /* \"#utility.yul\":560:561   */\n      0x01\n        /* \"#utility.yul\":557:558   */\n      dup2\n        /* \"#utility.yul\":553:562   */\n      add\n        /* \"#utility.yul\":548:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":513:762   */\n      jump(tag_42)\n    tag_44:\n        /* \"#utility.yul\":517:531   */\n      pop\n        /* \"#utility.yul\":137:768   */\n      pop\n      pop\n        /* \"#utility.yul\":24:768   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:913   */\n    tag_47:\n        /* \"#utility.yul\":820:825   */\n      0x00\n        /* \"#utility.yul\":858:864   */\n      dup2\n        /* \"#utility.yul\":845:865   */\n      calldataload\n        /* \"#utility.yul\":836:865   */\n      swap1\n      pop\n        /* \"#utility.yul\":874:907   */\n      tag_49\n        /* \"#utility.yul\":901:906   */\n      dup2\n        /* \"#utility.yul\":874:907   */\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":774:913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":936:1321   */\n    tag_51:\n        /* \"#utility.yul\":1018:1023   */\n      0x00\n        /* \"#utility.yul\":1067:1070   */\n      dup3\n        /* \"#utility.yul\":1060:1064   */\n      0x1f\n        /* \"#utility.yul\":1052:1058   */\n      dup4\n        /* \"#utility.yul\":1048:1065   */\n      add\n        /* \"#utility.yul\":1044:1071   */\n      slt\n        /* \"#utility.yul\":1034:1156   */\n      tag_53\n      jumpi\n        /* \"#utility.yul\":1075:1154   */\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1034:1156   */\n    tag_53:\n        /* \"#utility.yul\":1185:1191   */\n      dup2\n        /* \"#utility.yul\":1179:1192   */\n      mload\n        /* \"#utility.yul\":1210:1315   */\n      tag_56\n        /* \"#utility.yul\":1311:1314   */\n      dup5\n        /* \"#utility.yul\":1303:1309   */\n      dup3\n        /* \"#utility.yul\":1296:1300   */\n      0x20\n        /* \"#utility.yul\":1288:1294   */\n      dup7\n        /* \"#utility.yul\":1284:1301   */\n      add\n        /* \"#utility.yul\":1210:1315   */\n      tag_33\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1201:1315   */\n      swap2\n      pop\n        /* \"#utility.yul\":1024:1321   */\n      pop\n        /* \"#utility.yul\":936:1321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1327:1492   */\n    tag_57:\n        /* \"#utility.yul\":1386:1391   */\n      0x00\n        /* \"#utility.yul\":1424:1430   */\n      dup2\n        /* \"#utility.yul\":1411:1431   */\n      calldataload\n        /* \"#utility.yul\":1402:1431   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1486   */\n      tag_59\n        /* \"#utility.yul\":1480:1485   */\n      dup2\n        /* \"#utility.yul\":1440:1486   */\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1327:1492   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1498:1665   */\n    tag_61:\n        /* \"#utility.yul\":1558:1563   */\n      0x00\n        /* \"#utility.yul\":1596:1602   */\n      dup2\n        /* \"#utility.yul\":1583:1603   */\n      calldataload\n        /* \"#utility.yul\":1574:1603   */\n      swap1\n      pop\n        /* \"#utility.yul\":1612:1659   */\n      tag_63\n        /* \"#utility.yul\":1653:1658   */\n      dup2\n        /* \"#utility.yul\":1612:1659   */\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1498:1665   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1671:1814   */\n    tag_46:\n        /* \"#utility.yul\":1728:1733   */\n      0x00\n        /* \"#utility.yul\":1759:1765   */\n      dup2\n        /* \"#utility.yul\":1753:1766   */\n      mload\n        /* \"#utility.yul\":1744:1766   */\n      swap1\n      pop\n        /* \"#utility.yul\":1775:1808   */\n      tag_66\n        /* \"#utility.yul\":1802:1807   */\n      dup2\n        /* \"#utility.yul\":1775:1808   */\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1671:1814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1820:2374   */\n    tag_31:\n        /* \"#utility.yul\":1915:1921   */\n      0x00\n        /* \"#utility.yul\":1964:1966   */\n      0x20\n        /* \"#utility.yul\":1952:1961   */\n      dup3\n        /* \"#utility.yul\":1943:1950   */\n      dup5\n        /* \"#utility.yul\":1939:1962   */\n      sub\n        /* \"#utility.yul\":1935:1967   */\n      slt\n        /* \"#utility.yul\":1932:2051   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":1970:2049   */\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1932:2051   */\n    tag_69:\n        /* \"#utility.yul\":2111:2112   */\n      0x00\n        /* \"#utility.yul\":2100:2109   */\n      dup3\n        /* \"#utility.yul\":2096:2113   */\n      add\n        /* \"#utility.yul\":2090:2114   */\n      mload\n        /* \"#utility.yul\":2141:2159   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2133:2139   */\n      dup2\n        /* \"#utility.yul\":2130:2160   */\n      gt\n        /* \"#utility.yul\":2127:2244   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":2163:2242   */\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2127:2244   */\n    tag_72:\n        /* \"#utility.yul\":2268:2357   */\n      tag_75\n        /* \"#utility.yul\":2349:2356   */\n      dup5\n        /* \"#utility.yul\":2340:2346   */\n      dup3\n        /* \"#utility.yul\":2329:2338   */\n      dup6\n        /* \"#utility.yul\":2325:2347   */\n      add\n        /* \"#utility.yul\":2268:2357   */\n      tag_51\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2258:2357   */\n      swap2\n      pop\n        /* \"#utility.yul\":2061:2367   */\n      pop\n        /* \"#utility.yul\":1820:2374   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2380:3053   */\n    tag_8:\n        /* \"#utility.yul\":2484:2490   */\n      0x00\n        /* \"#utility.yul\":2492:2498   */\n      dup1\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2549:2551   */\n      0x60\n        /* \"#utility.yul\":2537:2546   */\n      dup5\n        /* \"#utility.yul\":2528:2535   */\n      dup7\n        /* \"#utility.yul\":2524:2547   */\n      sub\n        /* \"#utility.yul\":2520:2552   */\n      slt\n        /* \"#utility.yul\":2517:2636   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":2555:2634   */\n      tag_78\n      tag_71\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2517:2636   */\n    tag_77:\n        /* \"#utility.yul\":2675:2676   */\n      0x00\n        /* \"#utility.yul\":2700:2766   */\n      tag_79\n        /* \"#utility.yul\":2758:2765   */\n      dup7\n        /* \"#utility.yul\":2749:2755   */\n      dup3\n        /* \"#utility.yul\":2738:2747   */\n      dup8\n        /* \"#utility.yul\":2734:2756   */\n      add\n        /* \"#utility.yul\":2700:2766   */\n      tag_57\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2690:2766   */\n      swap4\n      pop\n        /* \"#utility.yul\":2646:2776   */\n      pop\n        /* \"#utility.yul\":2815:2817   */\n      0x20\n        /* \"#utility.yul\":2841:2908   */\n      tag_80\n        /* \"#utility.yul\":2900:2907   */\n      dup7\n        /* \"#utility.yul\":2891:2897   */\n      dup3\n        /* \"#utility.yul\":2880:2889   */\n      dup8\n        /* \"#utility.yul\":2876:2898   */\n      add\n        /* \"#utility.yul\":2841:2908   */\n      tag_61\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2831:2908   */\n      swap3\n      pop\n        /* \"#utility.yul\":2786:2918   */\n      pop\n        /* \"#utility.yul\":2957:2959   */\n      0x40\n        /* \"#utility.yul\":2983:3036   */\n      tag_81\n        /* \"#utility.yul\":3028:3035   */\n      dup7\n        /* \"#utility.yul\":3019:3025   */\n      dup3\n        /* \"#utility.yul\":3008:3017   */\n      dup8\n        /* \"#utility.yul\":3004:3026   */\n      add\n        /* \"#utility.yul\":2983:3036   */\n      tag_47\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2973:3036   */\n      swap2\n      pop\n        /* \"#utility.yul\":2928:3046   */\n      pop\n        /* \"#utility.yul\":2380:3053   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3059:3410   */\n    tag_24:\n        /* \"#utility.yul\":3129:3135   */\n      0x00\n        /* \"#utility.yul\":3178:3180   */\n      0x20\n        /* \"#utility.yul\":3166:3175   */\n      dup3\n        /* \"#utility.yul\":3157:3164   */\n      dup5\n        /* \"#utility.yul\":3153:3176   */\n      sub\n        /* \"#utility.yul\":3149:3181   */\n      slt\n        /* \"#utility.yul\":3146:3265   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":3184:3263   */\n      tag_84\n      tag_71\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3146:3265   */\n    tag_83:\n        /* \"#utility.yul\":3304:3305   */\n      0x00\n        /* \"#utility.yul\":3329:3393   */\n      tag_85\n        /* \"#utility.yul\":3385:3392   */\n      dup5\n        /* \"#utility.yul\":3376:3382   */\n      dup3\n        /* \"#utility.yul\":3365:3374   */\n      dup6\n        /* \"#utility.yul\":3361:3383   */\n      add\n        /* \"#utility.yul\":3329:3393   */\n      tag_46\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":3319:3393   */\n      swap2\n      pop\n        /* \"#utility.yul\":3275:3403   */\n      pop\n        /* \"#utility.yul\":3059:3410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3416:3595   */\n    tag_86:\n        /* \"#utility.yul\":3485:3495   */\n      0x00\n        /* \"#utility.yul\":3506:3552   */\n      tag_88\n        /* \"#utility.yul\":3548:3551   */\n      dup4\n        /* \"#utility.yul\":3540:3546   */\n      dup4\n        /* \"#utility.yul\":3506:3552   */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":3584:3588   */\n      0x20\n        /* \"#utility.yul\":3579:3582   */\n      dup4\n        /* \"#utility.yul\":3575:3589   */\n      add\n        /* \"#utility.yul\":3561:3589   */\n      swap1\n      pop\n        /* \"#utility.yul\":3416:3595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3601:3709   */\n    tag_89:\n        /* \"#utility.yul\":3678:3702   */\n      tag_91\n        /* \"#utility.yul\":3696:3701   */\n      dup2\n        /* \"#utility.yul\":3678:3702   */\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3673:3676   */\n      dup3\n        /* \"#utility.yul\":3666:3703   */\n      mstore\n        /* \"#utility.yul\":3601:3709   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3715:3833   */\n    tag_93:\n        /* \"#utility.yul\":3802:3826   */\n      tag_95\n        /* \"#utility.yul\":3820:3825   */\n      dup2\n        /* \"#utility.yul\":3802:3826   */\n      tag_92\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":3797:3800   */\n      dup3\n        /* \"#utility.yul\":3790:3827   */\n      mstore\n        /* \"#utility.yul\":3715:3833   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3871:4565   */\n    tag_96:\n        /* \"#utility.yul\":4007:4059   */\n      tag_98\n        /* \"#utility.yul\":4053:4058   */\n      dup2\n        /* \"#utility.yul\":4007:4059   */\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":4075:4159   */\n      tag_100\n        /* \"#utility.yul\":4152:4158   */\n      dup2\n        /* \"#utility.yul\":4147:4150   */\n      dup5\n        /* \"#utility.yul\":4075:4159   */\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":4068:4159   */\n      swap3\n      pop\n        /* \"#utility.yul\":4183:4237   */\n      tag_102\n        /* \"#utility.yul\":4231:4236   */\n      dup3\n        /* \"#utility.yul\":4183:4237   */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":4260:4267   */\n      dup1\n        /* \"#utility.yul\":4291:4292   */\n      0x00\n        /* \"#utility.yul\":4276:4558   */\n    tag_104:\n        /* \"#utility.yul\":4301:4307   */\n      dup4\n        /* \"#utility.yul\":4298:4299   */\n      dup2\n        /* \"#utility.yul\":4295:4308   */\n      lt\n        /* \"#utility.yul\":4276:4558   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":4377:4383   */\n      dup2\n        /* \"#utility.yul\":4371:4384   */\n      mload\n        /* \"#utility.yul\":4404:4467   */\n      tag_107\n        /* \"#utility.yul\":4463:4466   */\n      dup8\n        /* \"#utility.yul\":4448:4461   */\n      dup3\n        /* \"#utility.yul\":4404:4467   */\n      tag_86\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":4397:4467   */\n      swap7\n      pop\n        /* \"#utility.yul\":4490:4548   */\n      tag_108\n        /* \"#utility.yul\":4541:4547   */\n      dup4\n        /* \"#utility.yul\":4490:4548   */\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":4480:4548   */\n      swap3\n      pop\n        /* \"#utility.yul\":4336:4558   */\n      pop\n        /* \"#utility.yul\":4323:4324   */\n      0x01\n        /* \"#utility.yul\":4320:4321   */\n      dup2\n        /* \"#utility.yul\":4316:4325   */\n      add\n        /* \"#utility.yul\":4311:4325   */\n      swap1\n      pop\n        /* \"#utility.yul\":4276:4558   */\n      jump(tag_104)\n    tag_106:\n        /* \"#utility.yul\":4280:4294   */\n      pop\n        /* \"#utility.yul\":3983:4565   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3871:4565   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4571:4689   */\n    tag_110:\n        /* \"#utility.yul\":4658:4682   */\n      tag_112\n        /* \"#utility.yul\":4676:4681   */\n      dup2\n        /* \"#utility.yul\":4658:4682   */\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":4653:4656   */\n      dup3\n        /* \"#utility.yul\":4646:4683   */\n      mstore\n        /* \"#utility.yul\":4571:4689   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4695:4917   */\n    tag_15:\n        /* \"#utility.yul\":4788:4792   */\n      0x00\n        /* \"#utility.yul\":4826:4828   */\n      0x20\n        /* \"#utility.yul\":4815:4824   */\n      dup3\n        /* \"#utility.yul\":4811:4829   */\n      add\n        /* \"#utility.yul\":4803:4829   */\n      swap1\n      pop\n        /* \"#utility.yul\":4839:4910   */\n      tag_115\n        /* \"#utility.yul\":4907:4908   */\n      0x00\n        /* \"#utility.yul\":4896:4905   */\n      dup4\n        /* \"#utility.yul\":4892:4909   */\n      add\n        /* \"#utility.yul\":4883:4889   */\n      dup5\n        /* \"#utility.yul\":4839:4910   */\n      tag_93\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4695:4917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4923:5145   */\n    tag_11:\n        /* \"#utility.yul\":5016:5020   */\n      0x00\n        /* \"#utility.yul\":5054:5056   */\n      0x20\n        /* \"#utility.yul\":5043:5052   */\n      dup3\n        /* \"#utility.yul\":5039:5057   */\n      add\n        /* \"#utility.yul\":5031:5057   */\n      swap1\n      pop\n        /* \"#utility.yul\":5067:5138   */\n      tag_117\n        /* \"#utility.yul\":5135:5136   */\n      0x00\n        /* \"#utility.yul\":5124:5133   */\n      dup4\n        /* \"#utility.yul\":5120:5137   */\n      add\n        /* \"#utility.yul\":5111:5117   */\n      dup5\n        /* \"#utility.yul\":5067:5138   */\n      tag_110\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":4923:5145   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5151:5575   */\n    tag_26:\n        /* \"#utility.yul\":5318:5322   */\n      0x00\n        /* \"#utility.yul\":5356:5358   */\n      0x60\n        /* \"#utility.yul\":5345:5354   */\n      dup3\n        /* \"#utility.yul\":5341:5359   */\n      add\n        /* \"#utility.yul\":5333:5359   */\n      swap1\n      pop\n        /* \"#utility.yul\":5369:5440   */\n      tag_119\n        /* \"#utility.yul\":5437:5438   */\n      0x00\n        /* \"#utility.yul\":5426:5435   */\n      dup4\n        /* \"#utility.yul\":5422:5439   */\n      add\n        /* \"#utility.yul\":5413:5419   */\n      dup6\n        /* \"#utility.yul\":5369:5440   */\n      tag_110\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":5450:5568   */\n      tag_120\n        /* \"#utility.yul\":5564:5566   */\n      0x20\n        /* \"#utility.yul\":5553:5562   */\n      dup4\n        /* \"#utility.yul\":5549:5567   */\n      add\n        /* \"#utility.yul\":5540:5546   */\n      dup5\n        /* \"#utility.yul\":5450:5568   */\n      tag_96\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":5151:5575   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5581:5710   */\n    tag_38:\n        /* \"#utility.yul\":5615:5621   */\n      0x00\n        /* \"#utility.yul\":5642:5662   */\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":5632:5662   */\n      swap1\n      pop\n        /* \"#utility.yul\":5671:5704   */\n      tag_124\n        /* \"#utility.yul\":5699:5703   */\n      dup3\n        /* \"#utility.yul\":5691:5697   */\n      dup3\n        /* \"#utility.yul\":5671:5704   */\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":5581:5710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5716:5791   */\n    tag_123:\n        /* \"#utility.yul\":5749:5755   */\n      0x00\n        /* \"#utility.yul\":5782:5784   */\n      0x40\n        /* \"#utility.yul\":5776:5785   */\n      mload\n        /* \"#utility.yul\":5766:5785   */\n      swap1\n      pop\n        /* \"#utility.yul\":5716:5791   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5797:6108   */\n    tag_37:\n        /* \"#utility.yul\":5874:5878   */\n      0x00\n        /* \"#utility.yul\":5964:5982   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5956:5962   */\n      dup3\n        /* \"#utility.yul\":5953:5983   */\n      gt\n        /* \"#utility.yul\":5950:6006   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":5986:6004   */\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":5950:6006   */\n    tag_128:\n        /* \"#utility.yul\":6036:6040   */\n      0x20\n        /* \"#utility.yul\":6028:6034   */\n      dup3\n        /* \"#utility.yul\":6024:6041   */\n      mul\n        /* \"#utility.yul\":6016:6041   */\n      swap1\n      pop\n        /* \"#utility.yul\":6096:6100   */\n      0x20\n        /* \"#utility.yul\":6090:6094   */\n      dup2\n        /* \"#utility.yul\":6086:6101   */\n      add\n        /* \"#utility.yul\":6078:6101   */\n      swap1\n      pop\n        /* \"#utility.yul\":5797:6108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6114:6212   */\n    tag_103:\n        /* \"#utility.yul\":6179:6183   */\n      0x00\n        /* \"#utility.yul\":6202:6205   */\n      dup2\n        /* \"#utility.yul\":6194:6205   */\n      swap1\n      pop\n        /* \"#utility.yul\":6114:6212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6218:6322   */\n    tag_99:\n        /* \"#utility.yul\":6283:6289   */\n      0x00\n        /* \"#utility.yul\":6311:6315   */\n      0x02\n        /* \"#utility.yul\":6301:6315   */\n      swap1\n      pop\n        /* \"#utility.yul\":6218:6322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6328:6439   */\n    tag_109:\n        /* \"#utility.yul\":6396:6400   */\n      0x00\n        /* \"#utility.yul\":6428:6432   */\n      0x20\n        /* \"#utility.yul\":6423:6426   */\n      dup3\n        /* \"#utility.yul\":6419:6433   */\n      add\n        /* \"#utility.yul\":6411:6433   */\n      swap1\n      pop\n        /* \"#utility.yul\":6328:6439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6445:6588   */\n    tag_101:\n        /* \"#utility.yul\":6542:6553   */\n      0x00\n        /* \"#utility.yul\":6579:6582   */\n      dup2\n        /* \"#utility.yul\":6564:6582   */\n      swap1\n      pop\n        /* \"#utility.yul\":6445:6588   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6594:6690   */\n    tag_92:\n        /* \"#utility.yul\":6631:6638   */\n      0x00\n        /* \"#utility.yul\":6660:6684   */\n      tag_136\n        /* \"#utility.yul\":6678:6683   */\n      dup3\n        /* \"#utility.yul\":6660:6684   */\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":6649:6684   */\n      swap1\n      pop\n        /* \"#utility.yul\":6594:6690   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6696:6805   */\n    tag_138:\n        /* \"#utility.yul\":6746:6753   */\n      0x00\n        /* \"#utility.yul\":6775:6799   */\n      tag_140\n        /* \"#utility.yul\":6793:6798   */\n      dup3\n        /* \"#utility.yul\":6775:6799   */\n      tag_92\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":6764:6799   */\n      swap1\n      pop\n        /* \"#utility.yul\":6696:6805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6811:6921   */\n    tag_141:\n        /* \"#utility.yul\":6862:6869   */\n      0x00\n        /* \"#utility.yul\":6891:6915   */\n      tag_143\n        /* \"#utility.yul\":6909:6914   */\n      dup3\n        /* \"#utility.yul\":6891:6915   */\n      tag_92\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":6880:6915   */\n      swap1\n      pop\n        /* \"#utility.yul\":6811:6921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6927:7053   */\n    tag_137:\n        /* \"#utility.yul\":6964:6971   */\n      0x00\n        /* \"#utility.yul\":7004:7046   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6997:7002   */\n      dup3\n        /* \"#utility.yul\":6993:7047   */\n      and\n        /* \"#utility.yul\":6982:7047   */\n      swap1\n      pop\n        /* \"#utility.yul\":6927:7053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7059:7136   */\n    tag_113:\n        /* \"#utility.yul\":7096:7103   */\n      0x00\n        /* \"#utility.yul\":7125:7130   */\n      dup2\n        /* \"#utility.yul\":7114:7130   */\n      swap1\n      pop\n        /* \"#utility.yul\":7059:7136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7142:7423   */\n    tag_125:\n        /* \"#utility.yul\":7225:7252   */\n      tag_147\n        /* \"#utility.yul\":7247:7251   */\n      dup3\n        /* \"#utility.yul\":7225:7252   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":7217:7223   */\n      dup2\n        /* \"#utility.yul\":7213:7253   */\n      add\n        /* \"#utility.yul\":7355:7361   */\n      dup2\n        /* \"#utility.yul\":7343:7353   */\n      dup2\n        /* \"#utility.yul\":7340:7362   */\n      lt\n        /* \"#utility.yul\":7319:7337   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7307:7317   */\n      dup3\n        /* \"#utility.yul\":7304:7338   */\n      gt\n        /* \"#utility.yul\":7301:7363   */\n      or\n        /* \"#utility.yul\":7298:7386   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":7366:7384   */\n      tag_150\n      tag_130\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":7298:7386   */\n    tag_149:\n        /* \"#utility.yul\":7406:7416   */\n      dup1\n        /* \"#utility.yul\":7402:7404   */\n      0x40\n        /* \"#utility.yul\":7395:7417   */\n      mstore\n        /* \"#utility.yul\":7185:7423   */\n      pop\n        /* \"#utility.yul\":7142:7423   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7429:7609   */\n    tag_130:\n        /* \"#utility.yul\":7477:7554   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7474:7475   */\n      0x00\n        /* \"#utility.yul\":7467:7555   */\n      mstore\n        /* \"#utility.yul\":7574:7578   */\n      0x41\n        /* \"#utility.yul\":7571:7572   */\n      0x04\n        /* \"#utility.yul\":7564:7579   */\n      mstore\n        /* \"#utility.yul\":7598:7602   */\n      0x24\n        /* \"#utility.yul\":7595:7596   */\n      0x00\n        /* \"#utility.yul\":7588:7603   */\n      revert\n        /* \"#utility.yul\":7615:7732   */\n    tag_55:\n        /* \"#utility.yul\":7724:7725   */\n      0x00\n        /* \"#utility.yul\":7721:7722   */\n      dup1\n        /* \"#utility.yul\":7714:7726   */\n      revert\n        /* \"#utility.yul\":7738:7855   */\n    tag_41:\n        /* \"#utility.yul\":7847:7848   */\n      0x00\n        /* \"#utility.yul\":7844:7845   */\n      dup1\n        /* \"#utility.yul\":7837:7849   */\n      revert\n        /* \"#utility.yul\":7861:7978   */\n    tag_74:\n        /* \"#utility.yul\":7970:7971   */\n      0x00\n        /* \"#utility.yul\":7967:7968   */\n      dup1\n        /* \"#utility.yul\":7960:7972   */\n      revert\n        /* \"#utility.yul\":7984:8101   */\n    tag_71:\n        /* \"#utility.yul\":8093:8094   */\n      0x00\n        /* \"#utility.yul\":8090:8091   */\n      dup1\n        /* \"#utility.yul\":8083:8095   */\n      revert\n        /* \"#utility.yul\":8107:8209   */\n    tag_148:\n        /* \"#utility.yul\":8148:8154   */\n      0x00\n        /* \"#utility.yul\":8199:8201   */\n      0x1f\n        /* \"#utility.yul\":8195:8202   */\n      not\n        /* \"#utility.yul\":8190:8192   */\n      0x1f\n        /* \"#utility.yul\":8183:8188   */\n      dup4\n        /* \"#utility.yul\":8179:8193   */\n      add\n        /* \"#utility.yul\":8175:8203   */\n      and\n        /* \"#utility.yul\":8165:8203   */\n      swap1\n      pop\n        /* \"#utility.yul\":8107:8209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8215:8337   */\n    tag_50:\n        /* \"#utility.yul\":8288:8312   */\n      tag_158\n        /* \"#utility.yul\":8306:8311   */\n      dup2\n        /* \"#utility.yul\":8288:8312   */\n      tag_92\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":8281:8286   */\n      dup2\n        /* \"#utility.yul\":8278:8313   */\n      eq\n        /* \"#utility.yul\":8268:8331   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":8327:8328   */\n      0x00\n        /* \"#utility.yul\":8324:8325   */\n      dup1\n        /* \"#utility.yul\":8317:8329   */\n      revert\n        /* \"#utility.yul\":8268:8331   */\n    tag_159:\n        /* \"#utility.yul\":8215:8337   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8343:8491   */\n    tag_60:\n        /* \"#utility.yul\":8429:8466   */\n      tag_161\n        /* \"#utility.yul\":8460:8465   */\n      dup2\n        /* \"#utility.yul\":8429:8466   */\n      tag_138\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":8422:8427   */\n      dup2\n        /* \"#utility.yul\":8419:8467   */\n      eq\n        /* \"#utility.yul\":8409:8485   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":8481:8482   */\n      0x00\n        /* \"#utility.yul\":8478:8479   */\n      dup1\n        /* \"#utility.yul\":8471:8483   */\n      revert\n        /* \"#utility.yul\":8409:8485   */\n    tag_162:\n        /* \"#utility.yul\":8343:8491   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8497:8647   */\n    tag_64:\n        /* \"#utility.yul\":8584:8622   */\n      tag_164\n        /* \"#utility.yul\":8616:8621   */\n      dup2\n        /* \"#utility.yul\":8584:8622   */\n      tag_141\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":8577:8582   */\n      dup2\n        /* \"#utility.yul\":8574:8623   */\n      eq\n        /* \"#utility.yul\":8564:8641   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":8637:8638   */\n      0x00\n        /* \"#utility.yul\":8634:8635   */\n      dup1\n        /* \"#utility.yul\":8627:8639   */\n      revert\n        /* \"#utility.yul\":8564:8641   */\n    tag_165:\n        /* \"#utility.yul\":8497:8647   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8653:8775   */\n    tag_67:\n        /* \"#utility.yul\":8726:8750   */\n      tag_167\n        /* \"#utility.yul\":8744:8749   */\n      dup2\n        /* \"#utility.yul\":8726:8750   */\n      tag_113\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":8719:8724   */\n      dup2\n        /* \"#utility.yul\":8716:8751   */\n      eq\n        /* \"#utility.yul\":8706:8769   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":8765:8766   */\n      0x00\n        /* \"#utility.yul\":8762:8763   */\n      dup1\n        /* \"#utility.yul\":8755:8767   */\n      revert\n        /* \"#utility.yul\":8706:8769   */\n    tag_168:\n        /* \"#utility.yul\":8653:8775   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ad277dc79b03d5e704611fe322dc59972a4f596f0e28c009823ccfb21a8e5b4664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273ae13d989dac2f0debff460ac112a837c89baa7cd6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507378867bbeef44f2326bf8ddd1941a4439382ef2a7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400006002553480156100c557600080fd5b50610738806100d56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806320ae0b6d14610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b91906103c8565b6100b2565b60405161006d91906104ff565b60405180910390f35b61007e610243565b60405161008b91906104e4565b60405180910390f35b61009c610269565b6040516100a991906104e4565b60405180910390f35b6000808473ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100fb57600080fd5b505afa15801561010f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610133919061041b565b905060008473ffffffffffffffffffffffffffffffffffffffff1663bd5f68b060025460405180604001604052808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152506040518363ffffffff1660e01b81526004016101e092919061051a565b60006040518083038186803b1580156101f857600080fd5b505afa15801561020c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610235919061037f565b905081925050509392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006102a061029b84610568565b610543565b905080838252602082019050828560208602820111156102c3576102c2610686565b5b60005b858110156102f357816102d9888261036a565b8452602084019350602083019250506001810190506102c6565b5050509392505050565b60008135905061030c816106a6565b92915050565b600082601f83011261032757610326610681565b5b815161033784826020860161028d565b91505092915050565b60008135905061034f816106bd565b92915050565b600081359050610364816106d4565b92915050565b600081519050610379816106eb565b92915050565b60006020828403121561039557610394610690565b5b600082015167ffffffffffffffff8111156103b3576103b261068b565b5b6103bf84828501610312565b91505092915050565b6000806000606084860312156103e1576103e0610690565b5b60006103ef86828701610340565b935050602061040086828701610355565b9250506040610411868287016102fd565b9150509250925092565b60006020828403121561043157610430610690565b5b600061043f8482850161036a565b91505092915050565b60006104548383610460565b60208301905092915050565b610469816105c1565b82525050565b610478816105c1565b82525050565b6104878161059e565b61049181846105b6565b925061049c82610594565b8060005b838110156104cd5781516104b48782610448565b96506104bf836105a9565b9250506001810190506104a0565b505050505050565b6104de81610617565b82525050565b60006020820190506104f9600083018461046f565b92915050565b600060208201905061051460008301846104d5565b92915050565b600060608201905061052f60008301856104d5565b61053c602083018461047e565b9392505050565b600061054d61055e565b90506105598282610621565b919050565b6000604051905090565b600067ffffffffffffffff82111561058357610582610652565b5b602082029050602081019050919050565b6000819050919050565b600060029050919050565b6000602082019050919050565b600081905092915050565b60006105cc826105f7565b9050919050565b60006105de826105c1565b9050919050565b60006105f0826105c1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61062a82610695565b810181811067ffffffffffffffff8211171561064957610648610652565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6106af816105c1565b81146106ba57600080fd5b50565b6106c6816105d3565b81146106d157600080fd5b50565b6106dd816105e5565b81146106e857600080fd5b50565b6106f481610617565b81146106ff57600080fd5b5056fea2646970667358221220ad277dc79b03d5e704611fe322dc59972a4f596f0e28c009823ccfb21a8e5b4664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xAE13D989DAC2F0DEBFF460AC112A837C89BAA7CD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x78867BBEEF44F2326BF8DDD1941A4439382EF2A7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x738 DUP1 PUSH2 0xD5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20AE0B6D EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x243 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x269 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x41B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBD5F68B0 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0 SWAP3 SWAP2 SWAP1 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST SWAP1 POP DUP2 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A0 PUSH2 0x29B DUP5 PUSH2 0x568 JUMP JUMPDEST PUSH2 0x543 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x2C3 JUMPI PUSH2 0x2C2 PUSH2 0x686 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI DUP2 PUSH2 0x2D9 DUP9 DUP3 PUSH2 0x36A JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2C6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30C DUP2 PUSH2 0x6A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x327 JUMPI PUSH2 0x326 PUSH2 0x681 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x337 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x28D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34F DUP2 PUSH2 0x6BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x364 DUP2 PUSH2 0x6D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x379 DUP2 PUSH2 0x6EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x395 JUMPI PUSH2 0x394 PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x3B2 PUSH2 0x68B JUMP JUMPDEST JUMPDEST PUSH2 0x3BF DUP5 DUP3 DUP6 ADD PUSH2 0x312 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E1 JUMPI PUSH2 0x3E0 PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EF DUP7 DUP3 DUP8 ADD PUSH2 0x340 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x400 DUP7 DUP3 DUP8 ADD PUSH2 0x355 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x411 DUP7 DUP3 DUP8 ADD PUSH2 0x2FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x431 JUMPI PUSH2 0x430 PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43F DUP5 DUP3 DUP6 ADD PUSH2 0x36A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x454 DUP4 DUP4 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x469 DUP2 PUSH2 0x5C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x478 DUP2 PUSH2 0x5C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x487 DUP2 PUSH2 0x59E JUMP JUMPDEST PUSH2 0x491 DUP2 DUP5 PUSH2 0x5B6 JUMP JUMPDEST SWAP3 POP PUSH2 0x49C DUP3 PUSH2 0x594 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4CD JUMPI DUP2 MLOAD PUSH2 0x4B4 DUP8 DUP3 PUSH2 0x448 JUMP JUMPDEST SWAP7 POP PUSH2 0x4BF DUP4 PUSH2 0x5A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4A0 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x617 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x46F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x514 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x52F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0x53C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x47E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54D PUSH2 0x55E JUMP JUMPDEST SWAP1 POP PUSH2 0x559 DUP3 DUP3 PUSH2 0x621 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x583 JUMPI PUSH2 0x582 PUSH2 0x652 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CC DUP3 PUSH2 0x5F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DE DUP3 PUSH2 0x5C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F0 DUP3 PUSH2 0x5C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x62A DUP3 PUSH2 0x695 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x649 JUMPI PUSH2 0x648 PUSH2 0x652 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AF DUP2 PUSH2 0x5C1 JUMP JUMPDEST DUP2 EQ PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6C6 DUP2 PUSH2 0x5D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DD DUP2 PUSH2 0x5E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x6E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6F4 DUP2 PUSH2 0x617 JUMP JUMPDEST DUP2 EQ PUSH2 0x6FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0x27 PUSH30 0xC79B03D5E704611FE322DC59972A4F596F0E28C009823CCFB21A8E5B4664 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "8847:501:0:-:0;;;8893:42;8871:64;;;;;;;;;;;;;;;;;;;;8964:42;8942:64;;;;;;;;;;;;;;;;;;;;9030:19;9013:36;;8847:501;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BUSD_336": {
									"entryPoint": 579,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CalcLpPrice_374": {
									"entryPoint": 178,
									"id": 374,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@WBNB_333": {
									"entryPoint": 617,
									"id": 333,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$25": {
									"entryPoint": 832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_Router_$330": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$25t_contract$_Router_$330t_address": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$2_memory_ptr_to_t_array$_t_address_$2_memory_ptr_fromStack": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$2_memory_ptr__to_t_uint256_t_array$_t_address_$2_memory_ptr__fromStack_reversed": {
									"entryPoint": 1306,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$2_memory_ptr": {
									"entryPoint": 1428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$2_memory_ptr": {
									"entryPoint": 1438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$2_memory_ptr": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$2_memory_ptr_fromStack": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$25": {
									"entryPoint": 1491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Router_$330": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1618,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1670,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1675,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1680,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$25": {
									"entryPoint": 1725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Router_$330": {
									"entryPoint": 1748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8778:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "137:631:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "147:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "229:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "172:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "156:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "147:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "257:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "250:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "286:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "272:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "313:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "302:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "335:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "346:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "339:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "401:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "415:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "371:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "388:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "376:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "376:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "396:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "364:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "364:36:1"
															},
															"nodeType": "YulIf",
															"src": "361:143:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "573:189:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "588:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "592:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "630:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "667:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "679:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "635:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "635:48:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "623:61:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "623:61:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "697:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "704:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "704:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "697:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "731:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "742:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "738:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "731:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "535:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "532:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "546:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "548:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "557:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "560:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "553:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "553:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "548:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "517:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "519:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "528:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "523:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "513:249:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "107:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "123:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "131:5:1",
														"type": ""
													}
												],
												"src": "24:744:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "826:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "836:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "858:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "845:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "836:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "901:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "874:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "874:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "804:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "812:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "820:5:1",
														"type": ""
													}
												],
												"src": "774:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1024:297:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1073:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1075:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1075:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1075:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1052:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1060:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1048:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1048:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1067:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1044:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1044:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1037:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1037:35:1"
															},
															"nodeType": "YulIf",
															"src": "1034:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1165:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1185:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1179:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1179:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1169:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1201:114:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1288:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1296:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1284:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1284:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1303:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1210:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1210:105:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1201:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1002:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1010:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1018:5:1",
														"type": ""
													}
												],
												"src": "936:385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1392:100:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1402:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1424:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1411:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1402:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1480:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$25",
																	"nodeType": "YulIdentifier",
																	"src": "1440:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:46:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1370:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1378:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1386:5:1",
														"type": ""
													}
												],
												"src": "1327:165:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1564:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1574:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1596:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1583:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1574:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1653:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Router_$330",
																	"nodeType": "YulIdentifier",
																	"src": "1612:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1612:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_Router_$330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1542:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1550:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1558:5:1",
														"type": ""
													}
												],
												"src": "1498:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1734:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1744:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1759:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1753:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1753:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1744:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1802:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1775:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1775:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1775:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1712:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1720:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1728:5:1",
														"type": ""
													}
												],
												"src": "1671:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1922:452:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1970:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1970:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1939:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:32:1"
															},
															"nodeType": "YulIf",
															"src": "1932:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2061:306:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2076:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2100:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2111:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2096:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2096:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2090:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2090:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2161:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2163:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2163:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2163:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2133:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2141:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2130:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2130:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2127:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2258:99:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2329:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2340:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2325:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2325:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2349:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2268:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2268:89:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2258:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1915:6:1",
														"type": ""
													}
												],
												"src": "1820:554:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2507:546:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2553:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2555:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2555:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2555:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2528:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2537:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2524:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2524:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2549:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2520:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2520:32:1"
															},
															"nodeType": "YulIf",
															"src": "2517:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2646:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2661:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2675:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2665:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2690:76:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2738:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2749:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2734:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2734:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2758:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$25",
																			"nodeType": "YulIdentifier",
																			"src": "2700:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2700:66:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2690:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2786:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2801:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2815:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2805:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2831:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2880:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2891:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2876:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2876:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2900:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Router_$330",
																			"nodeType": "YulIdentifier",
																			"src": "2841:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2841:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2831:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2928:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2943:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2957:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2947:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2973:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3008:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3019:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3004:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3004:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3028:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2983:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2983:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2973:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$25t_contract$_Router_$330t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2461:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2472:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2484:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2492:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2500:6:1",
														"type": ""
													}
												],
												"src": "2380:673:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3136:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3182:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3184:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3184:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3184:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3157:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3166:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3153:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3153:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3178:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3149:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:32:1"
															},
															"nodeType": "YulIf",
															"src": "3146:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3275:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3290:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3304:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3294:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3319:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3365:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3376:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3361:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3361:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3385:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3329:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3329:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3319:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3106:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3117:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3129:6:1",
														"type": ""
													}
												],
												"src": "3059:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3496:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3540:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3548:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3506:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3506:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3561:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3579:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3584:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3575:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "3561:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3469:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3477:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3485:10:1",
														"type": ""
													}
												],
												"src": "3416:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3656:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3673:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3696:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3678:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3678:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3666:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3666:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3644:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3651:3:1",
														"type": ""
													}
												],
												"src": "3601:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3780:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3797:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3820:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3802:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3802:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3790:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3790:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3768:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3775:3:1",
														"type": ""
													}
												],
												"src": "3715:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3983:582:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3993:66:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4053:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$2_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4007:45:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4007:52:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3997:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4068:91:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4147:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4152:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$2_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4075:71:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4075:84:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4068:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4168:69:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4231:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$2_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4183:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4183:54:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4172:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4246:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4260:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4250:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4336:222:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4350:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4377:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4371:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4371:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "4354:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4397:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4448:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4463:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "4404:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4404:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4397:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4480:68:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4541:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$2_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4490:50:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4490:58:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4480:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4298:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4301:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4295:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4295:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4309:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4311:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4320:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4323:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4316:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4316:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4311:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4280:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4282:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4291:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4286:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4276:282:1"
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$2_memory_ptr_to_t_array$_t_address_$2_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3970:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3977:3:1",
														"type": ""
													}
												],
												"src": "3871:694:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4636:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4653:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4676:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4658:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4658:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4646:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4646:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4624:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4631:3:1",
														"type": ""
													}
												],
												"src": "4571:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4793:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4803:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4815:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4826:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4811:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4811:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4803:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4883:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4896:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4907:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4892:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4892:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4839:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4839:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4839:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4765:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4777:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4788:4:1",
														"type": ""
													}
												],
												"src": "4695:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5021:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5031:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5043:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5054:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5039:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5039:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5031:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5111:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5124:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5135:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5120:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5120:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5067:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5067:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5067:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4993:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5005:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5016:4:1",
														"type": ""
													}
												],
												"src": "4923:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5323:252:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5333:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5345:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5356:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5341:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5341:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5333:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5413:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5426:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5437:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5422:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5422:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5369:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5369:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5553:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5564:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5549:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5549:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$2_memory_ptr_to_t_array$_t_address_$2_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5450:89:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5450:118:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5450:118:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$2_memory_ptr__to_t_uint256_t_array$_t_address_$2_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5287:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5299:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5307:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5318:4:1",
														"type": ""
													}
												],
												"src": "5151:424:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5622:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5632:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5642:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5642:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5632:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5691:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5699:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5671:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5671:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5671:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5606:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5615:6:1",
														"type": ""
													}
												],
												"src": "5581:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5756:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5766:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5782:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5776:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5776:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5766:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5749:6:1",
														"type": ""
													}
												],
												"src": "5716:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5879:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5984:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5986:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5986:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5986:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5956:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5964:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5953:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5953:30:1"
															},
															"nodeType": "YulIf",
															"src": "5950:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6016:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6028:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6036:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6024:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6024:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6016:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6078:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6090:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6096:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6086:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6086:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6078:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5863:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5874:4:1",
														"type": ""
													}
												],
												"src": "5797:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6184:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6194:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "6202:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6194:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$2_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6171:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6179:4:1",
														"type": ""
													}
												],
												"src": "6114:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6290:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6301:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6311:4:1",
																"type": "",
																"value": "0x02"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6301:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$2_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6273:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6283:6:1",
														"type": ""
													}
												],
												"src": "6218:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6401:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6411:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6423:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6428:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6419:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6419:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "6411:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$2_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6388:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "6396:4:1",
														"type": ""
													}
												],
												"src": "6328:111:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6554:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6564:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6579:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6564:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$2_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6526:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6531:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6542:11:1",
														"type": ""
													}
												],
												"src": "6445:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6639:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6649:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6678:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6660:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6660:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6649:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6621:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6631:7:1",
														"type": ""
													}
												],
												"src": "6594:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6754:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6764:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6793:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6775:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6764:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6736:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6746:7:1",
														"type": ""
													}
												],
												"src": "6696:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6870:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6880:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6909:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6891:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6891:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6880:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Router_$330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6852:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6862:7:1",
														"type": ""
													}
												],
												"src": "6811:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6972:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6982:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6997:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7004:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6993:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6993:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6982:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6954:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6964:7:1",
														"type": ""
													}
												],
												"src": "6927:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7104:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7114:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7125:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7114:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7086:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7096:7:1",
														"type": ""
													}
												],
												"src": "7059:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7185:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7195:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7217:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7247:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7225:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7225:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7213:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7213:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7199:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7364:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7366:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7366:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7366:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7307:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7319:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7304:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7304:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7343:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7355:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7340:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7340:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7301:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7301:62:1"
															},
															"nodeType": "YulIf",
															"src": "7298:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7402:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7406:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7395:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7395:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7395:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7171:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7179:4:1",
														"type": ""
													}
												],
												"src": "7142:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7457:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7474:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7477:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7467:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7467:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7467:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7571:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7574:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7564:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7564:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7564:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7595:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7598:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7588:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7588:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7429:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7704:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7721:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7724:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7714:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7714:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7714:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "7615:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7827:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7844:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7847:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7837:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7837:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7837:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "7738:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7950:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7967:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7970:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7960:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7960:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7960:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "7861:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8073:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8093:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8083:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8083:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8083:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "7984:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8155:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8165:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8183:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8190:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8179:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8179:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8199:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8195:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8195:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8175:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8175:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "8165:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8138:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "8148:6:1",
														"type": ""
													}
												],
												"src": "8107:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8258:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8315:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8324:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8327:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8317:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8317:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8317:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8281:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8306:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "8288:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8288:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8278:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8278:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8271:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8271:43:1"
															},
															"nodeType": "YulIf",
															"src": "8268:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8251:5:1",
														"type": ""
													}
												],
												"src": "8215:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8399:92:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8469:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8478:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8481:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8471:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8471:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8471:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8422:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8460:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$25",
																					"nodeType": "YulIdentifier",
																					"src": "8429:30:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8429:37:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8419:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8419:48:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8412:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8412:56:1"
															},
															"nodeType": "YulIf",
															"src": "8409:76:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8392:5:1",
														"type": ""
													}
												],
												"src": "8343:148:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8554:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8625:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8634:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8637:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8627:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8627:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8627:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8577:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8616:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Router_$330",
																					"nodeType": "YulIdentifier",
																					"src": "8584:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8584:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8574:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8574:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8567:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8567:57:1"
															},
															"nodeType": "YulIf",
															"src": "8564:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_Router_$330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8547:5:1",
														"type": ""
													}
												],
												"src": "8497:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8696:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8753:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8762:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8765:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8755:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8755:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8755:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8719:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8744:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8726:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8726:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8716:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8716:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8709:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8709:43:1"
															},
															"nodeType": "YulIf",
															"src": "8706:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8689:5:1",
														"type": ""
													}
												],
												"src": "8653:122:1"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_IERC20_$25(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$25(value)\n    }\n\n    function abi_decode_t_contract$_Router_$330(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Router_$330(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$25t_contract$_Router_$330t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$25(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_Router_$330(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[2] -> address[2]\n    function abi_encode_t_array$_t_address_$2_memory_ptr_to_t_array$_t_address_$2_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_address_$2_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$2_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$2_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$2_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$2_memory_ptr__to_t_uint256_t_array$_t_address_$2_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_array$_t_address_$2_memory_ptr_to_t_array$_t_address_$2_memory_ptr_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$2_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function array_length_t_array$_t_address_$2_memory_ptr(value) -> length {\n\n        length := 0x02\n\n    }\n\n    function array_nextElement_t_array$_t_address_$2_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$2_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$25(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_Router_$330(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$25(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$25(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Router_$330(value) {\n        if iszero(eq(value, cleanup_t_contract$_Router_$330(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806320ae0b6d14610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b91906103c8565b6100b2565b60405161006d91906104ff565b60405180910390f35b61007e610243565b60405161008b91906104e4565b60405180910390f35b61009c610269565b6040516100a991906104e4565b60405180910390f35b6000808473ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100fb57600080fd5b505afa15801561010f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610133919061041b565b905060008473ffffffffffffffffffffffffffffffffffffffff1663bd5f68b060025460405180604001604052808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152506040518363ffffffff1660e01b81526004016101e092919061051a565b60006040518083038186803b1580156101f857600080fd5b505afa15801561020c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610235919061037f565b905081925050509392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006102a061029b84610568565b610543565b905080838252602082019050828560208602820111156102c3576102c2610686565b5b60005b858110156102f357816102d9888261036a565b8452602084019350602083019250506001810190506102c6565b5050509392505050565b60008135905061030c816106a6565b92915050565b600082601f83011261032757610326610681565b5b815161033784826020860161028d565b91505092915050565b60008135905061034f816106bd565b92915050565b600081359050610364816106d4565b92915050565b600081519050610379816106eb565b92915050565b60006020828403121561039557610394610690565b5b600082015167ffffffffffffffff8111156103b3576103b261068b565b5b6103bf84828501610312565b91505092915050565b6000806000606084860312156103e1576103e0610690565b5b60006103ef86828701610340565b935050602061040086828701610355565b9250506040610411868287016102fd565b9150509250925092565b60006020828403121561043157610430610690565b5b600061043f8482850161036a565b91505092915050565b60006104548383610460565b60208301905092915050565b610469816105c1565b82525050565b610478816105c1565b82525050565b6104878161059e565b61049181846105b6565b925061049c82610594565b8060005b838110156104cd5781516104b48782610448565b96506104bf836105a9565b9250506001810190506104a0565b505050505050565b6104de81610617565b82525050565b60006020820190506104f9600083018461046f565b92915050565b600060208201905061051460008301846104d5565b92915050565b600060608201905061052f60008301856104d5565b61053c602083018461047e565b9392505050565b600061054d61055e565b90506105598282610621565b919050565b6000604051905090565b600067ffffffffffffffff82111561058357610582610652565b5b602082029050602081019050919050565b6000819050919050565b600060029050919050565b6000602082019050919050565b600081905092915050565b60006105cc826105f7565b9050919050565b60006105de826105c1565b9050919050565b60006105f0826105c1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61062a82610695565b810181811067ffffffffffffffff8211171561064957610648610652565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6106af816105c1565b81146106ba57600080fd5b50565b6106c6816105d3565b81146106d157600080fd5b50565b6106dd816105e5565b81146106e857600080fd5b50565b6106f481610617565b81146106ff57600080fd5b5056fea2646970667358221220ad277dc79b03d5e704611fe322dc59972a4f596f0e28c009823ccfb21a8e5b4664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20AE0B6D EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x243 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x269 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x41B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBD5F68B0 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0 SWAP3 SWAP2 SWAP1 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST SWAP1 POP DUP2 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A0 PUSH2 0x29B DUP5 PUSH2 0x568 JUMP JUMPDEST PUSH2 0x543 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x2C3 JUMPI PUSH2 0x2C2 PUSH2 0x686 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI DUP2 PUSH2 0x2D9 DUP9 DUP3 PUSH2 0x36A JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2C6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30C DUP2 PUSH2 0x6A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x327 JUMPI PUSH2 0x326 PUSH2 0x681 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x337 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x28D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34F DUP2 PUSH2 0x6BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x364 DUP2 PUSH2 0x6D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x379 DUP2 PUSH2 0x6EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x395 JUMPI PUSH2 0x394 PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x3B2 PUSH2 0x68B JUMP JUMPDEST JUMPDEST PUSH2 0x3BF DUP5 DUP3 DUP6 ADD PUSH2 0x312 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E1 JUMPI PUSH2 0x3E0 PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EF DUP7 DUP3 DUP8 ADD PUSH2 0x340 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x400 DUP7 DUP3 DUP8 ADD PUSH2 0x355 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x411 DUP7 DUP3 DUP8 ADD PUSH2 0x2FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x431 JUMPI PUSH2 0x430 PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43F DUP5 DUP3 DUP6 ADD PUSH2 0x36A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x454 DUP4 DUP4 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x469 DUP2 PUSH2 0x5C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x478 DUP2 PUSH2 0x5C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x487 DUP2 PUSH2 0x59E JUMP JUMPDEST PUSH2 0x491 DUP2 DUP5 PUSH2 0x5B6 JUMP JUMPDEST SWAP3 POP PUSH2 0x49C DUP3 PUSH2 0x594 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4CD JUMPI DUP2 MLOAD PUSH2 0x4B4 DUP8 DUP3 PUSH2 0x448 JUMP JUMPDEST SWAP7 POP PUSH2 0x4BF DUP4 PUSH2 0x5A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4A0 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x617 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x46F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x514 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x52F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0x53C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x47E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54D PUSH2 0x55E JUMP JUMPDEST SWAP1 POP PUSH2 0x559 DUP3 DUP3 PUSH2 0x621 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x583 JUMPI PUSH2 0x582 PUSH2 0x652 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CC DUP3 PUSH2 0x5F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DE DUP3 PUSH2 0x5C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F0 DUP3 PUSH2 0x5C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x62A DUP3 PUSH2 0x695 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x649 JUMPI PUSH2 0x648 PUSH2 0x652 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AF DUP2 PUSH2 0x5C1 JUMP JUMPDEST DUP2 EQ PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6C6 DUP2 PUSH2 0x5D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DD DUP2 PUSH2 0x5E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x6E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6F4 DUP2 PUSH2 0x617 JUMP JUMPDEST DUP2 EQ PUSH2 0x6FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0x27 PUSH30 0xC79B03D5E704611FE322DC59972A4F596F0E28C009823CCFB21A8E5B4664 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "8847:501:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9058:287;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8942:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8871;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9058:287;9155:7;9174:19;9196:9;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9174:45;;9232:23;9258:13;:27;;;9286:6;;9258:48;;;;;;;;9294:4;9258:48;;;;;;;;9300:4;9258:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9232:74;;9326:11;9319:18;;;;9058:287;;;;;:::o;8942:64::-;;;;;;;;;;;;;:::o;8871:::-;;;;;;;;;;;;:::o;24:744:1:-;131:5;156:81;172:64;229:6;172:64;:::i;:::-;156:81;:::i;:::-;147:90;;257:5;286:6;279:5;272:21;320:4;313:5;309:16;302:23;;346:6;396:3;388:4;380:6;376:17;371:3;367:27;364:36;361:143;;;415:79;;:::i;:::-;361:143;528:1;513:249;538:6;535:1;532:13;513:249;;;606:3;635:48;679:3;667:10;635:48;:::i;:::-;630:3;623:61;713:4;708:3;704:14;697:21;;747:4;742:3;738:14;731:21;;573:189;560:1;557;553:9;548:14;;513:249;;;517:14;137:631;;24:744;;;;;:::o;774:139::-;820:5;858:6;845:20;836:29;;874:33;901:5;874:33;:::i;:::-;774:139;;;;:::o;936:385::-;1018:5;1067:3;1060:4;1052:6;1048:17;1044:27;1034:122;;1075:79;;:::i;:::-;1034:122;1185:6;1179:13;1210:105;1311:3;1303:6;1296:4;1288:6;1284:17;1210:105;:::i;:::-;1201:114;;1024:297;936:385;;;;:::o;1327:165::-;1386:5;1424:6;1411:20;1402:29;;1440:46;1480:5;1440:46;:::i;:::-;1327:165;;;;:::o;1498:167::-;1558:5;1596:6;1583:20;1574:29;;1612:47;1653:5;1612:47;:::i;:::-;1498:167;;;;:::o;1671:143::-;1728:5;1759:6;1753:13;1744:22;;1775:33;1802:5;1775:33;:::i;:::-;1671:143;;;;:::o;1820:554::-;1915:6;1964:2;1952:9;1943:7;1939:23;1935:32;1932:119;;;1970:79;;:::i;:::-;1932:119;2111:1;2100:9;2096:17;2090:24;2141:18;2133:6;2130:30;2127:117;;;2163:79;;:::i;:::-;2127:117;2268:89;2349:7;2340:6;2329:9;2325:22;2268:89;:::i;:::-;2258:99;;2061:306;1820:554;;;;:::o;2380:673::-;2484:6;2492;2500;2549:2;2537:9;2528:7;2524:23;2520:32;2517:119;;;2555:79;;:::i;:::-;2517:119;2675:1;2700:66;2758:7;2749:6;2738:9;2734:22;2700:66;:::i;:::-;2690:76;;2646:130;2815:2;2841:67;2900:7;2891:6;2880:9;2876:22;2841:67;:::i;:::-;2831:77;;2786:132;2957:2;2983:53;3028:7;3019:6;3008:9;3004:22;2983:53;:::i;:::-;2973:63;;2928:118;2380:673;;;;;:::o;3059:351::-;3129:6;3178:2;3166:9;3157:7;3153:23;3149:32;3146:119;;;3184:79;;:::i;:::-;3146:119;3304:1;3329:64;3385:7;3376:6;3365:9;3361:22;3329:64;:::i;:::-;3319:74;;3275:128;3059:351;;;;:::o;3416:179::-;3485:10;3506:46;3548:3;3540:6;3506:46;:::i;:::-;3584:4;3579:3;3575:14;3561:28;;3416:179;;;;:::o;3601:108::-;3678:24;3696:5;3678:24;:::i;:::-;3673:3;3666:37;3601:108;;:::o;3715:118::-;3802:24;3820:5;3802:24;:::i;:::-;3797:3;3790:37;3715:118;;:::o;3871:694::-;4007:52;4053:5;4007:52;:::i;:::-;4075:84;4152:6;4147:3;4075:84;:::i;:::-;4068:91;;4183:54;4231:5;4183:54;:::i;:::-;4260:7;4291:1;4276:282;4301:6;4298:1;4295:13;4276:282;;;4377:6;4371:13;4404:63;4463:3;4448:13;4404:63;:::i;:::-;4397:70;;4490:58;4541:6;4490:58;:::i;:::-;4480:68;;4336:222;4323:1;4320;4316:9;4311:14;;4276:282;;;4280:14;3983:582;;;3871:694;;:::o;4571:118::-;4658:24;4676:5;4658:24;:::i;:::-;4653:3;4646:37;4571:118;;:::o;4695:222::-;4788:4;4826:2;4815:9;4811:18;4803:26;;4839:71;4907:1;4896:9;4892:17;4883:6;4839:71;:::i;:::-;4695:222;;;;:::o;4923:::-;5016:4;5054:2;5043:9;5039:18;5031:26;;5067:71;5135:1;5124:9;5120:17;5111:6;5067:71;:::i;:::-;4923:222;;;;:::o;5151:424::-;5318:4;5356:2;5345:9;5341:18;5333:26;;5369:71;5437:1;5426:9;5422:17;5413:6;5369:71;:::i;:::-;5450:118;5564:2;5553:9;5549:18;5540:6;5450:118;:::i;:::-;5151:424;;;;;:::o;5581:129::-;5615:6;5642:20;;:::i;:::-;5632:30;;5671:33;5699:4;5691:6;5671:33;:::i;:::-;5581:129;;;:::o;5716:75::-;5749:6;5782:2;5776:9;5766:19;;5716:75;:::o;5797:311::-;5874:4;5964:18;5956:6;5953:30;5950:56;;;5986:18;;:::i;:::-;5950:56;6036:4;6028:6;6024:17;6016:25;;6096:4;6090;6086:15;6078:23;;5797:311;;;:::o;6114:98::-;6179:4;6202:3;6194:11;;6114:98;;;:::o;6218:104::-;6283:6;6311:4;6301:14;;6218:104;;;:::o;6328:111::-;6396:4;6428;6423:3;6419:14;6411:22;;6328:111;;;:::o;6445:143::-;6542:11;6579:3;6564:18;;6445:143;;;;:::o;6594:96::-;6631:7;6660:24;6678:5;6660:24;:::i;:::-;6649:35;;6594:96;;;:::o;6696:109::-;6746:7;6775:24;6793:5;6775:24;:::i;:::-;6764:35;;6696:109;;;:::o;6811:110::-;6862:7;6891:24;6909:5;6891:24;:::i;:::-;6880:35;;6811:110;;;:::o;6927:126::-;6964:7;7004:42;6997:5;6993:54;6982:65;;6927:126;;;:::o;7059:77::-;7096:7;7125:5;7114:16;;7059:77;;;:::o;7142:281::-;7225:27;7247:4;7225:27;:::i;:::-;7217:6;7213:40;7355:6;7343:10;7340:22;7319:18;7307:10;7304:34;7301:62;7298:88;;;7366:18;;:::i;:::-;7298:88;7406:10;7402:2;7395:22;7185:238;7142:281;;:::o;7429:180::-;7477:77;7474:1;7467:88;7574:4;7571:1;7564:15;7598:4;7595:1;7588:15;7615:117;7724:1;7721;7714:12;7738:117;7847:1;7844;7837:12;7861:117;7970:1;7967;7960:12;7984:117;8093:1;8090;8083:12;8107:102;8148:6;8199:2;8195:7;8190:2;8183:5;8179:14;8175:28;8165:38;;8107:102;;;:::o;8215:122::-;8288:24;8306:5;8288:24;:::i;:::-;8281:5;8278:35;8268:63;;8327:1;8324;8317:12;8268:63;8215:122;:::o;8343:148::-;8429:37;8460:5;8429:37;:::i;:::-;8422:5;8419:48;8409:76;;8481:1;8478;8471:12;8409:76;8343:148;:::o;8497:150::-;8584:38;8616:5;8584:38;:::i;:::-;8577:5;8574:49;8564:77;;8637:1;8634;8627:12;8564:77;8497:150;:::o;8653:122::-;8726:24;8744:5;8726:24;:::i;:::-;8719:5;8716:35;8706:63;;8765:1;8762;8755:12;8706:63;8653:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "369600",
								"executionCost": "71045",
								"totalCost": "440645"
							},
							"external": {
								"BUSD()": "2514",
								"CalcLpPrice(address,address,address)": "infinite",
								"WBNB()": "2533"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8847,
									"end": 9348,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8893,
									"end": 8935,
									"name": "PUSH",
									"source": 0,
									"value": "AE13D989DAC2F0DEBFF460AC112A837C89BAA7CD"
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8964,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "78867BBEEF44F2326BF8DDD1941A4439382EF2A7"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9030,
									"end": 9049,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 9013,
									"end": 9049,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 9013,
									"end": 9049,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8847,
									"end": 9348,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ad277dc79b03d5e704611fe322dc59972a4f596f0e28c009823ccfb21a8e5b4664736f6c63430008070033",
									".code": [
										{
											"begin": 8847,
											"end": 9348,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "PUSH",
											"source": 0,
											"value": "20AE0B6D"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "PUSH",
											"source": 0,
											"value": "484F4EA9"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "PUSH",
											"source": 0,
											"value": "8DD95002"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9155,
											"end": 9162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9205,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9196,
											"end": 9217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9217,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9196,
											"end": 9219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9271,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9285,
											"name": "PUSH",
											"source": 0,
											"value": "BD5F68B0"
										},
										{
											"begin": 9286,
											"end": 9292,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9286,
											"end": 9292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9294,
											"end": 9298,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9304,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9258,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9326,
											"end": 9337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9345,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 229,
											"end": 235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 272,
											"end": 293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 320,
											"end": 324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 309,
											"end": 325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 376,
											"end": 393,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 367,
											"end": 394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 400,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 535,
											"end": 536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 545,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 679,
											"end": 682,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 623,
											"end": 684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 713,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 704,
											"end": 718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 738,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 553,
											"end": 562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 774,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 820,
											"end": 825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 865,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 901,
											"end": 906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 874,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1064,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1065,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1071,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1034,
											"end": 1156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1156,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1034,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1300,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1210,
											"end": 1315,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1210,
											"end": 1315,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1210,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1327,
											"end": 1492,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1327,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1480,
											"end": 1485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1440,
											"end": 1486,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1486,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1440,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1492,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1492,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1492,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1498,
											"end": 1665,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1498,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1603,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1653,
											"end": 1658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1612,
											"end": 1659,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1659,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1612,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1665,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1665,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1671,
											"end": 1814,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1671,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1802,
											"end": 1807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1775,
											"end": 1808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1775,
											"end": 1808,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1775,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1814,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1814,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1820,
											"end": 2374,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1820,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1952,
											"end": 1961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1950,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 1967,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1932,
											"end": 2051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1932,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1932,
											"end": 2051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1970,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1970,
											"end": 2049,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1970,
											"end": 2049,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1970,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1932,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1932,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2114,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2244,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2127,
											"end": 2244,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2163,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2163,
											"end": 2242,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2163,
											"end": 2242,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2163,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2244,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2127,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2349,
											"end": 2356,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2338,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2268,
											"end": 2357,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2268,
											"end": 2357,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2268,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 2374,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 2374,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 2374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 2374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 2374,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2380,
											"end": 3053,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2380,
											"end": 3053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2537,
											"end": 2546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2535,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2547,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2552,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2636,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2517,
											"end": 2636,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2555,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2555,
											"end": 2634,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 2634,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2555,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2636,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2517,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2675,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2758,
											"end": 2765,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2755,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2747,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2734,
											"end": 2756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2700,
											"end": 2766,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2700,
											"end": 2766,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2700,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2817,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2900,
											"end": 2907,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2841,
											"end": 2908,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2841,
											"end": 2908,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2841,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2908,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3028,
											"end": 3035,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3017,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2983,
											"end": 3036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2983,
											"end": 3036,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2983,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2973,
											"end": 3036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2973,
											"end": 3036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 3046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 3053,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 3053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 3053,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 3053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 3053,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 3053,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3059,
											"end": 3410,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3059,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3129,
											"end": 3135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3164,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 3176,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3181,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3265,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3146,
											"end": 3265,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3184,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3184,
											"end": 3263,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3184,
											"end": 3263,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3184,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3265,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3146,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3385,
											"end": 3392,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3374,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3329,
											"end": 3393,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3329,
											"end": 3393,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3329,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3393,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3275,
											"end": 3403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3410,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3410,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3416,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3416,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3548,
											"end": 3551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3546,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3506,
											"end": 3552,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3506,
											"end": 3552,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3506,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3575,
											"end": 3589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3595,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3595,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3601,
											"end": 3709,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3601,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3696,
											"end": 3701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3673,
											"end": 3676,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3666,
											"end": 3703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3709,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3715,
											"end": 3833,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3715,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3820,
											"end": 3825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3827,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3833,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3871,
											"end": 4565,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3871,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4053,
											"end": 4058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4007,
											"end": 4059,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4007,
											"end": 4059,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4007,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4152,
											"end": 4158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4150,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4075,
											"end": 4159,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4075,
											"end": 4159,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4075,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4159,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4231,
											"end": 4236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4183,
											"end": 4237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4183,
											"end": 4237,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4183,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4260,
											"end": 4267,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4291,
											"end": 4292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4558,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4276,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4307,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4298,
											"end": 4299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4295,
											"end": 4308,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4558,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4276,
											"end": 4558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4371,
											"end": 4384,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4463,
											"end": 4466,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4461,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4467,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4490,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4490,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4490,
											"end": 4548,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4490,
											"end": 4548,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4490,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4480,
											"end": 4548,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4480,
											"end": 4548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4324,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4320,
											"end": 4321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4276,
											"end": 4558,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4558,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4276,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4280,
											"end": 4294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3983,
											"end": 4565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3983,
											"end": 4565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3983,
											"end": 4565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 4565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 4565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 4565,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4571,
											"end": 4689,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4571,
											"end": 4689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4658,
											"end": 4682,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4658,
											"end": 4682,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4658,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4683,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4689,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4695,
											"end": 4917,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4695,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4828,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4815,
											"end": 4824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4907,
											"end": 4908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 4905,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4892,
											"end": 4909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4883,
											"end": 4889,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4839,
											"end": 4910,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4839,
											"end": 4910,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4839,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4695,
											"end": 4917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4695,
											"end": 4917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4695,
											"end": 4917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4695,
											"end": 4917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4695,
											"end": 4917,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4923,
											"end": 5145,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4923,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5016,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5056,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5120,
											"end": 5137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5067,
											"end": 5138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5067,
											"end": 5138,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5067,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 5145,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 5145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 5145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 5145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 5145,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5151,
											"end": 5575,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5151,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5356,
											"end": 5358,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5345,
											"end": 5354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5437,
											"end": 5438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5426,
											"end": 5435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5422,
											"end": 5439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5419,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5369,
											"end": 5440,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5369,
											"end": 5440,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5369,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5564,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5553,
											"end": 5562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5549,
											"end": 5567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5450,
											"end": 5568,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5450,
											"end": 5568,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5450,
											"end": 5568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5575,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5575,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5575,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5581,
											"end": 5710,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5581,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5699,
											"end": 5703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5691,
											"end": 5697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5671,
											"end": 5704,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5671,
											"end": 5704,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5671,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5710,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5716,
											"end": 5791,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5716,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5749,
											"end": 5755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5782,
											"end": 5784,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5776,
											"end": 5785,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5766,
											"end": 5785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5766,
											"end": 5785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5791,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5797,
											"end": 6108,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5797,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5874,
											"end": 5878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5964,
											"end": 5982,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5956,
											"end": 5962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5983,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5950,
											"end": 6006,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5950,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5950,
											"end": 6006,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5986,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5986,
											"end": 6004,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5986,
											"end": 6004,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5986,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5950,
											"end": 6006,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5950,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6036,
											"end": 6040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6028,
											"end": 6034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6041,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6096,
											"end": 6100,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6090,
											"end": 6094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6086,
											"end": 6101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 6108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 6108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 6108,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 6108,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6114,
											"end": 6212,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 6114,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6202,
											"end": 6205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6194,
											"end": 6205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6194,
											"end": 6205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6212,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6212,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6218,
											"end": 6322,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6218,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6283,
											"end": 6289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6315,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6301,
											"end": 6315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6322,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6328,
											"end": 6439,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6328,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6396,
											"end": 6400,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6439,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6445,
											"end": 6588,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6445,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6588,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6588,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6594,
											"end": 6690,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 6594,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6678,
											"end": 6683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6660,
											"end": 6684,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6660,
											"end": 6684,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6660,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 6690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 6690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 6690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 6690,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6696,
											"end": 6805,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6696,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6746,
											"end": 6753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6775,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6793,
											"end": 6798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 6775,
											"end": 6799,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6775,
											"end": 6799,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6775,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6764,
											"end": 6799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6764,
											"end": 6799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6805,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6811,
											"end": 6921,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6811,
											"end": 6921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6891,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6909,
											"end": 6914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6891,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 6891,
											"end": 6915,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6891,
											"end": 6915,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6891,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6921,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6921,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6927,
											"end": 7053,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6927,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6964,
											"end": 6971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7004,
											"end": 7046,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6997,
											"end": 7002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6993,
											"end": 7047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6982,
											"end": 7047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6982,
											"end": 7047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 7053,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7059,
											"end": 7136,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7059,
											"end": 7136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7096,
											"end": 7103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7125,
											"end": 7130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7114,
											"end": 7130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7114,
											"end": 7130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7059,
											"end": 7136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7059,
											"end": 7136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7059,
											"end": 7136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7059,
											"end": 7136,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7142,
											"end": 7423,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7142,
											"end": 7423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7247,
											"end": 7251,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7225,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 7225,
											"end": 7252,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7225,
											"end": 7252,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7225,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7217,
											"end": 7223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7343,
											"end": 7353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7340,
											"end": 7362,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7319,
											"end": 7337,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7307,
											"end": 7317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7304,
											"end": 7338,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7363,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7386,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7298,
											"end": 7386,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7366,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 7366,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7366,
											"end": 7384,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7366,
											"end": 7384,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 7366,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7386,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7298,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7416,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7395,
											"end": 7417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7423,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7429,
											"end": 7609,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7429,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7554,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7474,
											"end": 7475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7467,
											"end": 7555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7574,
											"end": 7578,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7571,
											"end": 7572,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7564,
											"end": 7579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7598,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7595,
											"end": 7596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7603,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7732,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 7615,
											"end": 7732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7721,
											"end": 7722,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7714,
											"end": 7726,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7738,
											"end": 7855,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7738,
											"end": 7855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7847,
											"end": 7848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7844,
											"end": 7845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7837,
											"end": 7849,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7861,
											"end": 7978,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7861,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7970,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7967,
											"end": 7968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7972,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8101,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 7984,
											"end": 8101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8093,
											"end": 8094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8090,
											"end": 8091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8083,
											"end": 8095,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8107,
											"end": 8209,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 8107,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8199,
											"end": 8201,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8195,
											"end": 8202,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 8190,
											"end": 8192,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8183,
											"end": 8188,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8179,
											"end": 8193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8203,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8165,
											"end": 8203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8165,
											"end": 8203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8107,
											"end": 8209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8107,
											"end": 8209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8107,
											"end": 8209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8107,
											"end": 8209,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8215,
											"end": 8337,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 8215,
											"end": 8337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8288,
											"end": 8312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 8306,
											"end": 8311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8288,
											"end": 8312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 8288,
											"end": 8312,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8288,
											"end": 8312,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 8288,
											"end": 8312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8278,
											"end": 8313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8268,
											"end": 8331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8327,
											"end": 8328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8329,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8331,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8268,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8337,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8343,
											"end": 8491,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8343,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8429,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 8460,
											"end": 8465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8429,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8429,
											"end": 8466,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8429,
											"end": 8466,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 8429,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8422,
											"end": 8427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8467,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8409,
											"end": 8485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 8409,
											"end": 8485,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8481,
											"end": 8482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8471,
											"end": 8483,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8409,
											"end": 8485,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 8409,
											"end": 8485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8491,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8497,
											"end": 8647,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8497,
											"end": 8647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 8616,
											"end": 8621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 8584,
											"end": 8622,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8584,
											"end": 8622,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 8584,
											"end": 8622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8577,
											"end": 8582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8574,
											"end": 8623,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8564,
											"end": 8641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 8564,
											"end": 8641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8637,
											"end": 8638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8634,
											"end": 8635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8639,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8564,
											"end": 8641,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 8564,
											"end": 8641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8497,
											"end": 8647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8497,
											"end": 8647,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8653,
											"end": 8775,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 8653,
											"end": 8775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 8744,
											"end": 8749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 8726,
											"end": 8750,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8726,
											"end": 8750,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 8726,
											"end": 8750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8719,
											"end": 8724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8716,
											"end": 8751,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8706,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 8706,
											"end": 8769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8765,
											"end": 8766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8762,
											"end": 8763,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8767,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8706,
											"end": 8769,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 8706,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8653,
											"end": 8775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8653,
											"end": 8775,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BUSD()": "484f4ea9",
							"CalcLpPrice(address,address,address)": "20ae0b6d",
							"WBNB()": "8dd95002"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"},{\"internalType\":\"contract Router\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"busd\",\"type\":\"address\"}],\"name\":\"CalcLpPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LpUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xa6ece2fb13d058639a7ba75f1adde256ec5c3120cc77c1342ea8c00a363fc00c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc4583542d0d52e3c2c74253a05d1ba859a5a6f9a9fb293ca020c81cf0af5c56\",\"dweb:/ipfs/QmPbR5xfMAcYbrHJG6CsUrcWwKHUc3L328pVowZHAWn5td\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 333,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "WBNB",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 336,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "BUSD",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 339,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "amount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[2]",
									"name": "path",
									"type": "address[2]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsOut(uint256,address[2])": "bd5f68b0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[2]\",\"name\":\"path\",\"type\":\"address[2]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xa6ece2fb13d058639a7ba75f1adde256ec5c3120cc77c1342ea8c00a363fc00c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc4583542d0d52e3c2c74253a05d1ba859a5a6f9a9fb293ca020c81cf0af5c56\",\"dweb:/ipfs/QmPbR5xfMAcYbrHJG6CsUrcWwKHUc3L328pVowZHAWn5td\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/LpPrice.sol:246:9:\n    |\n246 |         uint256[] memory price0 = routerAddress.getAmountsOut(amount,[busd, busd]);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 9255,
					"file": "contracts/LpPrice.sol",
					"start": 9232
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/LpPrice.sol": {
				"ast": {
					"absolutePath": "contracts/LpPrice.sol",
					"exportedSymbols": {
						"Address": [
							317
						],
						"IERC20": [
							25
						],
						"LpUtils": [
							375
						],
						"Router": [
							330
						]
					},
					"id": 376,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "IERC20",
							"nameLocation": "70:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "84:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "167:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "204:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:0"
									},
									"scope": 25,
									"src": "158:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "230:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "236:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:9:0"
									},
									"scope": 25,
									"src": "221:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "288:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:9:0"
									},
									"scope": 25,
									"src": "279:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "346:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:17:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:9:0"
									},
									"scope": 25,
									"src": "337:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 376,
							"src": "60:348:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 317,
							"linearizedBaseContracts": [
								317
							],
							"name": "Address",
							"nameLocation": "420:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1486:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 33,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1715:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1715:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1715:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1737:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1715:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 32,
												"id": 38,
												"nodeType": "Return",
												"src": "1708:30:0"
											}
										]
									},
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "435:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1429:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1448:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1440:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1439:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1480:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:6:0"
									},
									"scope": 317,
									"src": "1420:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "2752:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 51,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2779:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		],
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2771:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 49,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2771:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2771:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2771:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 54,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "2796:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2771:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2804:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 48,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2763:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "2763:73:0"
											},
											{
												"assignments": [
													60,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2855:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "2850:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 59,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2850:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 67,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2898:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 61,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2868:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2868:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 63,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "2890:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2868:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2868:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2849:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 69,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "2920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2929:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2912:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2912:78:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1754:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2690:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2716:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2700:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2735:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2727:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2699:43:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2752:0:0"
									},
									"scope": 317,
									"src": "2681:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3849:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 85,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3880:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 86,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3888:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3894:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 84,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															91,
															111
														],
														"referencedDeclaration": 111,
														"src": "3867:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3867:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 83,
												"id": 89,
												"nodeType": "Return",
												"src": "3860:67:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3006:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3769:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3790:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3782:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3811:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3798:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3798:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3781:35:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3835:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 81,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:14:0"
									},
									"scope": 317,
									"src": "3760:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4316:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 104,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4356:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 105,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "4364:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4370:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 107,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "4373:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 103,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															131,
															181
														],
														"referencedDeclaration": 181,
														"src": "4334:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4334:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 102,
												"id": 109,
												"nodeType": "Return",
												"src": "4327:59:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3943:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4174:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4205:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4197:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4235:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4222:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 95,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4222:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4264:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4250:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 97,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4250:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:97:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4302:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4302:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4301:14:0"
									},
									"scope": 317,
									"src": "4165:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "4916:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 124,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "4956:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 125,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 126,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "4970:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4977:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 123,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															131,
															181
														],
														"referencedDeclaration": 181,
														"src": "4934:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4934:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 129,
												"nodeType": "Return",
												"src": "4927:94:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "4402:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4778:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4818:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4810:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4848:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4835:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4871:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4863:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4799:84:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4902:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4902:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4901:14:0"
									},
									"scope": 317,
									"src": "4769:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5469:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 148,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5496:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		],
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5488:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 146,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5488:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5488:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5488:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 151,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "5513:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5488:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5520:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5480:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "5480:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 158,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "5591:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 157,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "5580:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5580:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5600:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5572:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "5572:60:0"
											},
											{
												"assignments": [
													164,
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 164,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5651:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5646:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 163,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5646:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5673:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5660:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 165,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5660:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"arguments": [
														{
															"id": 171,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "5713:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 167,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "5687:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5687:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 169,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "5706:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5687:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5687:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5645:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "5753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 176,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "5762:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 177,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5774:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 174,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "5736:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5736:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 144,
												"id": 179,
												"nodeType": "Return",
												"src": "5729:58:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "5037:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5294:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5334:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5326:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5364:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5351:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5351:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5387:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5379:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5417:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5403:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 139,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5403:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:121:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5455:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5455:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5454:14:0"
									},
									"scope": 317,
									"src": "5285:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "6080:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6117:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "6125:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6131:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 191,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															198,
															233
														],
														"referencedDeclaration": 233,
														"src": "6098:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6098:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 190,
												"id": 196,
												"nodeType": "Return",
												"src": "6091:80:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "5803:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5989:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6016:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6008:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6037:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6024:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 185,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6024:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:35:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6066:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6065:14:0"
									},
									"scope": 317,
									"src": "5980:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "6533:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 212,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "6563:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 211,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "6552:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6552:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6572:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6544:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "6544:67:0"
											},
											{
												"assignments": [
													218,
													220
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6630:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 232,
														"src": "6625:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 217,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6625:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6652:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 232,
														"src": "6639:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 219,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6639:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 225,
												"initialValue": {
													"arguments": [
														{
															"id": 223,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "6684:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6666:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6666:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6666:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6624:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 228,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "6733:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 229,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6745:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 226,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "6707:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6707:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 209,
												"id": 231,
												"nodeType": "Return",
												"src": "6700:58:0"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "6187:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6380:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6434:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6434:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6476:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6462:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6462:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:97:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6519:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6519:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6518:14:0"
									},
									"scope": 317,
									"src": "6371:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "7050:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7089:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "7097:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7103:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 243,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															250,
															285
														],
														"referencedDeclaration": 285,
														"src": "7068:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7068:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 242,
												"id": 248,
												"nodeType": "Return",
												"src": "7061:84:0"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "6774:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6962:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6991:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "6983:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "6999:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6999:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6982:35:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "7036:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7036:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7035:14:0"
									},
									"scope": 317,
									"src": "6953:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "7506:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 264,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "7536:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 263,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "7525:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7525:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7545:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7517:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "7517:69:0"
											},
											{
												"assignments": [
													270,
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7605:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "7600:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 269,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7600:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7627:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "7614:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 271,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7614:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 277,
												"initialValue": {
													"arguments": [
														{
															"id": 275,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "7661:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 273,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "7641:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7641:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7641:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7599:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "7701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 280,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7710:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 281,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "7722:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 278,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "7684:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7684:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 261,
												"id": 283,
												"nodeType": "Return",
												"src": "7677:58:0"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "7161:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7356:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7395:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7387:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7425:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7412:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7412:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7454:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7440:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 256,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7440:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:97:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7492:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7492:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:14:0"
									},
									"scope": 317,
									"src": "7347:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "8135:548:0",
										"statements": [
											{
												"condition": {
													"id": 297,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 288,
													"src": "8150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 313,
													"nodeType": "Block",
													"src": "8209:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 301,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "8295:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8295:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8315:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8295:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 311,
																"nodeType": "Block",
																"src": "8610:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 308,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 292,
																					"src": "8636:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 307,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8629:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8629:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 310,
																		"nodeType": "ExpressionStatement",
																		"src": "8629:20:0"
																	}
																]
															},
															"id": 312,
															"nodeType": "IfStatement",
															"src": "8291:374:0",
															"trueBody": {
																"id": 306,
																"nodeType": "Block",
																"src": "8318:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8441:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8464:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8493:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8487:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8487:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8468:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8537:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8541:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8533:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8533:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8554:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8526:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8526:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8526:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 290,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8493:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 290,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8541:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 305,
																		"nodeType": "InlineAssembly",
																		"src": "8432:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 314,
												"nodeType": "IfStatement",
												"src": "8146:530:0",
												"trueBody": {
													"id": 300,
													"nodeType": "Block",
													"src": "8159:44:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "8181:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 296,
															"id": 299,
															"nodeType": "Return",
															"src": "8174:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "7751:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7980:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8012:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8007:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8007:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8043:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8030:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8030:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8078:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8064:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8064:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7996:101:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8121:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8121:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8120:14:0"
									},
									"scope": 317,
									"src": "7971:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 376,
							"src": "412:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 330,
							"linearizedBaseContracts": [
								330
							],
							"name": "Router",
							"nameLocation": "8700:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "bd5f68b0",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "8723:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "8742:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8737:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "8770:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8752:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
													"typeString": "address[2]"
												},
												"typeName": {
													"baseType": {
														"id": 320,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8752:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 322,
													"length": {
														"hexValue": "32",
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8760:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "8752:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$2_storage_ptr",
														"typeString": "address[2]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8736:39:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "8831:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8817:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 325,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "8817:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 326,
													"nodeType": "ArrayTypeName",
													"src": "8817:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8816:23:0"
									},
									"scope": 330,
									"src": "8714:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 376,
							"src": "8690:153:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 375,
							"linearizedBaseContracts": [
								375
							],
							"name": "LpUtils",
							"nameLocation": "8856:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8dd95002",
									"id": 333,
									"mutability": "mutable",
									"name": "WBNB",
									"nameLocation": "8886:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 375,
									"src": "8871:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 331,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8871:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
										"id": 332,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8893:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "484f4ea9",
									"id": 336,
									"mutability": "mutable",
									"name": "BUSD",
									"nameLocation": "8957:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 375,
									"src": "8942:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 334,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8942:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837383836374262456546343466323332366246384444643139343161343433393338324546324137",
										"id": 335,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8964:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 339,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "9021:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 375,
									"src": "9013:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9013:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 338,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9030:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "9163:182:0",
										"statements": [
											{
												"assignments": [
													353
												],
												"declarations": [
													{
														"constant": false,
														"id": 353,
														"mutability": "mutable",
														"name": "totalSupply",
														"nameLocation": "9182:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "9174:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 352,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9174:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 354,
															"name": "lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "9196:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$25",
																"typeString": "contract IERC20"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "9196:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9196:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9174:45:0"
											},
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "price0",
														"nameLocation": "9249:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "9232:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 360,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9232:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 361,
															"nodeType": "ArrayTypeName",
															"src": "9232:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 370,
												"initialValue": {
													"arguments": [
														{
															"id": 365,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "9286:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"id": 366,
																	"name": "busd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "9294:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 367,
																	"name": "busd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "9300:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 368,
															"isConstant": false,
															"isInlineArray": true,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9293:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
																"typeString": "address[2] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
																"typeString": "address[2] memory"
															}
														],
														"expression": {
															"id": 363,
															"name": "routerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "9258:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Router_$330",
																"typeString": "contract Router"
															}
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getAmountsOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 329,
														"src": "9258:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$2_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,address[2] memory) view external returns (uint256[] memory)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9258:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9232:74:0"
											},
											{
												"expression": {
													"id": 371,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 353,
													"src": "9326:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 372,
												"nodeType": "Return",
												"src": "9319:18:0"
											}
										]
									},
									"functionSelector": "20ae0b6d",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CalcLpPrice",
									"nameLocation": "9067:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9086:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "9079:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$25",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "9079:6:0"
													},
													"referencedDeclaration": 25,
													"src": "9079:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$25",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "9104:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "9097:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$330",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 343,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 330,
														"src": "9097:6:0"
													},
													"referencedDeclaration": 330,
													"src": "9097:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$330",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "busd",
												"nameLocation": "9127:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "9119:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9078:54:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "9155:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9154:9:0"
									},
									"scope": 375,
									"src": "9058:287:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 376,
							"src": "8847:501:0",
							"usedErrors": []
						}
					],
					"src": "33:9315:0"
				},
				"id": 0
			}
		}
	}
}